<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="TVShowsWideListView">
		<control type="group" id="500">	
	        <defaultcontrol always="true">76</defaultcontrol>
			<visible>Control.IsVisible(76)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="image">
				<left>30</left>
				<top>87</top>
				<width>1220</width>
				<height>544</height>	
				<texture border="7">panels/content-panel.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>PanelFadeAnim</include>
			</control>
			
			<control type="list" id="76">	
				<viewtype label="31114">Wide List</viewtype>
				<left>37</left>
				<top>90</top>
				<width>1188</width>
				<height>536</height>
				<pagecontrol>910</pagecontrol>
				<preloaditems>2</preloaditems>
				<onup>76</onup>
				<ondown>76</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<visible>Container.Content(TVShows)</visible>
				<include condition="!Skin.HasSetting(UseTVShowsPosterCover) + [Skin.String(WideListTVShowStyle,1) | Skin.String(WideListTVShowStyle,)]">TVShowsWideListBannerModeLayout</include>
				<include condition="Skin.HasSetting(UseTVShowsPosterCover) + [Skin.String(WideListTVShowStyle,1) | Skin.String(WideListTVShowStyle,)]">TVShowsWideListPosterModeLayout</include>
				<include condition="Skin.String(WideListTVShowStyle,2)">TVShowsWideListClearArtModeLayout</include>
			</control>
				
			<include>WideListViewScrollbar</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	
	<include name="TVShowsWideListBannerModeLayout">
		<itemlayout condition="!Skin.HasSetting(EnableWideListTVShowsLogo)" height="134">
			<control type="image">
				<width>1188</width>
				<height>28</height>	
				<texture border="0,0,0,2">views/wide-list-header.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>WideListHeaderFadeAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>104</width>
				<height>104</height>
				<bordersize>10</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>5</left>
				<top>-1</top>
				<width>400</width>
				<height>30</height>
				<font>WideListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<aligny>center</aligny>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover Case</description>
					<left>0</left>
					<top>30</top>
					<width>509</width>
					<height>104</height>
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>0</left>
					<top>30</top>
					<width>509</width>
					<height>104</height>
					<bordersize>6</bordersize>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Dim</description>
					<left>0</left>
					<top>30</top>
					<width>509</width>
					<height>104</height>
					<texture background="true">dim.png</texture>
					<aspectratio>stretch</aspectratio>
					<bordersize>5</bordersize>
					<visible>!IsEmpty(ListItem.Thumb)</visible>
					<include>CoverDimAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>0</left>
					<top>30</top>
					<width>104</width>
					<height>104</height>
					<bordersize>10</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>	
				<control type="label">
					<description>Label</description>
					<left>5</left>
					<top>-1</top>
					<width>400</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title][COLOR=ListColor2]$INFO[ListItem.Year,  •  ,][/COLOR]</label>
					<aligny>center</aligny>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>404</left>
					<top>-1</top>
					<width>100</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<aligny>center</aligny>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>405</left>
					<top>7</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Genre</description>
					<left>525</left>
					<top>-1</top>
					<width>618</width>
					<height>30</height>
					<font>WideListFont2</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				<control type="textbox">
					<description>Plot</description>
					<left>525</left>
					<top>37</top>
					<width>658</width>
					<height>91</height>
					<font>MediaInfoDescFont</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<wrapmultiline>true</wrapmultiline>
				</control>	
				<control type="image">
					<description>Overlay</description>
					<left>1160</left>
					<top>3</top>
					<width>22</width>
					<height>22</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsWideListOverlay)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</itemlayout>
		<itemlayout condition="Skin.HasSetting(EnableWideListTVShowsLogo)" height="134">	
			<control type="image">
				<width>1188</width>
				<height>28</height>	
				<texture border="0,0,0,2">views/wide-list-header.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>WideListHeaderFadeAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>104</width>
				<height>104</height>
				<bordersize>10</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>5</left>
				<top>-1</top>
				<width>400</width>
				<height>30</height>
				<font>WideListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<aligny>center</aligny>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover</description>
					<left>0</left>
					<top>30</top>
					<width>509</width>
					<height>104</height>
					<bordersize>6</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="label">
					<description>Label</description>
					<left>5</left>
					<top>-1</top>
					<width>400</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title][COLOR=ListColor2]$INFO[ListItem.Year,  •  ,][/COLOR]</label>
					<aligny>center</aligny>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>404</left>
					<top>-1</top>
					<width>100</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<aligny>center</aligny>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>405</left>
					<top>7</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Genre</description>
					<left>525</left>
					<top>-1</top>
					<width>618</width>
					<height>30</height>
					<font>WideListFont2</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				<control type="textbox">
					<description>Plot</description>
					<left>525</left>
					<top>37</top>
					<width>658</width>
					<height>91</height>
					<font>MediaInfoDescFont</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<wrapmultiline>true</wrapmultiline>
				</control>	
				<control type="image">
					<description>Overlay</description>
					<left>1160</left>
					<top>3</top>
					<width>22</width>
					<height>22</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsWideListOverlay)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</itemlayout>		
		<focusedlayout condition="!Skin.HasSetting(EnableWideListTVShowsLogo)" height="134">
			<control type="image">
				<width>1188</width>
				<height>28</height>	
				<texture border="0,0,0,2">views/wide-list-header.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>WideListHeaderFadeAnim</include>
			</control>
			<control type="image">
				<top>28</top>
				<width>1188</width>
				<height>109</height>
				<texture border="0,2,0,2">views/wide-list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(76)</visible>
				<include>ListViewSelectFadeAnim</include>
			</control>
			<control type="image">
				<top>28</top>
				<width>1188</width>
				<height>109</height>
				<texture border="0,2,0,2">views/wide-list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(76)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>104</width>
				<height>104</height>
				<bordersize>10</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
			</control>
			<control type="label">
				<description>Label</description>
				<left>5</left>
				<top>-1</top>
				<width>400</width>
				<height>30</height>
				<font>WideListFont</font>
				<textcolor>SelectedColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<aligny>center</aligny>
				<scroll>true</scroll>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover Case</description>
					<left>0</left>
					<top>30</top>
					<width>509</width>
					<height>104</height>
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewBannerFocusAnim</include>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>0</left>
					<top>30</top>
					<width>509</width>
					<height>104</height>
					<bordersize>6</bordersize>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>stretch</aspectratio>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewBannerFocusAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>0</left>
					<top>30</top>
					<width>104</width>
					<height>104</height>
					<bordersize>10</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
				</control>									
				<control type="label">
					<description>Label</description>
					<left>5</left>
					<top>-1</top>
					<width>400</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title]$INFO[ListItem.Year,  •  ,]</label>
					<aligny>center</aligny>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>404</left>
					<top>-1</top>
					<width>100</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<aligny>center</aligny>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>405</left>
					<top>7</top>
					<width>100</width>
					<height>16</height>			
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Genre</description>
					<left>525</left>
					<top>-1</top>
					<width>618</width>
					<height>30</height>
					<font>WideListFont2</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				<control type="textbox">
					<description>Plot</description>
					<left>525</left>
					<top>37</top>
					<width>658</width>
					<height>91</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				</control>	
				<control type="image">
					<description>Overlay</description>
					<left>1160</left>
					<top>3</top>
					<width>22</width>
					<height>22</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsWideListOverlay)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Skin.HasSetting(EnableWideListTVShowsLogo)" height="134">
			<control type="image">
				<width>1188</width>
				<height>28</height>	
				<texture border="0,0,0,2">views/wide-list-header.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>WideListHeaderFadeAnim</include>
			</control>
			<control type="image">
				<top>28</top>
				<width>1188</width>
				<height>109</height>
				<texture border="0,2,0,2">views/wide-list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(76)</visible>
				<include>ListViewSelectFadeAnim</include>
			</control>
			<control type="image">
				<top>28</top>
				<width>1188</width>
				<height>109</height>
				<texture border="0,2,0,2">views/wide-list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(76)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>104</width>
				<height>104</height>
				<bordersize>10</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
			</control>
			<control type="label">
				<description>Label</description>
				<left>5</left>
				<top>-1</top>
				<width>400</width>
				<height>30</height>
				<font>WideListFont</font>
				<textcolor>SelectedColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<aligny>center</aligny>
				<scroll>true</scroll>
				<visible>!IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover</description>
					<left>0</left>
					<top>30</top>
					<width>509</width>
					<height>104</height>
					<bordersize>6</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
				</control>									
				<control type="label">
					<description>Label</description>
					<left>5</left>
					<top>-1</top>
					<width>400</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title]$INFO[ListItem.Year,  •  ,]</label>
					<aligny>center</aligny>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>404</left>
					<top>-1</top>
					<width>100</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<aligny>center</aligny>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>405</left>
					<top>7</top>
					<width>100</width>
					<height>16</height>			
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Genre</description>
					<left>525</left>
					<top>-1</top>
					<width>618</width>
					<height>30</height>
					<font>WideListFont2</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				<control type="textbox">
					<description>Plot</description>
					<left>525</left>
					<top>37</top>
					<width>658</width>
					<height>91</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				</control>	
				<control type="image">
					<description>Overlay</description>
					<left>1160</left>
					<top>3</top>
					<width>22</width>
					<height>22</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsWideListOverlay)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</focusedlayout>		
	</include>
	
	<include name="TVShowsWideListPosterModeLayout">
		<itemlayout height="134">
			<control type="image">
				<width>1188</width>
				<height>28</height>	
				<texture border="0,0,0,2">views/wide-list-header.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>WideListHeaderFadeAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>4</top>
				<width>94</width>
				<height>128</height>
				<bordersize>10</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>105</left>
				<top>-1</top>
				<width>385</width>
				<height>30</height>
				<font>WideListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<aligny>center</aligny>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover Case</description>
					<left>0</left>
					<top>4</top>
					<width>94</width>
					<height>128</height>
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>0</left>
					<top>4</top>
					<width>94</width>
					<height>128</height>
					<bordersize>6</bordersize>
					<texture background="true">$VAR[PosterThumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Dim</description>
					<left>0</left>
					<top>4</top>
					<width>94</width>
					<height>128</height>
					<texture background="true">dim.png</texture>
					<aspectratio>stretch</aspectratio>
					<bordersize>5</bordersize>
					<visible>!IsEmpty(ListItem.Thumb)</visible>
					<include>CoverDimAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>0</left>
					<top>4</top>
					<width>94</width>
					<height>128</height>
					<bordersize>10</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>									
				<control type="label">
					<description>Label</description>
					<left>105</left>
					<top>-1</top>
					<width>385</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title]</label>
					<aligny>center</aligny>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>105</left>
					<top>36</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="left">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>105</left>
					<top>38</top>
					<width>385</width>
					<font>WideListFont3</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="label">
					<description>Year</description>
					<left>105</left>
					<top>78</top>
					<width>385</width>
					<font>WideListFont3</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]</label>			
				</control>
				<control type="label">
					<description>Episodes</description>
					<left>105</left>
					<top>103</top>
					<width>385</width>
					<font>WideListFont3</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Episode] $LOCALIZE[20360]</label>			
				</control>
				<control type="label">
					<description>Genre</description>
					<left>505</left>
					<top>-1</top>
					<width>638</width>
					<height>30</height>
					<font>WideListFont2</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				<control type="textbox">
					<description>Plot</description>
					<left>505</left>
					<top>37</top>
					<width>678</width>
					<height>91</height>
					<font>MediaInfoDescFont</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<wrapmultiline>true</wrapmultiline>
				</control>	
				<control type="image">
					<description>Overlay</description>
					<left>1160</left>
					<top>3</top>
					<width>22</width>
					<height>22</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsWideListOverlay)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</itemlayout>		
		<focusedlayout height="134">
			<control type="image">
				<width>1188</width>
				<height>28</height>	
				<texture border="0,0,0,2">views/wide-list-header.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>WideListHeaderFadeAnim</include>
			</control>
			<control type="image">
				<top>28</top>
				<width>1188</width>
				<height>109</height>
				<texture border="0,2,0,2">views/wide-list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(76)</visible>
				<include>ListViewSelectFadeAnim</include>
			</control>
			<control type="image">
				<top>28</top>
				<width>1188</width>
				<height>109</height>
				<texture border="0,2,0,2">views/wide-list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(76)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>4</top>
				<width>94</width>
				<height>128</height>
				<bordersize>10</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
			</control>
			<control type="label">
				<description>Label</description>
				<left>105</left>
				<top>-1</top>
				<width>385</width>
				<height>30</height>
				<font>WideListFont</font>
				<textcolor>SelectedColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<aligny>center</aligny>
				<scroll>true</scroll>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover Case</description>
					<left>0</left>
					<top>4</top>
					<width>94</width>
					<height>128</height>
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>0</left>
					<top>4</top>
					<width>94</width>
					<height>128</height>
					<bordersize>6</bordersize>
					<texture background="true">$VAR[PosterThumb]</texture>
					<aspectratio>stretch</aspectratio>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>0</left>
					<top>4</top>
					<width>94</width>
					<height>128</height>
					<bordersize>10</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
				</control>									
				<control type="label">
					<description>Label</description>
					<left>105</left>
					<top>-1</top>
					<width>385</width>
					<height>30</height>
					<font>WideListFont</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title]</label>
					<aligny>center</aligny>
					<scroll>true</scroll>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>105</left>
					<top>36</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="left">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>105</left>
					<top>38</top>
					<width>385</width>
					<font>WideListFont3</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="label">
					<description>Year</description>
					<left>105</left>
					<top>78</top>
					<width>385</width>
					<font>WideListFont3</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]</label>			
				</control>
				<control type="label">
					<description>Episodes</description>
					<left>105</left>
					<top>103</top>
					<width>385</width>
					<font>WideListFont3</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Episode] $LOCALIZE[20360]</label>			
				</control>
				<control type="label">
					<description>Genre</description>
					<left>505</left>
					<top>-1</top>
					<width>638</width>
					<height>30</height>
					<font>WideListFont2</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				<control type="textbox">
					<description>Plot</description>
					<left>505</left>
					<top>37</top>
					<width>678</width>
					<height>91</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				</control>	
				<control type="image">
					<description>Overlay</description>
					<left>1160</left>
					<top>3</top>
					<width>22</width>
					<height>22</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsWideListOverlay)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</focusedlayout>		
	</include>
	
	<include name="TVShowsWideListClearArtModeLayout">
		<itemlayout height="134">
			<control type="image">
				<width>1188</width>
				<height>28</height>	
				<texture border="0,0,0,2">views/wide-list-header.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>WideListHeaderFadeAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>4</top>
				<width>228</width>
				<height>128</height>
				<bordersize>10</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Art(clearart))</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>	
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover Case</description>
					<left>0</left>
					<top>4</top>
					<width>228</width>
					<height>128</height>
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>0</left>
					<top>4</top>
					<width>228</width>
					<height>128</height>
					<bordersize>6</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Dim</description>
					<left>0</left>
					<top>4</top>
					<width>228</width>
					<height>128</height>
					<texture background="true">dim.png</texture>
					<aspectratio>stretch</aspectratio>
					<bordersize>5</bordersize>
					<visible>!IsEmpty(ListItem.Thumb)</visible>
					<include>CoverDimAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>0</left>
					<top>4</top>
					<width>228</width>
					<height>128</height>
					<bordersize>10</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Label</description>
					<left>7</left>
					<top>4</top>
					<width>214</width>
					<height>128</height>
					<font>WideListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title]</label>
					<align>center</align>
					<aligny>center</aligny>
					<visible>IsEmpty(ListItem.Art(clearart))</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>239</left>
					<top>36</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="left">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>239</left>
					<top>38</top>
					<width>251</width>
					<font>WideListFont3</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="label">
					<description>Year</description>
					<left>239</left>
					<top>78</top>
					<width>251</width>
					<font>WideListFont3</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]</label>			
				</control>
				<control type="label">
					<description>Episodes</description>
					<left>239</left>
					<top>103</top>
					<width>251</width>
					<font>WideListFont3</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Episode] $LOCALIZE[20360]</label>			
				</control>
				<control type="label">
					<description>Genre</description>
					<left>505</left>
					<top>-1</top>
					<width>638</width>
					<height>30</height>
					<font>WideListFont2</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				<control type="textbox">
					<description>Plot</description>
					<left>505</left>
					<top>37</top>
					<width>678</width>
					<height>91</height>
					<font>MediaInfoDescFont</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<wrapmultiline>true</wrapmultiline>
				</control>	
				<control type="image">
					<description>Overlay</description>
					<left>1160</left>
					<top>3</top>
					<width>22</width>
					<height>22</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsWideListOverlay)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</itemlayout>		
		<focusedlayout height="134">
			<control type="image">
				<width>1188</width>
				<height>28</height>	
				<texture border="0,0,0,2">views/wide-list-header.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>WideListHeaderFadeAnim</include>
			</control>
			<control type="image">
				<top>28</top>
				<width>1188</width>
				<height>109</height>
				<texture border="0,2,0,2">views/wide-list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(76)</visible>
				<include>ListViewSelectFadeAnim</include>
			</control>
			<control type="image">
				<top>28</top>
				<width>1188</width>
				<height>109</height>
				<texture border="0,2,0,2">views/wide-list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(76)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>4</top>
				<width>228</width>
				<height>128</height>
				<bordersize>10</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Art(clearart))</visible>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover Case</description>
					<left>0</left>
					<top>4</top>
					<width>228</width>
					<height>128</height>
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>0</left>
					<top>4</top>
					<width>228</width>
					<height>128</height>
					<bordersize>6</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
					<aspectratio>stretch</aspectratio>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>0</left>
					<top>4</top>
					<width>228</width>
					<height>128</height>
					<bordersize>10</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">WideListViewCoverFocusAnim</include>
				</control>
				<control type="label">
					<description>Label</description>
					<left>7</left>
					<top>4</top>
					<width>214</width>
					<height>128</height>
					<font>WideListFont</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title]</label>
					<align>center</align>
					<aligny>center</aligny>
					<scroll>true</scroll>
					<visible>IsEmpty(ListItem.Art(clearart))</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>239</left>
					<top>36</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="left">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>239</left>
					<top>38</top>
					<width>251</width>
					<font>WideListFont3</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="label">
					<description>Year</description>
					<left>239</left>
					<top>78</top>
					<width>251</width>
					<font>WideListFont3</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]</label>			
				</control>
				<control type="label">
					<description>Episodes</description>
					<left>239</left>
					<top>103</top>
					<width>251</width>
					<font>WideListFont3</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Episode] $LOCALIZE[20360]</label>			
				</control>
				<control type="label">
					<description>Genre</description>
					<left>505</left>
					<top>-1</top>
					<width>700</width>
					<height>30</height>
					<font>WideListFont2</font>
					<textcolor>SelectedColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<aligny>center</aligny>
				</control>
				<control type="textbox">
					<description>Plot</description>
					<left>505</left>
					<top>37</top>
					<width>678</width>
					<height>91</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<align>justify</align>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				</control>	
				<control type="image">
					<description>Overlay</description>
					<left>1160</left>
					<top>3</top>
					<width>22</width>
					<height>22</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsWideListOverlay)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</focusedlayout>		
	</include>
	
	<include name="TVShowsListInfoView">
		<control type="group" id="500">			    
			<defaultcontrol always="true">61</defaultcontrol>
			<visible>Control.IsVisible(61)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ListInfoViewContentPanel</include>
			
			<include condition="!Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfoBannerMode</include>
			<include condition="Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfoPosterMode</include>
			<include>SeasonsListInfoPosterMode</include>
			
			<control type="list" id="61">	
				<viewtype label="31111">List Info</viewtype>
				<left>720</left>
				<top>332</top>
				<width>505</width>
				<height>296</height>
				<pagecontrol>905</pagecontrol>
				<preloaditems>2</preloaditems>
				<onup>61</onup>
				<ondown>61</ondown>
				<onleft>850</onleft>
				<onright>150</onright>	
				<visible>Container.Content(TVShows) | Container.Content(Seasons)</visible>
				<itemlayout height="37">
					<control type="image">
						<left>0</left>
						<width>505</width>
						<height>37</height>	
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Icon</description>
						<left>5</left>
						<top>6</top>
						<width>23</width>
						<height>23</height>
						<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>IsEmpty(ListItem.Title)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>5</left>
						<width>26</width>
						<height>37</height>
						<font>ListFont3</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>5</left>
						<width>26</width>
						<height>37</height>
						<font>ListFont4</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>5</left>
						<width>26</width>
						<height>37</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<left>5</left>
						<width>26</width>
						<height>37</height>
						<aligny>center</aligny>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>35</left>
						<width>365</width>
						<height>37</height>
						<font>ListFont</font>
						<textcolor>ListColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<aligny>center</aligny>				
						<label>$VAR[ListTallStyleLabel]</label>
					</control>
					<control type="label">
						<description>Label2</description>
						<left>295</left>
						<width>200</width>
						<height>37</height>
						<font>ListFont2</font>
						<textcolor>ListColor3</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>right</align>
						<aligny>center</aligny>				
						<info>ListItem.Label2</info>
						<visible>Skin.HasSetting(DoNotUseStarRatingTVShows) + !StringCompare(Container.SortMethod,$LOCALIZE[369])</visible>
					</control>
					<control type="image">
						<description>Star Rating</description>
						<left>395</left>
						<top>10</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$VAR[StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
						<animation effect="fade" end="70" condition="true">Conditional</animation>	
					</control>
				</itemlayout>		
				<focusedlayout height="37">	
					<control type="image">
						<left>0</left>
						<width>505</width>
						<height>37</height>	
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<left>0</left>
						<width>505</width>
						<height>36</height>	
						<texture border="4">views/list-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>Control.HasFocus(61)</visible>
						<include>ListViewSelectFadeAnim</include>
						<include condition="!Skin.HasSetting(DisableListScrollAnim)">ListViewScrollAnim</include>
					</control>
					<control type="image">
						<left>0</left>
						<width>505</width>
						<height>36</height>	
						<texture border="4">views/list-alt-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Control.HasFocus(61)</visible>
						<include>ListViewSelectFadeAnim2</include>
					</control>
					<control type="group">
						<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewFocusAnim</include>
						<control type="image">
							<description>Icon</description>
							<left>5</left>
							<top>6</top>
							<width>23</width>
							<height>23</height>
							<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>5</left>
							<width>26</width>
							<height>37</height>
							<font>ListFont3</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>5</left>
							<width>26</width>
							<height>37</height>
							<font>ListFont4</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
						</control>
						<control type="image">
							<description>Unwatched Overlay</description>
							<left>5</left>
							<width>26</width>
							<height>37</height>
							<aligny>center</aligny>
							<texture background="true">OverlayClean.png</texture>
							<aspectratio>keep</aspectratio>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
						</control>
						<control type="image">
							<description>Watched Overlay</description>
							<left>5</left>
							<width>26</width>
							<height>37</height>
							<aligny>center</aligny>
							<texture background="true">$INFO[ListItem.Overlay]</texture>
							<aspectratio>keep</aspectratio>
							<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="label">
							<description>Label</description>
							<left>35</left>
							<width>365</width>
							<height>37</height>
							<font>ListFont</font>
							<textcolor>SelectedColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<aligny>center</aligny>
							<label>$VAR[ListTallStyleLabel]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<description>Label2</description>
							<left>295</left>
							<width>200</width>
							<height>37</height>
							<font>ListFont2</font>
							<textcolor>ListColor3</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<align>right</align>
							<aligny>center</aligny>				
							<info>ListItem.Label2</info>
							<visible>Skin.HasSetting(DoNotUseStarRatingTVShows) + !StringCompare(Container.SortMethod,$LOCALIZE[369])</visible>
						</control>
						<control type="image">
							<description>Star Rating</description>
							<left>395</left>
							<top>10</top>
							<width>100</width>
							<height>16</height>		
							<texture background="true">$VAR[StarRating]</texture>
							<aspectratio align="right">keep</aspectratio>
							<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
							<animation effect="fade" end="70" condition="true">Conditional</animation>
						</control>
					</control>
				</focusedlayout>		
			</control>	
		
			<include>ListInfoViewScrollbar</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>	
	</include>
	
	<include name="TVShowsListInfoBannerMode">
		<control type="group">
			<visible>!IsEmpty(ListItem.Title) + !Container.Content(Seasons)</visible>
			
			<control type="group">
				<description>Cover</description>
				
				<control type="image">
					<description>Cover Background</description>
					<left>39</left>
					<top>337</top>
					<width>671</width>
					<height>127</height>
					<texture background="true" border="4">panels/panel3.png</texture>
					<aspectratio>stretch</aspectratio>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<description>Default Cover</description>
					<left>39</left>
					<top>337</top>
					<width>671</width>
					<height>127</height>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<bordersize>15</bordersize>	
					<aspectratio>keep</aspectratio>
					<fadetime>IconCrossfadeTime</fadetime>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="60" condition="true">Conditional</animation>
				</control>		
					
				<control type="image">
					<description>Cover</description>
					<left>39</left>
					<top>337</top>
					<width>671</width>
					<height>127</height>
					<texture background="true" diffuse="covers/list-info-banner-diffuse.png">$VAR[BannerThumb]</texture>
					<aspectratio>stretch</aspectratio>
					<bordersize>1</bordersize>
					<fadetime>IconCrossfadeTime</fadetime>
				</control>
			</control>	
			
			<control type="image">
				<description>Genre Background</description>
				<left>43</left>
				<top>341</top>
				<width>250</width>
				<height>27</height>
				<texture border="8">views/genre-background.png</texture>
				<visible>!IsEmpty(ListItem.Genre) + !IsEmpty(Window(Home).Property(NextAired.Genre)) + !Skin.HasSetting(HideTVShowsGenres)</visible>
			</control>
						
			<control type="label">
				<description>Genre</description>
				<left>50</left>
				<top>343</top>
				<width>234</width>
				<font>MediaInfoFont3</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
				<scroll>false</scroll>
				<animation effect="fade" end="90" condition="true">Conditional</animation>
				<visible>!IsEmpty(ListItem.Genre) + !Skin.HasSetting(HideTVShowsGenres)</visible>
			</control>
			
			<control type="label">
				<description>Next Aired Genre</description>
				<left>50</left>
				<top>343</top>
				<width>234</width>
				<font>MediaInfoFont3</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[Window(Home).Property(NextAired.Genre)][/UPPERCASE]</label>
				<scroll>false</scroll>
				<animation effect="fade" end="90" condition="true">Conditional</animation>
				<visible>IsEmpty(ListItem.Genre) + !IsEmpty(Window(Home).Property(NextAired.Genre)) + !Skin.HasSetting(HideTVShowsGenres)</visible>
			</control>
	
			<control type="textbox">
				<description>Plot</description>
				<left>43</left>
				<top>473</top>
				<width>662</width>
				<height>112</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[ListItem.Plot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<visible>!Container.OnNext + !Container.OnPrevious</visible> 
				<include>ControlsOpenCloseAnim</include>
			</control>
			
			<control type="grouplist">
				<description>Media Info</description>
				<left>44</left>
				<top>585</top>
				<width>660</width>
				<align>center</align>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<description>Seasons</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[33054]:</label>
				</control>
				<control type="label">
					<description>Seasons Value</description>
					<width min="0" max="166">auto</width>
					<scroll>true</scroll>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Episodes</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[20360]:</label>
				</control>
				<control type="label">
					<description>Episodes Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Episode]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Year</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[345]:</label>
				</control>
				<control type="label">
					<description>Year Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Year]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Rating</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[563]:</label>
				</control>
				<control type="label">
					<description>Rating Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Rating]</label>
				</control>
			</control>
		</control>
	</include>
	
	<include name="TVShowsListInfoPosterMode">
		<control type="group">
			<visible>!IsEmpty(ListItem.Title) + !Container.Content(Seasons)</visible>
			
			<control type="image">
				<description>Cover Background</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true" border="4">panels/panel3.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Default Cover</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<bordersize>30</bordersize>	
				<aspectratio>keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="60" condition="true">Conditional</animation>
			</control>	
			
			<control type="image">
				<description>Cover</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true" diffuse="covers/list-info-poster-diffuse.png">$VAR[PosterThumb]</texture>
				<bordersize>1</bordersize>
				<aspectratio>stretch</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
			</control>

			<control type="label">
				<description>Genre</description>
				<left>227</left>
				<top>341</top>
				<width>476</width>
				<align>center</align>
				<font>MediaInfoFont2</font>
				<textcolor>MediaInfoItemColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
				<scroll>false</scroll>
			</control>
			
			<control type="group">
				<left>227</left>
				<top>378</top>
				<control type="grouplist">
					<description>Latest episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31966]:</label>
					</control>
					<control type="label">
						<width min="0" max="336">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.LatestTitle), ,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
					</control>
				</control>
				
				<control type="grouplist">
					<description>Next episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					<top>25</top>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31967]:</label>
					</control>
					<control type="label">
						<width min="0" max="351">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
					</control>
				</control>
				
				<control type="grouplist">
					<description>Next episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					<top>25</top>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[20416]:</label>
					</control>
					<control type="label">
						<width min="0" max="351">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label fallback="31001">$INFO[ListItem.Premiered]</label>
					</control>
				</control>
			</control>			
			
			<control type="textbox">
				<description>Plot</description>
				<left>227</left>
				<top>376</top>
				<width>476</width>
				<height>208</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[ListItem.Plot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<visible>!Container.OnNext + !Container.OnPrevious</visible> 
				<include>ControlsOpenCloseAnim</include>
				<visible>!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]</visible>
			</control>
			
			<control type="textbox">
				<description>Plot</description>
				<left>227</left>
				<top>438</top>
				<width>476</width>
				<height>146</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[ListItem.Plot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<visible>!Container.OnNext + !Container.OnPrevious</visible> 
				<include>ControlsOpenCloseAnim</include>
				<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
			</control>
			
			<control type="grouplist">
				<description>Media Info</description>
				<left>44</left>
				<top>585</top>
				<width>660</width>
				<align>center</align>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<description>Seasons</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[33054]:</label>
				</control>
				<control type="label">
					<description>Seasons Value</description>
					<width min="0" max="166">auto</width>
					<scroll>true</scroll>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Episodes</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[20360]:</label>
				</control>
				<control type="label">
					<description>Episodes Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Episode]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Year</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[345]:</label>
				</control>
				<control type="label">
					<description>Year Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Year]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Rating</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[563]:</label>
				</control>
				<control type="label">
					<description>Rating Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Rating]</label>
				</control>
			</control>
		</control>
	</include>
	
	<include name="SeasonsListInfoPosterMode">
		<control type="group">
			<visible>!IsEmpty(ListItem.Title) + Container.Content(Seasons)</visible>
			
			<control type="image">
				<description>Cover Background</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true" border="4">panels/panel3.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>	
			
			<control type="image">
				<description>Default Cover</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<bordersize>30</bordersize>	
				<aspectratio>keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="60" condition="true">Conditional</animation>
			</control>	
			
			<control type="image">
				<description>Cover</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true" diffuse="covers/list-info-poster-diffuse.png">$VAR[PosterThumb]</texture>
				<bordersize>1</bordersize>
				<aspectratio>stretch</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
			</control>			

			<control type="label">
				<description>Genre</description>
				<left>227</left>
				<top>341</top>
				<width>476</width>
				<align>center</align>
				<font>MediaInfoFont2</font>
				<textcolor>MediaInfoItemColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
				<scroll>true</scroll>
			</control>
			
			<control type="group">
				<left>227</left>
				<top>378</top>
				<control type="grouplist">
					<description>Latest episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31966]:</label>
					</control>
					<control type="label">
						<width min="0" max="336">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.LatestTitle), ,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
					</control>
				</control>
				
				<control type="grouplist">
					<description>Next episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					<top>25</top>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31967]:</label>
					</control>
					<control type="label">
						<width min="0" max="351">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
					</control>
				</control>
				
				<control type="grouplist">
					<description>Next episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					<top>25</top>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[20416]:</label>
					</control>
					<control type="label">
						<width min="0" max="351">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label fallback="31001">$INFO[ListItem.Premiered]</label>
					</control>
				</control>
			</control>
			
			<control type="textbox">
				<description>Plot</description>
				<left>227</left>
				<top>376</top>
				<width>476</width>
				<height>208</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[ListItem.Plot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<include>ControlsOpenCloseAnim</include>
				<visible>!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]</visible>
			</control>
			
			<control type="textbox">
				<description>Plot</description>
				<left>227</left>
				<top>438</top>
				<width>476</width>
				<height>146</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[ListItem.Plot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<include>ControlsOpenCloseAnim</include>
				<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
			</control>
			
			<control type="grouplist">
				<description>Media Info</description>
				<left>44</left>
				<top>585</top>
				<width>660</width>
				<align>center</align>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<description>Studio</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[572]:</label>
				</control>
				<control type="label">
					<description>Studio Value</description>
					<width min="0" max="200">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<scroll>true</scroll>
					<label fallback="31001">$INFO[ListItem.Studio]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Premiered</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[31936]:</label>
				</control>
				<control type="label">
					<description>Premiered Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Premiered]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Episodes</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[20360]:</label>
				</control>
				<control type="label">
					<description>Episodes Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Episode]</label>
				</control>
			</control>
		</control>
	</include>
	
	<include name="TVShowsListInfoView2">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">65</defaultcontrol>
			<visible>Control.IsVisible(65)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ViewContentPanel</include>
			
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<include>ListInfo2MediaInfoPanelCommon</include>
				<include condition="!Skin.HasSetting(ShowTVShowsLandscape)">ListInfo2PanelFanart</include>
				<include condition="Skin.HasSetting(ShowTVShowsLandscape)">ListInfo2PanelLandscape</include>
				
				<control type="group">
					<description>Media Info Area</description>
					<left>38</left>
					<top>430</top>
		
					<control type="grouplist">
						<description>Studio</description>
						<left>10</left>
						<top>0</top>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[572]:</label>
						</control>
						<control type="label">
							<width min="0" max="310">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Studio]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Episodes</description>
						<left>10</left>
						<top>22</top>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20360]:</label>
						</control>
						<control type="label">
							<width min="0" max="310">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Episode]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Year</description>
						<left>406</left>
						<top>0</top>
						<width>130</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[345]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Year]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Rating</description>
						<left>406</left>
						<top>22</top>
						<width>130</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[563]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Rating]</label>
						</control>
					</control>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>48</left>
					<top>494</top>
					<width>526</width>
					<height>120</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
			</control>
			
			<control type="list" id="65">	
				<viewtype label="31112">List Info 2</viewtype>
				<left>595</left>
				<top>110</top>
				<width>630</width>
				<height>518</height>
				<pagecontrol>906</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">300</scrolltime>
				<onup>65</onup>
				<ondown>65</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<visible>Container.Content(TVShows)</visible>
				<include condition="Skin.String(TVShowsListInfo2Style,1) | Skin.String(TVShowsListInfo2Style,3)">TVShowsListInfo2ItemLayout</include>
				<include condition="[Skin.String(TVShowsListInfo2Style,) | Skin.String(TVShowsListInfo2Style,2)] + Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfo2TallStyleItemLayout</include>
				<include condition="[Skin.String(TVShowsListInfo2Style,) | Skin.String(TVShowsListInfo2Style,2)] + !Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfo2BannerStyleItemLayout</include>
				<include condition="Skin.String(TVShowsListInfo2Style,1)">TVShowsListInfo2FocusedLayout</include>
				<include condition="[Skin.String(TVShowsListInfo2Style,) | Skin.String(TVShowsListInfo2Style,2) | Skin.String(TVShowsListInfo2Style,3)] + Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfo2TallStyleFocusedLayout</include>
				<include condition="[Skin.String(TVShowsListInfo2Style,) | Skin.String(TVShowsListInfo2Style,2) | Skin.String(TVShowsListInfo2Style,3)] + !Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfo2BannerStyleFocusedLayout</include>
			</control>
			
			<include>ListInfo2ViewScrollbar</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	
	<include name="TVShowsListInfo2ItemLayout">
		<itemlayout height="37">
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<font>ListFont3</font>
				<textcolor>ListColor</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<font>ListFont4</font>
				<textcolor>ListColor</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="image">
				<description>Unwatched Overlay</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<aligny>center</aligny>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
			</control>
			<control type="image">
				<description>Watched Overlay</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<aligny>center</aligny>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>490</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>				
				<info>ListItem.Title</info>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>420</left>
				<width>200</width>
				<height>37</height>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>				
				<info>ListItem.Label2</info>
				<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>520</left>
				<top>10</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$VAR[StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				<animation effect="fade" end="70" condition="true">Conditional</animation>
			</control>
		</itemlayout>
	</include>
	
	<include name="TVShowsListInfo2FocusedLayout">
		<focusedlayout height="37">	
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>36</height>	
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListScrollAnim)">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>36</height>	
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>490</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Title</info>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>420</left>
					<width>200</width>
					<height>37</height>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>				
					<info>ListItem.Label2</info>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>520</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</focusedlayout>			
	</include>
	
	<include name="TVShowsListInfo2TallStyleItemLayout">
		<itemlayout height="74">
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>74</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>60</left>
				<top>12</top>
				<width>465</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>60</left>
				<top>38</top>
				<width>465</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>	
				<label>$INFO[ListItem.Episode,, $LOCALIZE[20360]]$INFO[ListItem.Studio,  •  ,]</label>
			</control>
			<control type="label">
				<description>Year</description>
				<left>520</left>
				<top>38</top>
				<width>100</width>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>	
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="label">
				<description>Rating</description>
				<left>520</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Rating]</label>
				<align>right</align>
				<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>520</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$VAR[StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				<animation effect="fade" end="70" condition="true">Conditional</animation>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>24</left>
				<top>45</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay)</visible>
			</control>	
		</itemlayout>	
	</include>
	
	<include name="TVShowsListInfo2TallStyleFocusedLayout">
		<focusedlayout height="74">	
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>74</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>73</height>
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListScrollAnim) + ![Skin.String(TVShowsListInfo2Style,) | Skin.String(TVShowsListInfo2Style,3)]">ListViewScrollAnim2</include>
				<include condition="!Skin.HasSetting(DisableListScrollAnim) + [Skin.String(TVShowsListInfo2Style,) | Skin.String(TVShowsListInfo2Style,3)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>73</height>
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>			
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewCoverFocusAnim</include>
			</control>		
			<control type="group">
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>60</left>
					<top>12</top>
					<width>465</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>60</left>
					<top>38</top>
					<width>465</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>	
					<label>$INFO[ListItem.Episode,, $LOCALIZE[20360]]$INFO[ListItem.Studio,  •  ,]</label>
				</control>
				<control type="label">
					<description>Year</description>
					<left>520</left>
					<top>38</top>
					<width>100</width>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<label>$INFO[ListItem.Year]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>520</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>520</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>24</left>
					<top>45</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay)</visible>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewCoverFocusAnim</include>
				</control>
			</control>
		</focusedlayout>					
	</include>
	
	<include name="TVShowsListInfo2BannerStyleItemLayout">
		<itemlayout height="129">
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>129</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<top>2</top>
				<width>630</width>
				<height>124</height>
				<align>center</align>
				<bordersize>20</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover</description>
					<left>5</left>
					<top>7</top>
					<width>620</width>
					<height>114</height>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Dim</description>
					<left>5</left>
					<top>7</top>
					<width>620</width>
					<height>114</height>
					<texture background="true">dim.png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>!IsEmpty(ListItem.Thumb)</visible>
					<include>CoverDimAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<top>2</top>
					<width>630</width>
					<height>124</height>
					<align>center</align>
					<bordersize>20</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>516</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>585</left>
					<top>84</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay)</visible>
					<animation effect="fade" end="80" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>585</left>
					<top>84</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio align="right">keep</aspectratio>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>88</top>
					<left>585</left>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>88</top>
					<left>585</left>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
			</control>
		</itemlayout>	
	</include>
	
	<include name="TVShowsListInfo2BannerStyleFocusedLayout">
		<focusedlayout height="129">	
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>129</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>128</height>
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListScrollAnim) + [Skin.String(TVShowsListInfo2Style,) | Skin.String(TVShowsListInfo2Style,3)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>630</width>
				<height>128</height>
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="image">
				<top>2</top>
				<width>630</width>
				<height>124</height>
				<align>center</align>
				<bordersize>20</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>				
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewFocusAnim</include>
				<control type="image">
					<description>Cover</description>
					<left>5</left>
					<top>7</top>
					<width>620</width>
					<height>114</height>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<top>2</top>
					<width>630</width>
					<height>124</height>
					<align>center</align>
					<bordersize>20</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
				</control>				
				<control type="image">
					<description>Star Rating</description>
					<left>516</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>585</left>
					<top>84</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay)</visible>
					<animation effect="fade" end="80" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>585</left>
					<top>84</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio align="right">keep</aspectratio>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>88</top>
					<left>585</left>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>88</top>
					<left>585</left>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
			</control>
		</focusedlayout>					
	</include>
	
	<include name="TVShowsListInfoView3">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">589</defaultcontrol>
			<visible>Control.IsVisible(589)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ViewContentPanel</include>
			<include>ListInfo3MediaInfoPanelCommon</include>
			
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<include condition="!Skin.HasSetting(ShowTVShowsLandscape)">ListInfo3PanelFanart</include>
				<include condition="Skin.HasSetting(ShowTVShowsLandscape)">ListInfo3PanelLandscape</include>
				
				<control type="group">
					<description>Media Info Area</description>
					<left>38</left>
					<top>354</top>
		
					<control type="grouplist">
						<description>Seasons</description>
						<left>10</left>
						<top>0</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[33054]:</label>
						</control>
						<control type="label">
							<width min="0" max="190">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Episodes</description>
						<left>10</left>
						<top>22</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20360]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Property(TotalEpisodes)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Year</description>
						<left>268</left>
						<top>0</top>
						<width>130</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[345]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Year]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Rating</description>
						<left>268</left>
						<top>22</top>
						<width>130</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[563]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Rating]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Latest episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
						<left>10</left>
						<top>62</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31966]:</label>
						</control>
						<control type="label">
							<width min="0" max="250">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.LatestTitle), ,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<left>10</left>
						<top>84</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31967]:</label>
						</control>
						<control type="label">
							<width min="0" max="265">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Premiered</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<left>10</left>
						<top>84</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20416]:</label>
						</control>
						<control type="label">
							<width min="0" max="240">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Premiered]</label>
						</control>
					</control>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>48</left>
					<top>479</top>
					<width>388</width>
					<height>138</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<include>ControlsOpenCloseAnim</include>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>48</left>
					<top>418</top>
					<width>388</width>
					<height>189</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<include>ControlsOpenCloseAnim</include>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]</visible>
				</control>
				
				<include>ListInfo3RightPanelCover</include>
			</control>
			
			<control type="list" id="589">	
				<viewtype label="31115">List Info 3</viewtype>
				<left>456</left>
				<top>110</top>
				<width>354</width>
				<height>518</height>
				<pagecontrol>917</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">300</scrolltime>
				<onup>589</onup>
				<ondown>589</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<visible>Container.Content(TVShows)</visible>
				<itemlayout height="37">
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>37</height>	
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Icon</description>
						<left>4</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>IsEmpty(ListItem.Title)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>					
					<control type="label">
						<description>Label</description>
						<left>35</left>
						<width>310</width>
						<height>37</height>
						<font>ListFont</font>
						<textcolor>ListColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<aligny>center</aligny>				
						<info>ListItem.Label</info>
						<visible>IsEmpty(ListItem.Title)</visible>
					</control>
					<control type="group">
						<visible>!IsEmpty(ListItem.Title)</visible>
						<control type="label">
							<description>Label</description>
							<left>35</left>
							<width>310</width>
							<height>37</height>
							<font>ListFont</font>
							<textcolor>white</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<aligny>center</aligny>				
							<info>ListItem.Title</info>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>3</left>
							<width>26</width>
							<height>37</height>
							<font>ListFont3</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>3</left>
							<width>26</width>
							<height>37</height>
							<font>ListFont4</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
						</control>
						<control type="image">
							<description>Unwatched Overlay</description>
							<left>3</left>
							<width>26</width>
							<height>37</height>
							<aligny>center</aligny>
							<texture background="true">OverlayClean.png</texture>
							<aspectratio>keep</aspectratio>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
						</control>
						<control type="image">
							<description>Watched Overlay</description>
							<left>3</left>
							<width>26</width>
							<height>37</height>
							<aligny>center</aligny>
							<texture background="true">$INFO[ListItem.Overlay]</texture>
							<aspectratio>keep</aspectratio>
							<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>		
				<focusedlayout height="37">	
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>37</height>	
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>36</height>	
						<texture border="4">views/list-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>Control.HasFocus(589)</visible>
						<include>ListViewSelectFadeAnim</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewScrollAnim</include>
					</control>
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>36</height>	
						<texture border="4">views/list-alt-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Control.HasFocus(589)</visible>
						<include>ListViewSelectFadeAnim2</include>
					</control>
					<control type="group">
						<include>ListViewFocusAnim</include>
						<control type="image">
							<description>Icon</description>
							<left>4</left>
							<top>6</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="label">
							<description>Label</description>
							<left>35</left>
							<width>310</width>
							<height>37</height>
							<font>ListFont</font>
							<textcolor>SelectedColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<aligny>center</aligny>
							<info>ListItem.Label</info>
							<scroll>true</scroll>
							<visible>IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="group">
							<visible>!IsEmpty(ListItem.Title)</visible>
							<control type="label">
								<description>Label</description>
								<left>35</left>
								<width>310</width>
								<height>37</height>
								<font>ListFont</font>
								<textcolor>SelectedColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Title]</label>
								<scroll>true</scroll>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<left>3</left>
								<width>26</width>
								<height>37</height>
								<font>ListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<left>3</left>
								<width>26</width>
								<height>37</height>
								<font>ListFont4</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>3</left>
								<width>26</width>
								<height>37</height>
								<aligny>center</aligny>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="image">
								<description>Watched Overlay</description>
								<left>3</left>
								<width>26</width>
								<height>37</height>
								<aligny>center</aligny>
								<texture background="true">$INFO[ListItem.Overlay]</texture>
								<aspectratio>keep</aspectratio>
								<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
							</control>	
						</control>
					</control>
				</focusedlayout>		
			</control>			
			
			<include>ListInfo3ViewScrollbar</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>	

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	
	<include name="TVShowsThumbsInfoView">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">100</defaultcontrol>
			<visible>Control.IsVisible(100)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ViewContentPanel</include>
			
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<include>ListInfo3MediaInfoPanelCommon</include>
				<include condition="!Skin.HasSetting(ShowTVShowsLandscape)">ListInfo3PanelFanart</include>
				<include condition="Skin.HasSetting(ShowTVShowsLandscape)">ListInfo3PanelLandscape</include>
				
				<control type="group">
					<description>Media Info Area</description>
					<left>38</left>
					<top>354</top>
		
					<control type="grouplist">
						<description>Studio</description>
						<left>10</left>
						<top>0</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[572]:</label>
						</control>
						<control type="label">
							<width min="0" max="190">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Studio]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Episodes</description>
						<left>10</left>
						<top>22</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20360]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Episode]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Year</description>
						<left>268</left>
						<top>0</top>
						<width>130</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[345]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Year]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Rating</description>
						<left>268</left>
						<top>22</top>
						<width>130</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[563]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Rating]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Latest episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
						<left>10</left>
						<top>62</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31966]:</label>
						</control>
						<control type="label">
							<width min="0" max="250">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.LatestTitle), ,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<left>10</left>
						<top>84</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31967]:</label>
						</control>
						<control type="label">
							<width min="0" max="265">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<left>10</left>
						<top>84</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20416]:</label>
						</control>
						<control type="label">
							<width min="0" max="240">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Premiered]</label>
						</control>
					</control>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>48</left>
					<top>418</top>
					<width>388</width>
					<height>189</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>48</left>
					<top>479</top>
					<width>388</width>
					<height>138</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<include>ControlsOpenCloseAnim</include>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
				</control>
			</control>
			
			<include condition="Skin.String(ThumbsInfoTVShowStyle,1) | Skin.String(ThumbsInfoTVShowStyle,)">TVShowsThumbsInfoDefaultStyle</include>
			<include condition="Skin.String(ThumbsInfoTVShowStyle,2)">TVShowsThumbsInfoLogoStyle</include>
			<include condition="Skin.String(ThumbsInfoTVShowStyle,3)">TVShowsThumbsInfoClearArtStyle</include>

			<include>ThumbsInfoViewScrollbar</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>	

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	
	<include name="TVShowsThumbsInfoDefaultStyle">
		<control type="panel" id="100">
			<viewtype label="31116">Thumbs Info</viewtype>
			<left>450</left>
			<top>111</top>
			<width>776</width>
			<height>514</height>
			<pagecontrol>918</pagecontrol>
			<scrolltime tween="sine" easing="inout">350</scrolltime>
			<orientation>vertical</orientation>
			<preloaditems>2</preloaditems>
			<onleft>850</onleft>
			<onright>150</onright>
			<onup>100</onup>
			<ondown>100</ondown>
			<visible>Container.Content(TVShows)</visible>
			<itemlayout width="129" height="171" condition="Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-2</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>135</width>
						<height>178</height>
						<texture background="true" border="4">covers/cover-case2.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>6</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>135</width>
						<height>178</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>135</width>
						<height>178</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>10</bordersize>
					</control>
					<control type="image">
						<description>Dim</description>
						<width>135</width>
						<height>178</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>10</bordersize>
						<visible>!IsEmpty(ListItem.Thumb)</visible>
						<include>CoverDimAnim</include>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>96</left>
						<top>138</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>	
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>96</left>
						<top>138</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio align="right">keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>142</top>
						<left>96</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>142</top>
						<left>96</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>
			</itemlayout>
			<itemlayout width="386" height="73" condition="!Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-3</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>395</width>
						<height>83</height>
						<texture background="true" border="4">covers/cover-case2.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>6</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>395</width>
						<height>83</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>395</width>
						<height>83</height>
						<texture background="true">$INFO[ListItem.Art(banner)]</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>10</bordersize>
					</control>
					<control type="image">
						<description>Dim</description>
						<width>395</width>
						<height>83</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>10</bordersize>
						<visible>!IsEmpty(ListItem.Thumb)</visible>
						<include>CoverDimAnim</include>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>355</left>
						<top>43</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>355</left>
						<top>43</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio align="right">keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>47</top>
						<left>355</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>47</top>
						<left>355</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + Container.Column(0) + Container.Row(0) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Top Left Corner Cover</description>
					<top>-2</top>
					<include>DVDThumbsStyleTopLeftCornerFocusAnim</include>
					<include>DVDThumbsStyleCoverImage</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + !Container.Column(0) + !Container.Column(5) + Container.Row(0) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Top Edge Cover</description>
					<top>-2</top>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleTopEdgeFocusAnim</include>
					<include>DVDThumbsStyleCoverImage</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + Container.Column(5) + Container.Row(0) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Top Right Corner Cover</description>
					<top>-2</top>
					<include>DVDThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleTopRightCornerFocusAnim</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + Container.Column(0) + Container.Row(1) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Left Edge Cover</description>
					<top>-2</top>
					<include>DVDThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleLeftEdgeFocusAnim</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + !Container.Row(0) + !Container.Row(2) + !Container.Column(0) + !Container.Column(5) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Mid Row Cover</description>
					<top>-2</top>
					<include>DVDThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleMidRowFocusAnim</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + Container.Column(5) + Container.Row(1) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Right Edge Cover</description>
					<top>-2</top>
					<include>DVDThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleRightEdgeFocusAnim</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + Container.Column(0) + Container.Row(2) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Bottom Left Corner Cover</description>
					<top>-2</top>
					<include>DVDThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleBottomLeftCornerFocusAnim</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + !Container.Column(0) + !Container.Column(5) + Container.Row(2) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Bottom Edge Cover</description>
					<top>-2</top>
					<include>DVDThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleBottomEdgeFocusAnim</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="!IsEmpty(ListItem.Thumb) + Container.Column(5) + Container.Row(2) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Bottom Right Corner Cover</description>
					<top>-2</top>
					<include>DVDThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleBottomRightCornerFocusAnim</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="IsEmpty(ListItem.Thumb) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-2</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>135</width>
						<height>178</height>
						<aspectratio>stretch</aspectratio>
						<bordersize>7</bordersize>
						<texture background="true" border="2">covers/cover-case-noshadow-focus.png</texture>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>135</width>
						<height>178</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>96</left>
						<top>133</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
					</control>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="!IsEmpty(ListItem.Thumb) + Container.Column(0) + Container.Row(0) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Top Left Corner Cover</description>
					<top>-3</top>
					<include>DVDThumbsStyleCoverImageBanner</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleTopLeftCornerFocusAnim2</include>
					<include>DVDThumbsStyleOverlayImageBanner</include>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="!IsEmpty(ListItem.Thumb) + Container.Column(1) + Container.Row(0) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Top Right Corner Cover</description>
					<top>-3</top>
					<include>DVDThumbsStyleCoverImageBanner</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleTopRightCornerFocusAnim2</include>
					<include>DVDThumbsStyleOverlayImageBanner</include>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="!IsEmpty(ListItem.Thumb) + Container.Column(0) + !Container.Row(0) + !Container.Row(6) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Left Edge Cover</description>
					<top>-3</top>
					<include>DVDThumbsStyleCoverImageBanner</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleLeftEdgeFocusAnim2</include>
					<include>DVDThumbsStyleOverlayImageBanner</include>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="!IsEmpty(ListItem.Thumb) + Container.Column(1) + !Container.Row(0) + !Container.Row(6) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Right Edge Cover</description>
					<top>-3</top>
					<include>DVDThumbsStyleCoverImageBanner</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleRightEdgeFocusAnim2</include>
					<include>DVDThumbsStyleOverlayImageBanner</include>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="!IsEmpty(ListItem.Thumb) + Container.Column(0) + Container.Row(6) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Bottom Left Corner Cover</description>
					<top>-3</top>
					<include>DVDThumbsStyleCoverImageBanner</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleBottomLeftCornerFocusAnim2</include>
					<include>DVDThumbsStyleOverlayImageBanner</include>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="!IsEmpty(ListItem.Thumb) + Container.Column(1) + Container.Row(6) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<description>Bottom Right Corner Cover</description>
					<top>-3</top>
					<include>DVDThumbsStyleCoverImageBanner</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">DVDThumbsStyleBottomRightCornerFocusAnim2</include>
					<include>DVDThumbsStyleOverlayImageBanner</include>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="IsEmpty(ListItem.Thumb) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-3</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>395</width>
						<height>83</height>
						<aspectratio>stretch</aspectratio>
						<bordersize>7</bordersize>
						<texture background="true" border="2">covers/cover-case-noshadow-focus.png</texture>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>395</width>
						<height>83</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>395</width>
						<height>83</height>
						<texture background="true">$INFO[ListItem.Art(banner)]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio aligny="bottom">stretch</aspectratio>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>355</left>
						<top>45</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
					</control>
				</control>
			</focusedlayout>
		</control>
	</include>
	
	<include name="TVShowsThumbsInfoLogoStyle">
		<control type="panel" id="100">
			<viewtype label="31116">Thumbs Info</viewtype>
			<left>450</left>
			<top>110</top>
			<width>778</width>
			<height>517</height>
			<pagecontrol>918</pagecontrol>
			<scrolltime tween="sine" easing="inout">350</scrolltime>
			<orientation>vertical</orientation>
			<preloaditems>2</preloaditems>
			<onleft>850</onleft>
			<onright>150</onright>
			<onup>100</onup>
			<ondown>100</ondown>
			<visible>Container.Content(TVShows)</visible>
			<itemlayout width="257" height="129">
				<control type="group">
					<top>-6</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>269</width>
						<height>142</height>
						<texture background="true" border="4">covers/cover-case2.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>6</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Logo</description>
						<width>269</width>
						<height>142</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio>keep</aspectratio>
						<bordersize>10</bordersize>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>269</width>
						<height>142</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio align="center">keep</aspectratio>
						<bordersize>8</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
						<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>234</left>
						<top>9</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>					
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>234</left>
						<top>9</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<colordiffuse>CC99CCFF</colordiffuse>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>13</top>
						<left>234</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>ListColor3</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>13</top>
						<left>234</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>ListColor3</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>
			</itemlayout>
			<focusedlayout condition="IsEmpty(ListItem.Title)" width="257" height="129">
				<control type="group">
					<top>-6</top>
					<control type="image">
						<width>269</width>
						<height>142</height>
						<texture border="7">covers/cover-case-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
					</control>
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>259</width>
						<height>132</height>
						<bordersize>4</bordersize>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>269</width>
						<height>142</height>
						<bordersize>8</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio align="center">keep</aspectratio>
					</control>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="Container.Column(0) + Container.Row(0)">
				<control type="group">
					<description>Top Left Corner Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleTopLeftCornerFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="!Container.Column(0) + !Container.Column(2) + Container.Row(0)">
				<control type="group">
					<description>Top Edge Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleTopEdgeFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="Container.Column(2) + Container.Row(0)">
				<control type="group">
					<description>Top Right Corner Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleTopRightCornerFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="Container.Column(0) + [Container.Row(1) | Container.Row(2)]">
				<control type="group">
					<description>Left Edge Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleLeftEdgeFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="!Container.Row(0) + !Container.Row(3) + !Container.Column(0) + !Container.Column(2)">
				<control type="group">
					<description>Mid Row Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleMidRowFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="Container.Column(2) + [Container.Row(1) | Container.Row(2)]">
				<control type="group">
					<description>Right Edge Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleRightEdgeFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="Container.Column(0) + Container.Row(3)">
				<control type="group">
					<description>Bottom Left Corner Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleBottomLeftCornerFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="!Container.Column(0) + !Container.Column(2) + Container.Row(3)">
				<control type="group">
					<description>Bottom Edge Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleBottomEdgeFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129" condition="Container.Column(2) + Container.Row(3)">
				<control type="group">
					<description>Bottom Right Corner Cover</description>
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">LogoThumbsStyleBottomRightCornerFocusAnim</include>
				</control>
			</focusedlayout>
		</control>
	</include>
	
	<include name="TVShowsThumbsInfoClearArtStyle">
		<control type="panel" id="100">
			<viewtype label="31116">Thumbs Info</viewtype>
			<left>450</left>
			<top>110</top>
			<width>778</width>
			<height>517</height>
			<pagecontrol>918</pagecontrol>
			<scrolltime tween="sine" easing="inout">350</scrolltime>
			<orientation>vertical</orientation>
			<preloaditems>2</preloaditems>
			<onleft>850</onleft>
			<onright>150</onright>
			<onup>100</onup>
			<ondown>100</ondown>
			<visible>Container.Content(TVShows)</visible>
			<itemlayout width="256" height="172">
				<control type="group">
					<top>-6</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>268</width>
						<height>184</height>
						<texture background="true" border="4">covers/cover-case2.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>6</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Clear Art</description>
						<top>14</top>
						<width>268</width>
						<height>184</height>
						<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
						<aspectratio>keep</aspectratio>
						<bordersize>10</bordersize>
						<visible>!IsEmpty(ListItem.Art(clearart))</visible>
					</control>
					<control type="image">
						<description>Clear Logo</description>
						<width>268</width>
						<height>184</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio>keep</aspectratio>
						<bordersize>10</bordersize>
						<visible>IsEmpty(ListItem.Art(clearart)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>268</width>
						<height>184</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio align="center">keep</aspectratio>
						<bordersize>24</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
						<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>231</left>
						<top>11</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>	
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>231</left>
						<top>11</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<colordiffuse>CC99CCFF</colordiffuse>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>15</top>
						<left>231</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>ListColor3</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>15</top>
						<left>231</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>ListColor3</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>					
				</control>
			</itemlayout>
			<focusedlayout condition="IsEmpty(ListItem.Title)" width="256" height="129">
				<control type="group">
					<top>-6</top>
					<control type="image">
						<width>268</width>
						<height>184</height>
						<texture border="7">covers/cover-case-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
					</control>
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>258</width>
						<height>174</height>
						<bordersize>4</bordersize>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>268</width>
						<height>184</height>
						<bordersize>24</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio align="center">keep</aspectratio>
					</control>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="Container.Column(0) + Container.Row(0)">
				<control type="group">
					<description>Top Left Corner Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleTopLeftCornerFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="!Container.Column(0) + !Container.Column(2) + Container.Row(0)">
				<control type="group">
					<description>Top Edge Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleTopEdgeFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="Container.Column(2) + Container.Row(0)">
				<control type="group">
					<description>Top Right Corner Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleTopRightCornerFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="Container.Column(0) + !Container.Row(0) + !Container.Row(2)">
				<control type="group">
					<description>Left Edge Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleLeftEdgeFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="!Container.Row(0) + !Container.Row(2) + !Container.Column(0) + !Container.Column(2)">
				<control type="group">
					<description>Mid Row Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleMidRowFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="Container.Column(2) + !Container.Row(2)">
				<control type="group">
					<description>Right Edge Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleRightEdgeFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="Container.Column(0) + Container.Row(2)">
				<control type="group">
					<description>Bottom Left Corner Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleBottomLeftCornerFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="!Container.Column(0) + !Container.Column(2) + Container.Row(2)">
				<control type="group">
					<description>Bottom Edge Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleBottomEdgeFocusAnim</include>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172" condition="Container.Column(2) + Container.Row(2)">
				<control type="group">
					<description>Bottom Right Corner Cover</description>
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ClearArtThumbsStyleBottomRightCornerFocusAnim</include>
				</control>
			</focusedlayout>
		</control>
	</include>
	
	<!--//// START WALL VIEW //////////////////////////////////////////////////////////////////////////-->
	<include name="TVShowsWallView">
		<control type="group" id="500">	
		    <defaultcontrol always="true">586</defaultcontrol>
			<visible>Control.IsVisible(586)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="panel" id="586">
				<viewtype label="31113">Wall</viewtype>
				<left>-10</left>
				<top>35</top>
				<width>1300</width>
				<height>695</height>
				<pagecontrol>909</pagecontrol>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">403</scrolltime>
				<onup>850</onup>
				<ondown>150</ondown>
				<visible>Container.Content(TVShows)</visible>
				<itemlayout width="160" height="225" condition="Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)">
					<control type="image">
						<description>Default Cover</description>
						<left>10</left>
						<top>10</top>
						<width>160</width>
						<height>225</height>
						<bordersize>18</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>10</left>
						<top>10</top>
						<width>160</width>
						<height>225</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Dim</description>
						<left>10</left>
						<top>10</top>
						<width>160</width>
						<height>225</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Skin.HasSetting(DoNotDimTVShowsWallCover)</visible>
						<include>CoverDimAnim</include>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>133</left>
						<top>200</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay)</visible>
					</control>					
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>133</left>
						<top>200</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>204</top>
						<left>133</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>204</top>
						<left>133</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</itemlayout>

				<itemlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2)">
					<control type="image">
						<description>Default Cover</description>
						<left>8</left>
						<top>10</top>
						<width>92</width>
						<height>135</height>
						<bordersize>18</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>8</left>
						<top>10</top>
						<width>92</width>
						<height>135</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>Dim</description>
						<left>8</left>
						<top>10</top>
						<width>92</width>
						<height>135</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Skin.HasSetting(DoNotDimTVShowsWallCover)</visible>
						<include>CoverDimAnim</include>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>63</left>
						<top>110</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay)</visible>
					</control>					
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>63</left>
						<top>110</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>63</left>
						<top>114</top>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>63</left>
						<top>114</top>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</itemlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [Container.Column(0) + Container.Row(0)]">
					<control type="group">
						<description>Top Left Corner Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewTopLeftCornerFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [!Container.Column(0) + !Container.Column(7) + Container.Row(0)]">
					<control type="group">
						<description>Top Edge Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewTopEdgeFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [Container.Column(7) + Container.Row(0)]">
					<control type="group">
						<description>Top Right Corner Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewTopRightCornerFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [Container.Column(0) + Container.Row(1)]">
					<control type="group">
						<description>Left Edge Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewLeftEdgeFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [!Container.Row(0) + !Container.Row(2) + !Container.Column(0) + !Container.Column(7)]">
					<control type="group">
						<description>Mid Row Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewMidRowFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [Container.Column(7) + Container.Row(1)]">
					<control type="group">
						<description>Right Edge Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewRightEdgeFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [Container.Column(0) + Container.Row(2)]">
					<control type="group">
						<description>Bottom Left Corner Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewBottomLeftCornerFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [!Container.Column(0) + !Container.Column(7) + Container.Row(2)]">
					<control type="group">
						<description>Bottom Edge Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewBottomEdgeFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="160" height="225" condition="[Skin.String(TVShowsWallStyle,1) | Skin.String(TVShowsWallStyle,)] + [Container.Column(7) + Container.Row(2)]">
					<control type="group">
						<description>Bottom Right Corner Cover</description>
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewBottomRightCornerFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [Container.Column(0) + Container.Row(0)]">
					<control type="group">
						<description>Top Left Corner Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewTopLeftCornerFocusAnim2</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [!Container.Column(0) + !Container.Column(13) + Container.Row(0)]">
					<control type="group">
						<description>Top Edge Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewTopEdgeFocusAnim2</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [Container.Column(13) + Container.Row(0)]">
					<control type="group">
						<description>Top Right Corner Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewTopRightCornerFocusAnim2</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [Container.Column(0) + ![Container.Row(0) | Container.Row(4)]]">
					<control type="group">
						<description>Left Edge Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewLeftEdgeFocusAnim2</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [!Container.Row(0) + !Container.Row(4) + !Container.Column(0) + !Container.Column(13)]">
					<control type="group">
						<description>Mid Row Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewMidRowFocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [Container.Column(13) + ![Container.Row(0) | Container.Row(4)]]">
					<control type="group">
						<description>Right Edge Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewRightEdgeFocusAnim2</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [Container.Column(0) + Container.Row(4)]">
					<control type="group">
						<description>Bottom Left Corner Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewBottomLeftCornerFocusAnim2</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [!Container.Column(0) + !Container.Column(13) + Container.Row(4)]">
					<control type="group">
						<description>Bottom Edge Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewBottomEdgeFocusAnim2</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2) + [Container.Column(13) + Container.Row(4)]">
					<control type="group">
						<description>Bottom Right Corner Cover</description>
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">MoviesWallViewBottomRightCornerFocusAnim2</include>
					</control>
				</focusedlayout>
			</control>
			
			<control type="group">
				<visible>Control.HasFocus(586) + System.IdleTime(1) + Skin.HasSetting(HideTVShowsWallExtendedInfoPanel) + !IsEmpty(ListItem.Title)</visible>
				<depth>DepthContent+</depth>
				<left>-3</left>
				<top>43</top>
				
				<animation effect="slide" end="159,0" condition="Container(586).Row(0) + Container(586).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,0" condition="Container(586).Row(0) + [Container(586).Column(0) | Container(586).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,0" condition="Container(586).Row(0) + [Container(586).Column(1) | Container(586).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,0" condition="Container(586).Row(0) + Container(586).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,0" condition="Container(586).Row(0) + Container(586).Column(3)">Conditional</animation>
				<animation effect="slide" end="159,177" condition="Container(586).Row(1) + Container(586).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,177" condition="Container(586).Row(1) + [Container(586).Column(0) | Container(586).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,177" condition="Container(586).Row(1) + [Container(586).Column(1) | Container(586).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,177" condition="Container(586).Row(1) + Container(586).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,177" condition="Container(586).Row(1) + Container(586).Column(3)">Conditional</animation>
				<animation effect="slide" end="0,177" condition="Container(586).Row(1) + Container(586).Column(4)">Conditional</animation>
				<animation effect="slide" end="159,347" condition="Container(586).Row(2) + Container(586).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,347" condition="Container(586).Row(2) + [Container(586).Column(0) | Container(586).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,347" condition="Container(586).Row(2) + [Container(586).Column(1) | Container(586).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,347" condition="Container(586).Row(2) + Container(586).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,347" condition="Container(586).Row(2) + Container(586).Column(3)">Conditional</animation>
				<animation effect="slide" end="0,347" condition="Container(586).Row(2) + Container(586).Column(4)">Conditional</animation>
				
				<animation type="Visible">
					<effect type="fade" start="0" end="100" time="300"/>
					<effect type="zoom" end="100" start="50" time="400" tween="back" easing="out" center="243,166"/>
				</animation>
				
				<control type="image">
					<width>487</width>
					<height>333</height>
					<texture border="8">panels/panel.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				
				<control type="image">
					<description>Content Background</description>
					<left>8</left>
					<top>8</top>
					<width>471</width>
					<height>317</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>72</top>
					<width>461</width>
					<height>25</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>101</top>
					<width>461</width>
					<height>149</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>255</top>
					<width>461</width>
					<height>25</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>11</top>
					<width>461</width>
					<height>58</height>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableTVShowsLogo)</visible>
				</control>
				
				<control type="label">
					<description>Title</description>
					<top>10</top>
					<left>13</left>
					<width>461</width>
					<height>58</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>KaraokeFont</font>
					<textcolor>MediaInfoTitleColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
					<scroll>true</scroll>
					<visible>IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableTVShowsLogo)</visible>
				</control>
				
				<control type="label">
					<description>Genre</description>
					<left>18</left>
					<top>72</top>
					<width>451</width>
					<height>25</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>MediaInfoFont2</font>
					<textcolor>MediaInfoItemColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<scroll>true</scroll>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>18</left>
					<top>108</top>
					<width>451</width>
					<height>137</height>
					<font>SettingsContentFont2</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">true</autoscroll>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="label">
					<description>Media Info</description>
					<left>14</left>
					<top>255</top>
					<width>459</width>
					<height>25</height>
					<align>center</align>
					<aligny>center</aligny>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[20360]:$INFO[ListItem.Property(TotalSeasons),[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[33054]:$INFO[ListItem.Episode,[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[345]:$INFO[ListItem.Year,[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[563]:$INFO[ListItem.Rating,[COLOR=MediaInfoItemColor2] ,[/COLOR]]</label>
				</control>
				
				<control type="grouplist">
					<description>Media Flags Area</description>
					<visible>!Skin.HasSetting(DisableMediaFlags)</visible>
					<left>13</left>
					<top>285</top>
					<width>461</width>
					<height>35</height>
					<itemgap>5</itemgap>
					<align>center</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<include>MediaFlagFadeAnim</include>
					<control type="group">
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredStatusMediaFlag)</visible>
						<width>104</width>
						<control type="image">
							<width>104</width>
							<height>35</height>
							<texture border="6">flagging/$VAR[MediaFlagTheme]/flag-big-bg.png</texture>
							<animation effect="fade" time="200">VisibleChange</animation>
							<visible>!IsEmpty(Window(Home).Property(NextAired.Status))</visible>
						</control>								
						<control type="label">
							<description>Next Aired Status</description>
							<left>2</left>
							<width>100</width>
							<height>35</height>
							<font>NextAiredTimeFont</font>
							<textcolor>SelectedColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<wrapmultiline>true</wrapmultiline>
							<label>$INFO[Window(Home).Property(NextAired.Status)]</label>
							<visible>!StringCompare(Window(Home).Property(NextAired.StatusID),1)</visible>
						</control>						
						<control type="label">
							<description>Next Aired Status Cancelled/Ended</description>
							<left>2</left>
							<width>100</width>
							<height>35</height>
							<font>NextAiredTimeFont</font>
							<textcolor>SelectedColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<wrapmultiline>true</wrapmultiline>
							<label>$LOCALIZE[31965]</label>
							<visible>StringCompare(Window(Home).Property(NextAired.StatusID),1)</visible>
						</control>
					</control>
					<control type="group">
						<visible>!IsEmpty(ListItem.Studio)</visible>	
						<width>58</width>						
						<control type="image">
							<width>58</width>
							<height>35</height>
							<texture border="6">flagging/$VAR[MediaFlagTheme]/flag-bg.png</texture>
						</control>								
						<control type="image">
							<description>Studio Flag</description>
							<width>58</width>
							<height>35</height>
							<aspectratio>stretch</aspectratio>
							<texture>resource://resource.images.studios.white/$INFO[ListItem.Studio].png</texture>
						</control>
					</control>
				</control>
			</control>			
			
			<include>WallViewScrollbar</include>
			
			<control type="group" id="659">
				<description>Bottom Bar Area</description>
				<depth>DepthContent+</depth>
				<top>BottomPaneOffsetY</top>
				<visible>Control.HasFocus(586) + System.IdleTime(2) + !Skin.HasSetting(HideTVShowsWallInfoPanel)</visible>
				<animation effect="slide" start="0,65" time="300">Visible</animation>
				<include>InfoPaneImage</include>
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
				
				<control type="label">
					<include>InfoPaneItemTitle</include>
					<label>[B]$INFO[ListItem.Label][/B]</label>
					<visible>IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableTVShowsLogo)</visible>
				</control>
				
				<control type="group">
					<animation effect="slide" end="0,-6" condition="true">Conditional</animation>
					<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				</control>
				
				<control type="group">
					<visible>!Skin.HasSetting(ShowTVShowsWallRating)</visible>
					<animation effect="slide" end="0,12" time="100" condition="!IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableTVShowsLogo)">Conditional</animation>
						
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$INFO[ListItem.Genre]</label>
						<visible>Window.IsActive(Videos)</visible>
					</control>
					
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$INFO[ListItem.Label2]</label>
						<visible>Window.IsActive(Videos,Files) + !Container.Content(TVShows)</visible>
					</control>
				</control>
				
				<control type="group">
					<visible>Skin.HasSetting(ShowTVShowsWallRating)</visible>
					<animation effect="slide" end="0,12" time="100" condition="!IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableTVShowsLogo)">Conditional</animation>
					
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$INFO[ListItem.Rating]</label>
						<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
					</control>
					
					<control type="image">
						<left>590</left>
						<top>24</top>
						<width>100</width>
						<height>16</height>
						<texture background="true">$VAR[StarRating]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
						<include>MediaFlagFadeAnim</include>
					</control>
				</control>
			</control>	
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	<!--//// END WALL VIEW ////////////////////////////////////////////////////////////////////////////-->
</includes>