<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!--//// START ICON VIEW //////////////////////////////////////////////////////////////////////////-->
	<include name="IconView">
		<control type="group" id="500">	
		    <defaultcontrol always="true">50</defaultcontrol>
			<visible>Control.IsVisible(50)</visible>	
			<include>MediaViewOpenCloseAnim</include>
			<include>IconViewScrollbar</include>
			
			<control type="panel" id="50">
				<viewtype label="31103">Icon</viewtype>
				<left>31</left>
				<top>85</top>
				<width>1218</width>
				<height>555</height>
				<pagecontrol>901</pagecontrol>	
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">404</scrolltime>
				<onup>50</onup>
				<ondown>50</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<oninfo condition="System.HasAddon(script.extendedinfo) + [Container.Content(Actors) | Container.Content(Directors)]">RunScript(script.extendedinfo,info=extendedactorinfo,name=$INFO[ListItem.Label])</oninfo>
				<visible>![Container.Content(Movies) | Container.Content(Sets) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Albums) | Container.Content(Songs) | Container.Content(Addons)]</visible>		
				<itemlayout height="185" width="203" condition="Container.Content(Countries)">
					<control type="image">
						<description>Cover Case</description>
						<left>20</left>
						<width>162</width>
						<height>162</height>
						<texture background="true" border="4,5,4,5">covers/cover-case-thumbnail2-nofocus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>24</left> 
						<top>5</top>
						<width>154</width>
						<height>153</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>10</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Countries Cover</description>
						<left>24</left> 
						<top>5</top>
						<width>154</width>
						<height>153</height>
						<texture background="true" fallback="studios/default-studio.png">$INFO[ListItem.Label,flagging/countries/,.png]</texture>
						<bordersize>6</bordersize>
						<aspectratio>scale</aspectratio>
						<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>GreyColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
					</control>
				</itemlayout>
				<itemlayout height="185" width="203">
					<control type="image">
						<description>Cover Case</description>
						<width>204</width>
						<height>162</height>
						<texture background="true" border="4,5,4,5">covers/cover-case-thumbnail2-nofocus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>5</top>
						<width>192</width>
						<height>153</height>
						<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$VAR[MovieGenreIconsAddonVar]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>5</top>
						<width>192</width>
						<height>153</height>
						<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$VAR[MusicGenreIconsAddonVar]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>5</top>
						<width>192</width>
						<height>153</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>10</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb) + ![Container.Content(Genres) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>6</left> 
						<top>5</top>
						<width>192</width>
						<height>153</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>keep</aspectratio>
						<bordersize>6</bordersize>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>161</left>
						<top>123</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideEpisodesIconOverlay)</visible>
						<animation effect="fade" end="70" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>161</left>
						<top>123</top>
						<width>24</width>
						<height>24</height>
						<texture>$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="70" condition="true">Conditional</animation>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideEpisodesIconOverlay)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>GreyColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
						<visible>![Container.Content(Albums) + Skin.HasSetting(HideMusicIconLabel)]
						+ ![Window.IsActive(Pictures) + Skin.HasSetting(HidePicturesIconLabel)]</visible>
					</control>
				</itemlayout>
				<focusedlayout height="185" width="203" condition="Container.Content(Countries)">
					<control type="image">
						<description>Cover Case</description>
						<left>20</left>
						<width>162</width>
						<height>162</height>
						<texture background="true" border="4,5,4,5">covers/cover-case-thumbnail2-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>24</left> 
						<top>5</top>
						<width>154</width>
						<height>153</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>10</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Countries Cover</description>
						<left>24</left> 
						<top>5</top>
						<width>154</width>
						<height>153</height>
						<texture background="true" fallback="studios/default-studio.png">$INFO[ListItem.Label,flagging/countries/,.png]</texture>
						<bordersize>6</bordersize>
						<aspectratio>scale</aspectratio>
						<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
					</control>
				</focusedlayout>
				<focusedlayout height="185" width="203">
					<control type="image">
						<description>Cover Case</description>
						<width>204</width>
						<height>162</height>
						<texture background="true" border="4,5,4,5">covers/cover-case-thumbnail2-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>5</top>
						<width>192</width>
						<height>153</height>
						<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$VAR[MovieGenreIconsAddonVar]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>5</top>
						<width>192</width>
						<height>153</height>
						<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$VAR[MusicGenreIconsAddonVar]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>6</left> 
						<top>5</top>
						<width>192</width>
						<height>153</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>10</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb) + ![Container.Content(Genres) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>6</left> 
						<top>5</top>
						<width>192</width>
						<height>153</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordersize>6</bordersize>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>161</left>
						<top>123</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideEpisodesIconOverlay)</visible>
						<animation effect="fade" end="70" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>161</left>
						<top>123</top>
						<width>24</width>
						<height>24</height>
						<texture>$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="70" condition="true">Conditional</animation>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideEpisodesIconOverlay)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>19</left>
						<top>160</top>
						<width>165</width>
						<font>IconFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>center</align>
						<info>ListItem.Label</info>
					</control>
				</focusedlayout>
			</control>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include condition="!Skin.HasSetting(DisableMoviesClearLogo)">InfoPaneClearLogoMovies</include>
				<include condition="!Skin.HasSetting(EnableMusicLibraryClearLogos)">InfoPaneClearLogoMusic</include>
				<include condition="!Skin.HasSetting(DisableStudioLogo)">InfoPaneStudioLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	<!--//// END ICON VIEW ////////////////////////////////////////////////////////////////////////////-->
	
	<!--//// START LIST VIEW //////////////////////////////////////////////////////////////////////////-->
	<include name="ListView">
		<control type="group" id="500">			    
			<defaultcontrol always="true">52</defaultcontrol>
			<visible>Control.IsVisible(52)</visible>
			<include>MediaViewOpenCloseAnim</include>	
			
			<control type="image">
				<left>30</left>
				<top>106</top>
				<width>755</width>
				<height>525</height>
				<texture border="7">panels/content-panel.png</texture>
				<include>PanelFadeAnim</include>
			</control> 

			<control type="group">
				<description>Cover</description>
				<left>840</left>
				<top>150</top>
				<visible>![[Container.Content(Movies) | Container.Content(Episodes)] + Skin.HasSetting(EnableListExtraThumbs)]</visible>

				<control type="group">
					<visible>!Container.Content(TVShows)</visible>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[ListItem.Art(tvshow.poster)]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>IsEmpty(ListItem.Thumb) + Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.Art(tvshow.poster)]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<visible>IsEmpty(ListItem.Thumb) + Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))</visible>
					</control>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>Container.Content(Seasons)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$VAR[PosterThumb]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<visible>Container.Content(Seasons)</visible>
					</control>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[ListItem.Thumb]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>!IsEmpty(ListItem.Thumb)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.Thumb]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<visible>!IsEmpty(ListItem.Thumb)</visible>
					</control>
					
					<control type="image">
						<description>Animated Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[Window(Home).Property(SkinHelper.AnimatedPoster)]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + System.HasAddon(script.skin.helper.service) + !IsEmpty(Window(Home).Property(SkinHelper.AnimatedPoster))</visible>
					</control>
					
					<control type="image">
						<description>Animated Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$INFO[Window(Home).Property(SkinHelper.AnimatedPoster)]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<visible>Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + System.HasAddon(script.skin.helper.service) + !IsEmpty(Window(Home).Property(SkinHelper.AnimatedPoster))</visible>
					</control>
					
					<control type="image">
						<description>Cover Video Library</description>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$VAR[MovieGenreIconsAddonVar]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Music Library</description>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$VAR[MusicGenreIconsAddonVar]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Default</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>IsEmpty(ListItem.Thumb) + ![[Container.Content(Genres) | Container.Content(Countries)] + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection Video Library</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="special://skin/extras/moviegenres/default.png" flipy="true" diffuse="views/reflection.png">$VAR[MovieGenreIconsAddonVar]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection Music Library</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="special://skin/extras/musicgenres/default.png" flipy="true" diffuse="views/reflection.png">$VAR[MusicGenreIconsAddonVar]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection Default</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>NotificationsOpenCloseAnim</include>
						<visible>IsEmpty(ListItem.Thumb) + ![[Container.Content(Genres) | Container.Content(Countries)] + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
					</control>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true" fallback="studios/default-studio.png">$INFO[ListItem.Label,flagging/countries/,.png]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio>scale</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>Container.Content(Countries) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					
					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png" fallback="studios/default-studio.png">$INFO[ListItem.Label,flagging/countries/,.png]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio>scale</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
						<visible>Container.Content(Countries) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
				</control>

				<control type="group">
					<visible>Container.Content(TVShows)</visible>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>50</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					
					<control type="image">
						<description>Cover</description>
						<width>400</width>
						<height>400</height>
						<texture background="true">$VAR[TVShowsThumbTexture]</texture>
						<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="bottom">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>	
					</control>

					<control type="image">
						<description>Cover Reflection</description>
						<top>395</top>
						<width>400</width>
						<height>400</height>
						<texture background="true" flipy="true" diffuse="views/reflection.png">$VAR[TVShowsThumbTexture]</texture>
						<bordertexture flipy="true" border="11" diffuse="views/reflection.png">covers/cover-case-curved-big-focus.png</bordertexture>
						<bordersize>14</bordersize>
						<aspectratio aligny="top">keep</aspectratio>
						<fadetime>IconCrossfadeTime</fadetime>
					</control>
				</control>
			</control>
			
			<control type="grouplist">
				<left>880</left>
				<top>116</top>
				<width>320</width>
				<height>505</height>
				<align>center</align>
				<itemgap>35</itemgap>
				<visible>[Container.Content(Movies) | Container.Content(Episodes)] + Skin.HasSetting(EnableListExtraThumbs)</visible>
				<control type="image">
					<width>320</width>
					<height>158</height>
					<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb1.jpg</texture>
					<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
					<bordersize>14</bordersize>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="image">
					<width>320</width>
					<height>158</height>
					<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb2.jpg</texture>
					<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
					<bordersize>14</bordersize>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="image">
					<width>320</width>
					<height>158</height>
					<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb3.jpg</texture>	
					<bordertexture border="11">covers/cover-case-curved-big-focus.png</bordertexture>
					<bordersize>14</bordersize>
					<aspectratio>keep</aspectratio>
				</control>
			</control>
			
			<control type="list" id="52">	
				<viewtype label="31105">List</viewtype>
				<left>40</left>
				<top>110</top>
				<width>720</width>
				<height>518</height>
				<pagecontrol>903</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">300</scrolltime>
				<onup>52</onup>
				<ondown>52</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<oninfo condition="System.HasAddon(script.extendedinfo) + [Container.Content(Actors) | Container.Content(Directors)]">RunScript(script.extendedinfo,info=extendedactorinfo,name=$INFO[ListItem.Label])</oninfo>
				<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">ActivateWindow(3008)</oninfo>
				<include condition="Skin.String(CommonListStyle,) | Skin.String(CommonListStyle,1) | Skin.String(CommonListStyle,3)">CommonListItemLayout</include>
				<include condition="Skin.String(CommonListStyle,2)">CommonListTallStyleItemLayout</include>
				<include condition="Skin.String(CommonListStyle,) | Skin.String(CommonListStyle,1)">CommonListFocusedLayout</include>
				<include condition="Skin.String(CommonListStyle,2) | Skin.String(CommonListStyle,3)">CommonListTallStyleFocusedLayout</include>
			</control>

			<include>ListViewScrollbar</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include condition="!Skin.HasSetting(DisableMoviesClearLogo)">InfoPaneClearLogoMovies</include>
				<include condition="!Skin.HasSetting(EnableMusicLibraryClearLogos)">InfoPaneClearLogoMusic</include>
				<include condition="!Skin.HasSetting(DisableStudioLogo)">InfoPaneStudioLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	
	<include name="CommonListItemLayout">
		<itemlayout height="37" condition="Container.Content(Movies) | Container.Content(Sets) | Container.Content(Episodes) | Container.Content(MusicVideos) | Window.IsActive(VideoPlaylist)">
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>580</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>				
				<info>ListItem.Label</info>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>510</left>
				<width>200</width>
				<height>37</height>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>				
				<info>ListItem.Label2</info>
				<visible>![[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies)]
				| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes)]]</visible>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies)]
					| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes)]</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="image">
					<description>Quality</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<include>ListViewOverlayFadeAnim</include>
				</control>	
				<control type="image">
					<description>Quality</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
					<aspectratio>keep</aspectratio>
					<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable</visible>
					<include>ListViewPartialWatchedOverlayFadeAnim</include>
					<include>ListViewWatchedOverlayFadeAnim</include>
				</control>	
			</control>
		</itemlayout>
		<itemlayout height="37" condition="Container.Content(TVShows) | Container.Content(Seasons)">
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>IsEmpty(ListItem.Title)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<font>ListFont3</font>
				<textcolor>ListColor</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<font>ListFont4</font>
				<textcolor>ListColor</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="image">
				<description>Unwatched Overlay</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<aligny>center</aligny>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
			</control>
			<control type="image">
				<description>Watched Overlay</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<aligny>center</aligny>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>580</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>				
				<info>ListItem.Label</info>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>510</left>
				<width>200</width>
				<height>37</height>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>				
				<info>ListItem.Label2</info>		
				<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>10</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$VAR[StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
		</itemlayout>		
		<itemlayout height="37">
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>IsEmpty(ListItem.Overlay) | !StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>580</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>				
				<info>ListItem.Label</info>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>510</left>
				<width>200</width>
				<height>37</height>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>				
				<info>ListItem.Label2</info>
				<visible>![[Container.Content(Albums) | Container.Content(Songs)] + !Skin.HasSetting(DoNotUseStarRatingMusic)]</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>10</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$INFO[ListItem.StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>[[Container.Content(Albums) | Container.Content(Songs)] + !Skin.HasSetting(DoNotUseStarRatingMusic)]</visible>
				<include>StarRatingFadeAnim</include>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<include>ListViewOverlayFadeAnim</include>
			</control>
		</itemlayout>		
	</include>

	<include name="CommonListFocusedLayout">
		<focusedlayout height="37" condition="Container.Content(Movies) | Container.Content(Sets) | Container.Content(Episodes) | Container.Content(MusicVideos) | Window.IsActive(VideoPlaylist)">	
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>580</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>510</left>
					<width>200</width>
					<height>37</height>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>				
					<info>ListItem.Label2</info>
					<visible>![[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies)]
					| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes)]]</visible>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<control type="image">
						<description>Star Rating</description>
						<left>610</left>
						<top>10</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$VAR[StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies)]
						| [Container.Content(Episodes) + !Skin.HasSetting(DoNotUseStarRatingEpisodes)]</visible>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>	
					<control type="image">
						<description>Quality</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable</visible>
						<include>ListViewPartialWatchedOverlayFadeAnim</include>
						<include>ListViewWatchedOverlayFadeAnim</include>
					</control>	
				</control>
			</control>
		</focusedlayout>
		<focusedlayout height="37" condition="Container.Content(TVShows) | Container.Content(Seasons)">	
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>580</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>510</left>
					<width>200</width>
					<height>37</height>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>				
					<info>ListItem.Label2</info>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
			</control>
		</focusedlayout>		
		<focusedlayout height="37">	
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>37</height>	
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<left>0</left>
				<width>720</width>
				<height>36</height>	
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(52)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>580</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>510</left>
					<width>200</width>
					<height>37</height>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>				
					<info>ListItem.Label2</info>
					<visible>![[Container.Content(Albums) | Container.Content(Songs)] + !Skin.HasSetting(DoNotUseStarRatingMusic)]</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>[[Container.Content(Albums) | Container.Content(Songs)] + !Skin.HasSetting(DoNotUseStarRatingMusic)]</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
				</control>
			</control>
		</focusedlayout>		
	</include>
	
	<include name="CommonListTallStyleItemLayout">
		<itemlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>60</left>
				<top>12</top>
				<width>555</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>60</left>
				<top>38</top>
				<width>555</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]$INFO[ListItem.Director,  -  ,]</label>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingMovies)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingMovies)</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(HideMoviesListOverlay)</visible>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable</visible>
						<include>ListViewPartialWatchedOverlayFadeAnim</include>
						<include>ListViewWatchedOverlayFadeAnim</include>
					</control>
				</control>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(MusicVideos)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]$INFO[ListItem.Artist,  -  ,]</label>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="image">
					<description>Quality</description>
					<left>686</left>
					<top>39</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<description>Quality</description>
					<left>686</left>
					<top>39</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
					<aspectratio>keep</aspectratio>
					<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					<include>ListViewOverlayFadeAnim</include>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>686</left>
					<top>39</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>ListItem.IsResumable</visible>
					<include>ListViewPartialWatchedOverlayFadeAnim</include>
					<include>ListViewWatchedOverlayFadeAnim</include>
				</control>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(TVShows)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Art(poster)]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>CoverDimAnim</include>
			</control>						
			<control type="label">
				<description>Label</description>
				<left>60</left>
				<top>12</top>
				<width>555</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>	
			</control>
			<control type="label">
				<description>Label2</description>
				<left>60</left>
				<top>38</top>
				<width>555</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]$INFO[ListItem.Episode,  -  , $LOCALIZE[20360]]</label>
			</control>
			<control type="label">
				<description>Rating</description>
				<left>610</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Rating]</label>
				<align>right</align>
				<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$VAR[StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>689</left>
				<top>41</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsListOverlay)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Episodes)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>104</left>
				<top>12</top>
				<width>511</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
				<visible>IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>104</left>
				<top>38</top>
				<width>511</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Season,$LOCALIZE[20373] ,]$INFO[ListItem.Episode,  -  $LOCALIZE[20359] ,]</label>
			</control>
			<control type="group">
				<visible>!IsEmpty(ListItem.Title)</visible>
				<control type="label">
					<description>Label</description>
					<left>104</left>
					<top>12</top>
					<width>511</width>
					<font>ListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Title]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingEpisodes)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingEpisodes)</visible>
					<include>StarRatingFadeAnim</include>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(HideEpisodesListOverlay)</visible>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable</visible>
						<include>ListViewPartialWatchedOverlayFadeAnim</include>
						<include>ListViewWatchedOverlayFadeAnim</include>
					</control>
				</control>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Seasons)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="60" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>60</left>
				<top>12</top>
				<width>555</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>60</left>
				<top>38</top>
				<width>555</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]$INFO[ListItem.Property(UnWatchedEpisodes),  -  , $LOCALIZE[16101]]</label>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>689</left>
				<top>41</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(HideSeasonsListOverlay)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Albums)" height="74">	
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Year]$INFO[ListItem.Artist,  -  ,]</label>
			</control>
			<control type="label">
				<description>Rating</description>
				<left>610</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Rating]</label>
				<align>right</align>
				<visible>Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$INFO[ListItem.StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Album) + !Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Songs)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Duration,, $LOCALIZE[31003]]$INFO[ListItem.Artist,  -  ,]</label>
			</control>
			<control type="label">
				<description>Rating</description>
				<left>610</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Rating]</label>
				<align>right</align>
				<visible>Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>610</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>		
				<texture background="true">$INFO[ListItem.StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				<include>StarRatingFadeAnim</include>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Artists)" height="74">	
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[ListTallStyleLabel]</label>
			</control>
			<control type="label">
				<description>Label2 (Born)</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Property(Artist_Born)]</label>
				<visible>!IsEmpty(ListItem.Property(Artist_Born))</visible>
			</control>
			<control type="label">
				<description>Label2 (Formed)</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Property(Artist_Formed)]</label>
				<visible>!IsEmpty(ListItem.Property(Artist_Formed))</visible>
			</control>
		</itemlayout>
		<itemlayout condition="Container.Content(Addons)" height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>	
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2 (Addons)</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Property(Addon.Version)]$INFO[ListItem.Property(Addon.Creator),  -  ,]</label>
			</control>
			<control type="label">
				<description>Status (Addons)</description>
				<left>610</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<info>ListItem.Property(Addon.Status)</info>
			</control>
		</itemlayout>
		<itemlayout height="74">
			<include>ListTallStyleNoFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$VAR[MovieGenreIconsAddonVar]</texture>
				<aspectratio>keep</aspectratio>
				<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$VAR[MusicGenreIconsAddonVar]</texture>
				<aspectratio>keep</aspectratio>
				<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Countries Cover</description>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="studios/default-studio.png">$INFO[ListItem.Label,flagging/countries/,.png]</texture>
				<aspectratio>scale</aspectratio>
				<visible>Container.Content(Countries) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Dim</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb) + ![[Container.Content(Genres) | Container.Content(Countries)] + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>								
			<control type="label">
				<description>Label</description>
				<left>80</left>
				<top>12</top>
				<width>535</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label2]</label>
				<visible>!IsEmpty(ListItem.Label2)</visible>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>80</left>
				<top>38</top>
				<width>535</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Date]</label>
				<visible>IsEmpty(ListItem.Label2)</visible>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>689</left>
				<top>41</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
				<include>ListViewOverlayFadeAnim</include>
			</control>
		</itemlayout>
	</include>
	
	<include name="CommonListTallStyleFocusedLayout">	
		<focusedlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>60</left>
					<top>12</top>
					<width>555</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>60</left>
					<top>38</top>
					<width>555</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]$INFO[ListItem.Director,  -  ,]</label>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<control type="label">
						<description>Rating</description>
						<left>610</left>
						<top>12</top>
						<width>100</width>
						<font>ListFont</font>
						<textcolor>ListColor3</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Rating]</label>
						<align>right</align>
						<visible>Skin.HasSetting(DoNotUseStarRatingMovies)</visible>
					</control>
					<control type="image">
						<description>Star Rating</description>
						<left>610</left>
						<top>16</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$VAR[StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!Skin.HasSetting(DoNotUseStarRatingMovies)</visible>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(HideMoviesListOverlay)</visible>
						<control type="image">
							<description>Quality</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="image">
							<description>Quality</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio align="right">keep</aspectratio>
							<visible>ListItem.IsResumable</visible>
							<include>ListViewPartialWatchedOverlayFadeAnim</include>
							<include>ListViewWatchedOverlayFadeAnim</include>
						</control>
					</control>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(MusicVideos)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]$INFO[ListItem.Artist,  -  ,]</label>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<control type="label">
						<description>Rating</description>
						<left>610</left>
						<top>12</top>
						<width>100</width>
						<font>ListFont</font>
						<textcolor>ListColor3</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Rating]</label>
						<align>right</align>
					</control>
					<control type="image">
						<description>Star Rating</description>
						<left>610</left>
						<top>16</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$INFO[ListItem.StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<control type="image">
						<description>Quality</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
						<aspectratio>keep</aspectratio>
						<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>686</left>
						<top>39</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>ListItem.IsResumable</visible>
						<include>ListViewPartialWatchedOverlayFadeAnim</include>
						<include>ListViewWatchedOverlayFadeAnim</include>
					</control>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(TVShows)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Art(poster)]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>60</left>
					<top>12</top>
					<width>555</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>60</left>
					<top>38</top>
					<width>555</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>	
					<label>$INFO[ListItem.Year]$INFO[ListItem.Episode,  -  , $LOCALIZE[20360]]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>689</left>
					<top>41</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsListOverlay)</visible>
				</control>	
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Episodes)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>4</top>
				<width>97</width>
				<height>65</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>104</left>
					<top>12</top>
					<width>511</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
					<visible>IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>104</left>
					<top>38</top>
					<width>511</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Season,$LOCALIZE[20373] ,]$INFO[ListItem.Episode,  -  $LOCALIZE[20359] ,]</label>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<control type="label">
						<description>Label</description>
						<left>104</left>
						<top>12</top>
						<width>511</width>
						<font>ListFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Title]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<description>Rating</description>
						<left>610</left>
						<top>12</top>
						<width>100</width>
						<font>ListFont</font>
						<textcolor>ListColor3</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$INFO[ListItem.Rating]</label>
						<align>right</align>
						<visible>Skin.HasSetting(DoNotUseStarRatingEpisodes)</visible>
					</control>
					<control type="image">
						<description>Star Rating</description>
						<left>610</left>
						<top>16</top>
						<width>100</width>
						<height>16</height>		
						<texture background="true">$VAR[StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!Skin.HasSetting(DoNotUseStarRatingEpisodes)</visible>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(HideEpisodesListOverlay)</visible>
						<control type="image">
							<description>Quality</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="image">
							<description>Quality</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>686</left>
							<top>39</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<visible>ListItem.IsResumable</visible>
							<include>ListViewPartialWatchedOverlayFadeAnim</include>
							<include>ListViewWatchedOverlayFadeAnim</include>
						</control>
					</control>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Seasons)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>60</left>
					<top>12</top>
					<width>555</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>60</left>
					<top>38</top>
					<width>555</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]$INFO[ListItem.Property(UnWatchedEpisodes),  -  , $LOCALIZE[16101]]</label>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>689</left>
					<top>41</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideSeasonsListOverlay)</visible>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Albums)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Year]$INFO[ListItem.Artist,  -  ,]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Album) + !Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Songs)" height="74">
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Duration,, $LOCALIZE[31003]]$INFO[ListItem.Artist,  -  ,]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Rating]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>610</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>		
					<texture background="true">$INFO[ListItem.StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Title) + !Skin.HasSetting(DoNotUseStarRatingMusic)</visible>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Artists)" height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[ListTallStyleLabel]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2 (Born)</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Property(Artist_Born)]</label>
					<visible>!IsEmpty(ListItem.Property(Artist_Born))</visible>
				</control>
				<control type="label">
					<description>Label2 (Formed)</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Property(Artist_Formed)]</label>
					<visible>!IsEmpty(ListItem.Property(Artist_Formed))</visible>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout condition="Container.Content(Addons)" height="74">
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb)</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>	
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2 (Addons)</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Property(Addon.Version)]$INFO[ListItem.Property(Addon.Creator),  -  ,]</label>
				</control>
				<control type="label">
					<description>Status (Addons)</description>
					<left>610</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<info>ListItem.Property(Addon.Status)</info>
				</control>
			</control>
		</focusedlayout>
		<focusedlayout height="74">	
			<include>ListTallStyleFocus</include>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="special://skin/extras/moviegenres/default.png">$VAR[MovieGenreIconsAddonVar]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
				<visible>Window.IsActive(Videos) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="special://skin/extras/musicgenres/default.png">$VAR[MusicGenreIconsAddonVar]</texture>
				<aspectratio>keep</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
				<visible>Window.IsActive(MusicLibrary) + Container.Content(Genres) + IsEmpty(ListItem.Thumb) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Countries Cover</description>
				<width>73</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true" fallback="studios/default-studio.png">$INFO[ListItem.Label,flagging/countries/,.png]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
				<visible>Container.Content(Countries) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<left>0</left>
				<top>0</top>
				<width>73</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>IsEmpty(ListItem.Thumb) + ![[Container.Content(Genres) | Container.Content(Countries)] + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewCoverFocusAnim</include>
			</control>	
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>80</left>
					<top>12</top>
					<width>535</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label2]</label>
					<visible>!IsEmpty(ListItem.Label2)</visible>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>80</left>
					<top>38</top>
					<width>535</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Date]</label>
					<visible>IsEmpty(ListItem.Label2)</visible>
				</control>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>689</left>
				<top>41</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
			</control>
		</focusedlayout>			
	</include>
	
	<include name="ListTallStyleFocus">
		<control type="image">
			<left>0</left>
			<width>720</width>
			<height>74</height>	
			<texture border="0,0,10,2">views/list-separator.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		<control type="image">
			<left>0</left>
			<width>720</width>
			<height>73</height>
			<texture border="4">views/list-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<visible>Control.HasFocus(52)</visible>
			<include>ListViewSelectFadeAnim</include>
			<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)] + !Skin.String(CommonListStyle,3)">ListViewScrollAnim2</include>
			<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)] + Skin.String(CommonListStyle,3)">ListViewScrollAnim</include>
		</control>
		<control type="image">
			<left>0</left>
			<width>720</width>
			<height>73</height>
			<texture border="4">views/list-alt-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<visible>!Control.HasFocus(52)</visible>
			<include>ListViewSelectFadeAnim2</include>
		</control>
	</include>
	
	<include name="ListTallStyleNoFocus">
		<control type="image">
			<left>0</left>
			<width>720</width>
			<height>74</height>	
			<texture border="0,0,10,2">views/list-separator.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	<!--//// END LIST VIEW ////////////////////////////////////////////////////////////////////////////-->
	
	<!--//// START DVD THUMBS VIEW ////////////////////////////////////////////////////////////////////-->
	<variable name="DVDThumbsViewYearLabelVar">
		<value condition="ListItem.IsCollection">$INFO[Window(home).Property(SkinHelper.MovieSet.Years)]</value>
		<value>$INFO[ListItem.Year]</value>
	</variable>
	
	<include name="DVDThumbsView">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">54</defaultcontrol>
			<visible>Control.IsVisible(54)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ThumbnailViewScrollbar</include>

			<include condition="Skin.String(CommonDVDThumbsStyle,1) | Skin.String(CommonDVDThumbsStyle,)">CommonDVDThumbsStyle1</include>
			<include condition="Skin.String(CommonDVDThumbsStyle,2)">CommonDVDThumbsStyle2</include>
			<include condition="Skin.String(CommonDVDThumbsStyle,3)">CommonDVDThumbsStyle3</include>
			<include condition="Skin.String(CommonDVDThumbsStyle,4)">CommonDVDThumbsStyle4</include>
			<include condition="Skin.String(CommonDVDThumbsStyle,5)">CommonDVDThumbsStyle5</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
				
				<control type="group">
					<visible>!Skin.HasSetting(HideDVDThumbsLabel)</visible>
					
					<control type="label">
						<include>InfoPaneItemTitle</include>
						<label>[B]$INFO[ListItem.Label][/B]</label>
						<visible>[[IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(Seasons)] | [IsEmpty(ListItem.Art(tvshow.clearlogo)) + Container.Content(Seasons)]] | [[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + Skin.HasSetting(DisableTVShowsLogo)]
						| [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DisableMoviesClearLogo)]</visible>
					</control>
					
					<control type="group">
						<animation effect="slide" end="0,-11" condition="true">Conditional</animation>
						<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
						<include condition="!Skin.HasSetting(DisableMoviesClearLogo)">InfoPaneClearLogoMovies</include>
					</control>
					
					<control type="group">
						<visible>![Skin.HasSetting(ShowDVDThumbsRating) + [Container.Content(Movies) | Container.Content(TVShows)]] + !Skin.HasSetting(ShowDVDThumbsYear)</visible>
						<animation effect="slide" end="0,10" time="100" condition="![[[IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(Seasons)] | [IsEmpty(ListItem.Art(tvshow.clearlogo)) + Container.Content(Seasons)]] | [[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + Skin.HasSetting(DisableTVShowsLogo)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DisableMoviesClearLogo)]]">Conditional</animation>
						
						<control type="label">
							<include>InfoPaneItemTitle2</include>
							<label>$VAR[MovieGenre]</label>
							<visible>Window.IsActive(Videos)</visible>
						</control>
					</control>
					
					<control type="group">
						<visible>Skin.HasSetting(ShowDVDThumbsRating) + !Container.Content(Seasons)</visible>
						<animation effect="slide" end="0,10" time="100" condition="![[[IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(Seasons)] | [IsEmpty(ListItem.Art(tvshow.clearlogo)) + Container.Content(Seasons)]] | [[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + Skin.HasSetting(DisableTVShowsLogo)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DisableMoviesClearLogo)]]">Conditional</animation>
						
						<control type="label">
							<include>InfoPaneItemTitle2</include>
							<label>$INFO[ListItem.Rating]</label>
							<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DoNotUseStarRatingMovies)] | [Container.Content(TVShows) + Skin.HasSetting(DoNotUseStarRatingTVShows)]</visible>
						</control>
						
						<control type="image">
							<left>590</left>
							<top>24</top>
							<width>100</width>
							<height>16</height>
							<texture background="true">$VAR[StarRating]</texture>
							<aspectratio>keep</aspectratio>
							<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(DoNotUseStarRatingMovies)] | [Container.Content(TVShows) + !Skin.HasSetting(DoNotUseStarRatingTVShows)]</visible>
							<include>MediaFlagFadeAnim</include>
						</control>
					</control>
					
					<control type="group">
						<visible>Skin.HasSetting(ShowDVDThumbsYear)</visible>
						<animation effect="slide" end="0,10" time="100" condition="![[[IsEmpty(ListItem.Art(clearlogo)) + !Container.Content(Seasons)] | [IsEmpty(ListItem.Art(tvshow.clearlogo)) + Container.Content(Seasons)]] | [[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + Skin.HasSetting(DisableTVShowsLogo)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(DisableMoviesClearLogo)]]">Conditional</animation>
						
						<control type="label">
							<include>InfoPaneItemTitle2</include>
							<label>$VAR[DVDThumbsViewYearLabelVar]</label>
						</control>
					</control>
				</control>
			</control>	
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	
	<include name="CommonDVDThumbsStyle1Height1">
		<height>540</height>
	</include>
	
	<include name="CommonDVDThumbsStyle1Height2">
		<height>548</height>
	</include>
	
	<include name="CommonDVDThumbsStyle1">
		<control type="panel" id="54">
			<viewtype label="31103">Icon</viewtype>
			<left>16</left>
			<top>101</top>
			<width>1248</width>
			<include condition="![SubString(Container.FolderPath,videodb://tvshows/) + !Skin.HasSetting(UseTVShowsPosterCover)]">CommonDVDThumbsStyle1Height1</include>
			<include condition="SubString(Container.FolderPath,videodb://tvshows/) + !Skin.HasSetting(UseTVShowsPosterCover)">CommonDVDThumbsStyle1Height2</include>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>54</onup>
			<ondown>54</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">ActivateWindow(3008)</oninfo>
			<animation effect="slide" end="24,-9" condition="Container.Content(TVShows) + !Skin.HasSetting(UseTVShowsPosterCover)">Conditional</animation>
			<visible>Container.Content(Movies) | Container.Content(Sets) | Container.Content(Seasons) | Container.Content(TVShows)</visible>
			<itemlayout condition="Container.Content(TVShows) + Skin.HasSetting(UseTVShowsPosterCover)" height="270" width="208">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<bordersize>14</bordersize>
					<texture background="true">$VAR[TVShowsThumbTexture]</texture>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>148</left>
					<top>201</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
				</control>		
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>148</left>
					<top>201</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>205</top>
					<left>148</left>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>205</top>
					<left>148</left>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
			</itemlayout>
			<itemlayout condition="Container.Content(TVShows) + !Skin.HasSetting(UseTVShowsPosterCover)" height="137" width="600">
				<control type="image">
					<description>Cover Case</description>
					<width>590</width>
					<height>127</height>	
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
					<animation effect="fade" end="60" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<width>590</width>
					<height>127</height>
					<bordersize>12</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="60" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Label</description>
					<left>17</left>
					<top>15</top>
					<width>550</width>
					<font>WideListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>	
					<visible>!IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="image">
					<description>Cover</description>
					<width>590</width>
					<height>127</height>
					<bordersize>12</bordersize>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>scale</aspectratio>
					<visible>!IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>544</left>
					<top>81</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
					<animation effect="fade" end="80" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>544</left>
					<top>81</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio align="right">keep</aspectratio>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>85</top>
					<left>544</left>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>85</top>
					<left>544</left>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
			</itemlayout>
			<itemlayout condition="!Container.Content(TVShows)" height="270" width="208">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<bordersize>14</bordersize>
					<texture background="true">$VAR[PosterThumb]</texture>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<top>0</top>
					<width>186</width>
					<height>250</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>149</left>
					<top>202</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>149</left>
					<top>202</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
			</itemlayout>
			<focusedlayout condition="Container.Content(TVShows) + Skin.HasSetting(UseTVShowsPosterCover)" height="270" width="208">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
					</control>	
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<bordersize>14</bordersize>
						<texture background="true">$VAR[TVShowsThumbTexture]</texture>
						<aspectratio>scale</aspectratio>
					</control>		
					<control type="image">
						<description>Overlay</description>
						<left>148</left>
						<top>201</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
					</control>		
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>148</left>
						<top>201</top>
						<width>26</width>
						<height>26</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>205</top>
						<left>148</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>205</top>
						<left>148</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>	
			</focusedlayout>
			<focusedlayout condition="Container.Content(TVShows) + !Skin.HasSetting(UseTVShowsPosterCover)" height="137" width="600">
				<control type="group">
					<animation effect="zoom" end="105" center="auto" time="100">Focus</animation>
					<animation effect="zoom" start="105" end="100" center="auto" time="100">UnFocus</animation>
					<control type="image">
						<description>Cover Case</description>
						<width>590</width>
						<height>127</height>	
						<texture border="7">covers/cover-case-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<width>590</width>
						<height>127</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>17</left>
						<top>15</top>
						<width>550</width>
						<font>WideListFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
						<visible>!IsEmpty(ListItem.Title)</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>590</width>
						<height>127</height>
						<bordersize>12</bordersize>
						<texture background="true">$VAR[BannerThumb]</texture>
						<aspectratio>scale</aspectratio>
						<visible>!IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>544</left>
						<top>81</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>544</left>
						<top>81</top>
						<width>26</width>
						<height>26</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio align="right">keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>85</top>
						<left>544</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>85</top>
						<left>544</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>
			</focusedlayout>
			<focusedlayout condition="!Container.Content(TVShows)" height="270" width="208">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<bordersize>14</bordersize>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<top>0</top>
						<width>186</width>
						<height>250</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>			
					<control type="image">
						<description>Overlay</description>
						<left>149</left>
						<top>202</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>149</left>
						<top>202</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>	
				</control>	
			</focusedlayout>			
		</control>
	</include>
	
	<include name="CommonDVDThumbsStyle1Height3">
		<height>537</height>
	</include>
	
	<include name="CommonDVDThumbsStyle1Height4">
		<height>520</height>
	</include>
	
	<include name="CommonDVDThumbsStyle2">
		<control type="panel" id="54">
			<viewtype label="31103">Icon</viewtype>
			<left>12</left>
			<top>101</top>
			<width>1242</width>
			<include condition="![SubString(Container.FolderPath,videodb://tvshows/) + !Skin.HasSetting(UseTVShowsPosterCover)]">CommonDVDThumbsStyle1Height3</include>
			<include condition="SubString(Container.FolderPath,videodb://tvshows/) + !Skin.HasSetting(UseTVShowsPosterCover)">CommonDVDThumbsStyle1Height4</include>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>54</onup>
			<ondown>54</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">ActivateWindow(3008)</oninfo>
			<animation effect="slide" end="15,5" condition="Container.Content(TVShows) + !Skin.HasSetting(UseTVShowsPosterCover)">Conditional</animation>
			<visible>Container.Content(Movies) | Container.Content(Sets) | Container.Content(Seasons) | Container.Content(TVShows)</visible>
			<itemlayout condition="Container.Content(TVShows) + Skin.HasSetting(UseTVShowsPosterCover)" height="179" width="138">	
				<control type="image">
					<description>Cover Case</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<bordersize>17</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<bordersize>12</bordersize>
					<texture background="true">$VAR[TVShowsThumbTexture]</texture>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>100</left>
					<top>126</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
				</control>
			</itemlayout>
			<itemlayout condition="Container.Content(TVShows) + !Skin.HasSetting(UseTVShowsPosterCover)" height="104" width="407">
				<control type="image">
					<description>Cover Case</description>
					<width>396</width>
					<height>93</height>	
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
					<animation effect="fade" end="60" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<width>396</width>
					<height>93</height>
					<bordersize>12</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="60" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Label</description>
					<left>17</left>
					<top>15</top>
					<width>356</width>
					<font>WideListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
					<visible>!IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="image">
					<description>Cover</description>
					<width>396</width>
					<height>93</height>
					<bordersize>12</bordersize>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>scale</aspectratio>
					<visible>!IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>358</left>
					<top>54</top>
					<width>20</width>
					<height>20</height>
					<texture>$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
				</control>
			</itemlayout>
			<itemlayout condition="!Container.Content(TVShows)" height="179" width="138">	
				<control type="image">
					<description>Cover Case</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<bordersize>12</bordersize>
					<texture background="true">$VAR[PosterThumb]</texture>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>15</left>
					<top>0</top>
					<width>122</width>
					<height>163</height>
					<bordersize>17</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>100</left>
					<top>126</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>100</left>
					<top>126</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
			</itemlayout>			
			<focusedlayout condition="Container.Content(TVShows) + Skin.HasSetting(UseTVShowsPosterCover)" height="179" width="138">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim2</include>
					<control type="image">
						<description>Cover Case</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<bordersize>17</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
					</control>	
					<control type="image">
						<description>Cover</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<bordersize>12</bordersize>
						<texture background="true">$VAR[TVShowsThumbTexture]</texture>
						<aspectratio>scale</aspectratio>
					</control>		
					<control type="image">
						<description>Overlay</description>
						<left>100</left>
						<top>126</top>
						<width>20</width>
						<height>20</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
					</control>
				</control>	
			</focusedlayout>
			<focusedlayout condition="Container.Content(TVShows) + !Skin.HasSetting(UseTVShowsPosterCover)" height="104" width="407">
				<control type="group">
					<animation effect="zoom" end="106" center="auto" time="100">Focus</animation>
					<animation effect="zoom" start="106" end="100" center="auto" time="100">UnFocus</animation>
					<control type="image">
						<description>Cover Case</description>
						<width>396</width>
						<height>93</height>	
						<texture border="7">covers/cover-case-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<width>396</width>
						<height>93</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>17</left>
						<top>15</top>
						<width>356</width>
						<font>WideListFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
						<visible>!IsEmpty(ListItem.Title)</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>396</width>
						<height>93</height>
						<bordersize>12</bordersize>
						<texture background="true">$VAR[BannerThumb]</texture>
						<aspectratio>scale</aspectratio>
						<visible>!IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>358</left>
						<top>54</top>
						<width>20</width>
						<height>20</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
					</control>
				</control>
			</focusedlayout>
			<focusedlayout height="179" width="138">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim2</include>
					<control type="image">
						<description>Cover Case</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<bordersize>12</bordersize>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>15</left>
						<top>0</top>
						<width>122</width>
						<height>163</height>
						<bordersize>17</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>			
					<control type="image">
						<description>Overlay</description>
						<left>100</left>
						<top>126</top>
						<width>20</width>
						<height>20</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>100</left>
						<top>126</top>
						<width>20</width>
						<height>20</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
				</control>	
			</focusedlayout>
		</control>
	</include>
	
	<include name="CommonDVDThumbsStyle3">
		<control type="panel" id="54">
			<viewtype label="31103">Icon</viewtype>
			<left>16</left>
			<top>101</top>
			<width>1248</width>
			<height>528</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>54</onup>
			<ondown>54</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">ActivateWindow(3008)</oninfo>
			<visible>Container.Content(Movies) | Container.Content(Sets) | Container.Content(Seasons) | Container.Content(TVShows)</visible>
			<itemlayout condition="Container.Content(TVShows) | Container.Content(Seasons)" height="132" width="308">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<width>288</width>
					<height>112</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<width>288</width>
					<height>112</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
					<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<width>288</width>
					<height>112</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!IsEmpty(ListItem.Art(clearlogo))</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>257</left>
					<top>15</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
				</control>		
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>257</left>
					<top>15</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<colordiffuse>CC99CCFF</colordiffuse>
					<animation effect="fade" end="80" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>257</left>
					<top>19</top>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>ListColor3</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>257</left>
					<top>19</top>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>ListColor3</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
			</itemlayout>		
			<itemlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="132" width="308">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<width>288</width>
					<height>112</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<width>288</width>
					<height>112</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!IsEmpty(ListItem.Art(clearlogo))</visible>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<width>288</width>
					<height>112</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>259</left>
					<top>15</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>259</left>
					<top>15</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
			</itemlayout>
			<focusedlayout condition="Container.Content(TVShows) | Container.Content(Seasons)" height="132" width="308">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<width>288</width>
						<height>112</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<width>288</width>
						<height>112</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>	
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<width>288</width>
						<height>112</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>		
					<control type="image">
						<description>Overlay</description>
						<left>257</left>
						<top>15</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
					</control>		
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>257</left>
						<top>15</top>
						<width>26</width>
						<height>26</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>257</left>
						<top>19</top>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>257</left>
						<top>19</top>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>	
			</focusedlayout>																	
			<focusedlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="132" width="308">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<width>288</width>
						<height>112</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<width>288</width>
						<height>112</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<width>288</width>
						<height>112</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>			
					<control type="image">
						<description>Overlay</description>
						<left>259</left>
						<top>15</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>259</left>
						<top>15</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>	
				</control>	
			</focusedlayout>			
		</control>
	</include>
	
	<include name="CommonDVDThumbsStyle4">
		<control type="panel" id="54">
			<viewtype label="31103">Icon</viewtype>
			<left>16</left>
			<top>101</top>
			<width>1248</width>
			<height>540</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>54</onup>
			<ondown>54</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">ActivateWindow(3008)</oninfo>
			<visible>Container.Content(Movies) | Container.Content(Sets) | Container.Content(Seasons) | Container.Content(TVShows)</visible>
			<itemlayout condition="Container.Content(TVShows) | Container.Content(Seasons)" height="180" width="306">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<width>288</width>
					<height>162</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<width>288</width>
					<height>162</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
					<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
				</control>
				<control type="image">
					<description>Cover Fallback</description>
					<left>11</left>
					<width>288</width>
					<height>162</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Art(clearart)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<width>288</width>
					<height>162</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
					<aspectratio aligny="bottom">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Art(clearart))</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>257</left>
					<top>15</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
				</control>		
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>257</left>
					<top>15</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<colordiffuse>CC99CCFF</colordiffuse>
					<animation effect="fade" end="80" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>257</left>
					<top>19</top>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>ListColor3</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>257</left>
					<top>19</top>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>ListColor3</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
			</itemlayout>		
			<itemlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="180" width="306">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<width>288</width>
					<height>162</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover Fallback</description>
					<left>11</left>
					<width>288</width>
					<height>162</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Art(clearart)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<width>288</width>
					<height>162</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
					<aspectratio aligny="bottom">keep</aspectratio>
					<visible>!IsEmpty(ListItem.Art(clearart))</visible>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<width>288</width>
					<height>162</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>259</left>
					<top>15</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>259</left>
					<top>15</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
			</itemlayout>
			<focusedlayout condition="Container.Content(TVShows) | Container.Content(Seasons)" height="180" width="306">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<width>288</width>
						<height>162</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<width>288</width>
						<height>162</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>	
					<control type="image">
						<description>Cover Fallback</description>
						<left>11</left>
						<width>288</width>
						<height>162</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(clearart)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<width>288</width>
						<height>162</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
						<aspectratio aligny="bottom">keep</aspectratio>
						<visible>!IsEmpty(ListItem.Art(clearart))</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>257</left>
						<top>15</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
					</control>		
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>257</left>
						<top>15</top>
						<width>26</width>
						<height>26</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>257</left>
						<top>19</top>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>257</left>
						<top>19</top>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>	
			</focusedlayout>																	
			<focusedlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="180" width="306">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<width>288</width>
						<height>162</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
					<description>Cover Fallback</description>
						<left>11</left>
						<width>288</width>
						<height>162</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(clearart)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<width>288</width>
						<height>162</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
						<aspectratio aligny="bottom">keep</aspectratio>
						<visible>!IsEmpty(ListItem.Art(clearart))</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<width>288</width>
						<height>162</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>			
					<control type="image">
						<description>Overlay</description>
						<left>259</left>
						<top>15</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>259</left>
						<top>15</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>	
				</control>	
			</focusedlayout>			
		</control>
	</include>
	
	<include name="CommonDVDThumbsStyle5">
		<control type="panel" id="54">
			<viewtype label="31103">Icon</viewtype>
			<left>16</left>
			<top>95</top>
			<width>1248</width>
			<height>546</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>54</onup>
			<ondown>54</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">ActivateWindow(3008)</oninfo>
			<visible>Container.Content(Movies) | Container.Content(Sets) | Container.Content(Seasons) | Container.Content(TVShows)</visible>
			<itemlayout condition="Container.Content(TVShows) | Container.Content(Seasons)" height="182" width="304">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<width>284</width>
					<height>172</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<width>284</width>
					<height>172</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
					<visible>IsEmpty(ListItem.Art(fanart))</visible>
				</control>
				<control type="image">
					<description>Cover Fallback</description>
					<left>11</left>
					<width>284</width>
					<height>172</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
					<aspectratio>scale</aspectratio>
					<visible>IsEmpty(ListItem.Art(landscape)) + !IsEmpty(ListItem.Art(fanart))</visible>
				</control>
				<control type="image">
					<description>Cover Fallback</description>
					<left>11</left>
					<top>95</top>
					<width>284</width>
					<height>60</height>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio aligny="bottom">keep</aspectratio>
					<visible>IsEmpty(ListItem.Art(landscape)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<width>284</width>
					<height>172</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(landscape)]</texture>
					<aspectratio>scale</aspectratio>
					<visible>!IsEmpty(ListItem.Art(landscape))</visible>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>253</left>
					<top>16</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
				</control>		
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>253</left>
					<top>16</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<colordiffuse>CC99CCFF</colordiffuse>
					<animation effect="fade" end="80" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>253</left>
					<top>20</top>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>ListColor3</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>253</left>
					<top>20</top>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>ListColor3</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
				</control>
			</itemlayout>		
			<itemlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="182" width="304">	
				<control type="image">
					<description>Cover Case</description>
					<left>11</left>
					<width>284</width>
					<height>172</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover Fallback</description>
					<left>11</left>
					<width>284</width>
					<height>172</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
					<aspectratio>scale</aspectratio>
					<visible>IsEmpty(ListItem.Art(landscape)) + !IsEmpty(ListItem.Art(fanart))</visible>
				</control>
				<control type="image">
					<description>Cover Fallback</description>
					<left>11</left>
					<top>95</top>
					<width>284</width>
					<height>60</height>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio aligny="bottom">keep</aspectratio>
					<visible>IsEmpty(ListItem.Art(landscape)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>11</left>
					<width>284</width>
					<height>172</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Art(landscape)]</texture>
					<aspectratio>scale</aspectratio>
					<visible>!IsEmpty(ListItem.Art(landscape))</visible>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>11</left>
					<width>284</width>
					<height>172</height>
					<bordersize>25</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Art(fanart))</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>255</left>
					<top>16</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>255</left>
					<top>16</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
				</control>
			</itemlayout>
			<focusedlayout condition="Container.Content(TVShows) | Container.Content(Seasons)" height="182" width="304">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<width>284</width>
						<height>172</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<width>284</width>
						<height>172</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(fanart))</visible>
					</control>
					<control type="image">
						<description>Cover Fallback</description>
						<left>11</left>
						<width>284</width>
						<height>172</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
						<aspectratio>scale</aspectratio>
						<visible>IsEmpty(ListItem.Art(landscape)) + !IsEmpty(ListItem.Art(fanart))</visible>
					</control>
					<control type="image">
						<description>Cover Fallback</description>
						<left>11</left>
						<top>95</top>
						<width>284</width>
						<height>60</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio aligny="bottom">keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(landscape)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<width>284</width>
						<height>172</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(landscape)]</texture>
						<aspectratio>scale</aspectratio>
						<visible>!IsEmpty(ListItem.Art(landscape))</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>253</left>
						<top>16</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay)</visible>
					</control>		
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>253</left>
						<top>16</top>
						<width>26</width>
						<height>26</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>253</left>
						<top>20</top>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>253</left>
						<top>20</top>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbnailOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>	
			</focusedlayout>																	
			<focusedlayout condition="Container.Content(Movies) | Container.Content(Sets)" height="182" width="304">	
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim</include>
					<control type="image">
						<description>Cover Case</description>
						<left>11</left>
						<width>284</width>
						<height>172</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Cover Fallback</description>
						<left>11</left>
						<width>284</width>
						<height>172</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
						<aspectratio>scale</aspectratio>
						<visible>IsEmpty(ListItem.Art(landscape)) + !IsEmpty(ListItem.Art(fanart))</visible>
					</control>
					<control type="image">
						<description>Cover Fallback</description>
						<left>11</left>
						<top>95</top>
						<width>284</width>
						<height>60</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio aligny="bottom">keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(landscape)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>11</left>
						<width>284</width>
						<height>172</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Art(landscape)]</texture>
						<aspectratio>scale</aspectratio>
						<visible>!IsEmpty(ListItem.Art(landscape))</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>11</left>
						<width>284</width>
						<height>172</height>
						<bordersize>25</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Art(fanart))</visible>
					</control>			
					<control type="image">
						<description>Overlay</description>
						<left>255</left>
						<top>16</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>
					<control type="image">
						<description>Watched Partial</description>
						<left>255</left>
						<top>16</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$VAR[WatchedPartial]</texture>
						<aspectratio>keep</aspectratio>
						<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbnailOverlay)</visible>
					</control>	
				</control>	
			</focusedlayout>			
		</control>
	</include>
	<!--//// END DVD THUMBS VIEW //////////////////////////////////////////////////////////////////////-->

	<!--//// START ALBUM THUMBS VIEW //////////////////////////////////////////////////////////////////-->
	<variable name="AlbumThumbsLabel1">
		<value condition="Container.Content(Albums)">$INFO[ListItem.Album]</value>
		<value condition="Container.Content(Songs) | Window.IsActive(MusicPlaylist)">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	
	<variable name="AlbumThumbsLabel2">
		<value condition="Container.Content(Addons)">$INFO[ListItem.AddonVersion]</value>
		<value>$INFO[ListItem.Artist]</value>
	</variable>
	
	<include name="AlbumThumbsView">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">63</defaultcontrol>
			<visible>Control.IsVisible(63)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ThumbnailViewScrollbar</include>		
			
			<include condition="Skin.String(CommonAlbumThumbsStyle,1) | Skin.String(CommonAlbumThumbsStyle,)">CommonAlbumThumbsStyle1</include>
			<include condition="Skin.String(CommonAlbumThumbsStyle,2)">CommonAlbumThumbsStyle2</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<!--<include condition="!Skin.HasSetting(EnableMusicLibraryClearLogos)">InfoPaneClearLogoMusic</include>-->
				<include>BottomPaneOpenCloseAnim</include>
								
				<control type="group">
					<visible>!Skin.HasSetting(HideAlbumThumbsLabel)</visible>
					
					<control type="label">
						<include>InfoPaneItemTitle</include>
						<label>[B]$VAR[AlbumThumbsLabel1][/B]</label>
					</control>
					
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$VAR[AlbumThumbsLabel2]</label>
					</control>
				</control>
			</control>	

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	
	<include name="CommonAlbumThumbsStyle1">
		<control type="panel" id="63">
			<viewtype label="31103">Icon</viewtype>
			<left>16</left>
			<top>101</top>
			<width>1245</width>
			<height>540</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>63</onup>
			<ondown>63</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<visible>Container.Content(Albums) | Container.Content(Songs) | Container.Content(Addons) | Window.IsActive(MusicPlaylist)</visible>
			<itemlayout height="270" width="249">	
				<control type="image">
					<description>Cover Case</description>
					<left>10</left>
					<top>0</top>
					<width>231</width>
					<height>231</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>10</left>
					<top>0</top>
					<width>231</width>
					<height>231</height>
					<bordersize>14</bordersize>
					<texture background="true">$INFO[ListItem.Thumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>										
				<control type="image">
					<description>Default Cover</description>
					<left>10</left>
					<top>0</top>
					<width>231</width>
					<height>231</height>
					<bordersize>45</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>	
				</control>
			</itemlayout>															
			<focusedlayout height="270" width="249">
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim3</include>
					<control type="image">
						<description>Cover Case</description>
						<left>10</left>
						<top>0</top>
						<width>231</width>
						<height>231</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>10</left>
						<top>0</top>
						<width>231</width>
						<height>231</height>
						<bordersize>14</bordersize>
						<texture background="true">$INFO[ListItem.Thumb]</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>10</left>
						<top>0</top>
						<width>231</width>
						<height>231</height>
						<bordersize>45</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
				</control>
			</focusedlayout>			
		</control>
	</include>
	
	<include name="CommonAlbumThumbsStyle2">
		<control type="panel" id="63">
			<viewtype label="31103">Icon</viewtype>
			<left>20</left>
			<top>101</top>
			<width>1239</width>
			<height>531</height>
			<pagecontrol>904</pagecontrol>
			<preloaditems>2</preloaditems>
			<scrolltime tween="sine" easing="inout">404</scrolltime>
			<onup>63</onup>
			<ondown>63</ondown>
			<onleft>850</onleft>
			<onright>150</onright>
			<visible>Container.Content(Albums) | Container.Content(Songs) | Container.Content(Addons) | Window.IsActive(MusicPlaylist)</visible>
			<itemlayout height="177" width="177">	
				<control type="image">
					<description>Cover Case</description>
					<left>5</left>
					<top>0</top>
					<width>168</width>
					<height>168</height>
					<texture background="true" border="14">covers/cover-case-thumbnail-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<left>5</left>
					<top>0</top>
					<width>168</width>
					<height>168</height>
					<bordersize>12</bordersize>
					<texture background="true">$INFO[ListItem.Thumb]</texture>
					<aspectratio>stretch</aspectratio>
				</control>										
				<control type="image">
					<description>Default Cover</description>
					<left>5</left>
					<top>0</top>
					<width>168</width>
					<height>168</height>
					<bordersize>33</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
			</itemlayout>															
			<focusedlayout height="177" width="177">					
				<control type="group">
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbnailViewCoverFocusAnim2</include>
					<control type="image">
						<description>Cover Case</description>
						<left>5</left>
						<top>0</top>
						<width>168</width>
						<height>168</height>
						<texture background="true" border="14">covers/cover-case-thumbnail-focus.png</texture>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>5</left>
						<top>0</top>
						<width>168</width>
						<height>168</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.Thumb]</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>5</left>
						<top>0</top>
						<width>168</width>
						<height>168</height>
						<bordersize>33</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>IsEmpty(ListItem.Thumb)</visible>
					</control>
				</control>
			</focusedlayout>			
		</control>
	</include>
	<!--//// START ALBUM THUMBS VIEW //////////////////////////////////////////////////////////////////-->
	
	<!--//// START 3D WRAP VIEW ////////////////////////////////////////////////////////////////////////////-->
	<variable name="3DWrapPoster-8">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(-8).Art(animatedposter))">$INFO[ListItem(-8).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(-8).Art(poster))">$INFO[ListItem(-8).Art(poster)]</value>
        <value>$INFO[ListItem(-8).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-7">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(-7).Art(animatedposter))">$INFO[ListItem(-7).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
        <value>$INFO[ListItem(-7).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-6">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(-6).Art(animatedposter))">$INFO[ListItem(-6).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
        <value>$INFO[ListItem(-6).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-5">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(-5).Art(animatedposter))">$INFO[ListItem(-5).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
        <value>$INFO[ListItem(-5).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-4">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(-4).Art(animatedposter))">$INFO[ListItem(-4).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
        <value>$INFO[ListItem(-4).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-3">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(-3).Art(animatedposter))">$INFO[ListItem(-3).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
        <value>$INFO[ListItem(-3).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-2">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(-2).Art(animatedposter))">$INFO[ListItem(-2).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
        <value>$INFO[ListItem(-2).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster-1">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(-1).Art(animatedposter))">$INFO[ListItem(-1).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
        <value>$INFO[ListItem(-1).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster8">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(8).Art(animatedposter))">$INFO[ListItem(8).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
        <value>$INFO[ListItem(8).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster7">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(7).Art(animatedposter))">$INFO[ListItem(7).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
        <value>$INFO[ListItem(7).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster6">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(6).Art(animatedposter))">$INFO[ListItem(6).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
        <value>$INFO[ListItem(6).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster5">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(5).Art(animatedposter))">$INFO[ListItem(5).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
        <value>$INFO[ListItem(5).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster4">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(4).Art(animatedposter))">$INFO[ListItem(4).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
        <value>$INFO[ListItem(4).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster3">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(3).Art(animatedposter))">$INFO[ListItem(3).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
        <value>$INFO[ListItem(3).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster2">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(2).Art(animatedposter))">$INFO[ListItem(2).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
        <value>$INFO[ListItem(2).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster1">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem(1).Art(animatedposter))">$INFO[ListItem(1).Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
        <value>$INFO[ListItem(1).Thumb]</value>
	</variable>
	
	<variable name="3DWrapPoster0">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem.Art(animatedposter))">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value>$INFO[ListItem.Thumb]</value>
	</variable>
	
	<variable name="3DWrapFanart">
		<value condition="Container.Content(TVShows) + Skin.HasSetting(3DWrapShowLandscape) + !IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>background-default.png</value>
	</variable>
	
	<include name="3DWrapPosterCover">
		<left>-72</left>
		<top>78</top>
		<width>144</width>
		<height>205</height>
		<bordertexture border="9">covers/3dwrap-poster-shadow.png</bordertexture>
		<bordersize>10</bordersize>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverOverlay">
		<left>-62</left>
		<top>88</top>
		<width>124</width>
		<height>185</height>
 		<texture background="true">covers/3dwrap-poster-mask.png</texture>
	</include>
	
	<include name="3DWrapPosterCoverReflection">
		<left>-62</left>
		<top>275</top>
		<width>124</width>
		<height>185</height>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverReflectionOverlay">
		<left>-62</left>
		<top>275</top>
		<width>124</width>
		<height>185</height>
		<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
		<aspectratio scalediffuse="false">stretch</aspectratio>
	</include>
	
	<include name="3DWrapPosterCoverIcon">
		<left>-62</left>
		<top>88</top>
		<width>124</width>
		<height>185</height>
		<aspectratio>keep</aspectratio>
	</include>
	
	<include name="3DWrapOverlayImage1">
		<left>-55</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<aspectratio>keep</aspectratio>
		<visible>[Container.Content(Movies) + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
	</include>
	
	<include name="3DWrapOverlayImage2">
		<left>30</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<aspectratio>keep</aspectratio>
		<visible>[Container.Content(Movies) + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
	</include>
		
	<include name="3DWrapOverlayUnwatched1">
		<left>-55</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<texture background="true">OverlayClean.png</texture>
		<aspectratio>keep</aspectratio>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapOverlayUnwatched2">
		<left>30</left>
		<top>95</top>
		<width>26</width>
		<height>26</height>
		<texture background="true">OverlayClean.png</texture>
		<aspectratio>keep</aspectratio>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes1A">
		<top>99</top>
		<left>-55</left>
		<width>26</width>
		<font>ListFont3</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes1B">
		<top>99</top>
		<left>-55</left>
		<width>26</width>
		<font>ListFont4</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes2A">
		<top>99</top>
		<left>30</left>
		<width>26</width>
		<font>ListFont3</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapUnwatchedEpisodes2B">
		<top>99</top>
		<left>30</left>
		<width>26</width>
		<font>ListFont4</font>
		<textcolor>white</textcolor>
		<align>center</align>
		<animation effect="fade" end="85" condition="true">Conditional</animation>
	</include>
	
	<include name="3DWrapView">
		<control type="group" id="500">	
		    <defaultcontrol always="true">588</defaultcontrol>
			<visible>Control.IsVisible(588)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="image">
				<description>Background Glow</description>
				<left>-50</left>
				<top>500</top>
				<width>1380</width>
				<height>345</height>
				<texture>gui/background-glow.png</texture>
				<animation effect="fade" end="22" condition="true">Conditional</animation>
			</control>

			<control type="image">
				<left>30</left>
				<top>92</top>
				<width>1220</width>
				<height>346</height>
				<texture border="7">panels/content-panel.png</texture>
				<include>PanelFadeAnim</include>
				<include>ControlsOpenCloseAnim</include>
			</control>
			
			<control type="group">
				<left>35</left>
				<top>97</top>
				
				<control type="image">
					<description>Content Background Left</description>
					<width>603</width>
					<height>336</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<description>Content Background Right</description>
					<left>606</left>
					<width>604</width>
					<height>336</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="group">
					<visible>!IsEmpty(ListItem.Title)</visible>
					<include>BackgroundVisibleAnim</include>
					<control type="image">
						<description>Media Info Background Title / Clearlogo</description>
						<left>6</left>
						<top>6</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					</control>
					
					<control type="image">
						<description>Media Info Background</description>
						<left>6</left>
						<top>77</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					</control>
					
					<control type="image">
						<description>Media Info Background</description>
						<left>6</left>
						<top>148</top>
						<width>590</width>
						<height>65</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					</control>
					
					<control type="image">
						<description>Description Background</description>
						<left>6</left>
						<top>148</top>
						<width>590</width>
						<height>182</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>![Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)]</visible>
					</control>
					
					<control type="image">
						<description>Description Background</description>
						<left>6</left>
						<top>219</top>
						<width>590</width>
						<height>111</height>
						<texture border="4">panels/panel3.png</texture>
						<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
						<visible>Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					</control>
				</control>
			</control>
			
			<control type="wraplist" id="588">
				<viewtype label="31121">3D Wrap View</viewtype>
				<left>10</left>
				<top>442</top>
				<width>1260</width>
				<height>300</height>	
				<onleft>588</onleft>
				<onright>588</onright>
				<onup>850</onup>
				<ondown>150</ondown>
				<pagecontrol>929</pagecontrol>
				<orientation>horizontal</orientation>
				<focusposition>4</focusposition>	
				<scrolltime>250</scrolltime>		
				<itemlayout width="136">
					<control type="group">
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.String(3DWrapMoviesStyle,2)] | [Container.Content(TVShows) + Skin.String(3DWrapTVShowsStyle,2)]</visible>
						<control type="image">
							<description>Cover</description>
							<left>-8</left>
							<width>142</width>
							<height>194</height>
							<texture diffuse="covers/3dwrap-poster-diffuse.png" background="true">$VAR[PosterThumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
							<bordersize>8</bordersize>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<top>8</top>
							<width>126</width>
							<height>178</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Reflection</description>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[PosterThumb]</texture>
							<aspectratio aligny="top">stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Overlay Reflection</description>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Icon</description>
							<width>126</width>
							<height>178</height>
							<texture background="true">$INFO[ListItem.ActualIcon]</texture>
							<aspectratio>keep</aspectratio>
							<include>InfoPaneLabelFadeAnim</include>
							<visible>IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<left>-4</left>
							<top>4</top>
							<width>134</width>
							<height>186</height>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">black.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>4</bordersize>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
							<animation effect="fade" end="25" condition="true">Conditional</animation>
						</control>
						<control type="image">
							<left>89</left>
							<top>15</top>
							<width>26</width>
							<height>26</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>89</left>
							<top>15</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="fade" end="90" condition="true">Conditional</animation>
							<visible>[Container.Content(Movies) | Container.Content(Sets)] + ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMovies3DWrapOverlay)</visible>
						</control>
						<control type="group">
							<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows)</visible>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>89</left>
								<top>15</top>
								<width>26</width>
								<height>26</height>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<animation effect="fade" end="90" condition="true">Conditional</animation>
								<visible>!IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>19</top>
								<left>89</left>
								<width>26</width>
								<font>ListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="90" condition="true">Conditional</animation>
								<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>19</top>
								<left>89</left>
								<width>26</width>
								<font>ListFont4</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="90" condition="true">Conditional</animation>
								<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
						</control>
					</control>
				</itemlayout>	
				<focusedlayout width="180">
					<control type="group">
						<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.String(3DWrapMoviesStyle,2)] | [Container.Content(TVShows) + Skin.String(3DWrapTVShowsStyle,2)]</visible>
						<depth>DepthContent+</depth>
						<control type="image">
							<description>Cover</description>
							<left>14</left>
							<width>142</width>
							<height>194</height>
							<texture diffuse="covers/3dwrap-poster-diffuse.png" background="true">$VAR[PosterThumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
							<bordersize>8</bordersize>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
							<include>3DViewFocusAnim</include>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<left>22</left>
							<top>8</top>
							<width>126</width>
							<height>178</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Reflection</description>
							<left>22</left>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[PosterThumb]</texture>
							<aspectratio aligny="top">stretch</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Overlay Reflection</description>
							<left>22</left>
							<top>188</top>
							<width>126</width>
							<height>178</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio>stretch</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Icon</description>
							<left>5</left>
							<width>126</width>
							<height>178</height>
							<texture background="true">$INFO[ListItem.ActualIcon]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="zoom" end="130" center="8,20" tween="back" easing="out" time="300" delay="100">Focus</animation>
							<animation effect="zoom" start="130" end="100" center="8,20" time="150">UnFocus</animation>
							<visible>IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<left>115</left>
							<top>14</top>
							<width>26</width>
							<height>26</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]</visible>
							<include>3DViewFocusAnim</include>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>115</left>
							<top>14</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<include>3DViewFocusAnim</include>
							<visible>[Container.Content(Movies) | Container.Content(Sets)] + ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMovies3DWrapOverlay)</visible>
						</control>
						<control type="group">
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !Skin.HasSetting(HideTVShows3DWrapOverlay) + Container.Content(TVShows)</visible>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>115</left>
								<top>14</top>
								<width>26</width>
								<height>26</height>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<include>3DViewFocusAnim</include>
								<visible>!IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>18</top>
								<left>115</left>
								<width>26</width>
								<font>ListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<include>3DViewFocusAnim</include>
								<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>18</top>
								<left>115</left>
								<width>26</width>
								<font>ListFont4</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<include>3DViewFocusAnim</include>
								<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
						</control>
					</control>
				</focusedlayout>					
			</control>
		
			<control type="image">
				<description>Fan Art</description>
				<left>647</left>
				<top>103</top>
				<width>592</width>
				<height>324</height>
				<align>left</align>
				<texture background="true" diffuse="covers/list-info-3-fanart-diffuse.png">$VAR[3DWrapFanart]</texture>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<fadetime>FanartCrossfadeTime</fadetime>
			</control>
			
			<control type="image">
				<left>647</left>
				<top>70</top>
				<width>592</width>
				<height>324</height>
				<texture background="true">home-movies-icon.png</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<include>BackgroundVisibleAnim</include>
				<visible>IsEmpty(ListItem.Art(fanart)) + [Container.Content(Movies) | Container.Content(Sets)]</visible>
			</control>
			
			<control type="image">
				<left>647</left>
				<top>50</top>
				<width>592</width>
				<height>335</height>
				<texture background="true">home-tvshows-icon.png</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<include>BackgroundVisibleAnim</include>
				<visible>IsEmpty(ListItem.Art(fanart)) + Container.Content(TVShows)</visible>
			</control>
			
			<control type="multiimage">
				<left>647</left>
				<top>103</top>
				<width>592</width>
				<height>324</height>
				<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]extrafanart</imagepath>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>FanartCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(Enable3DWrapMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(Enable3DWrapTVShowsSmallExtraFanart)]</visible>
			</control>
			
			<control type="multiimage">
				<left>647</left>
				<top>103</top>
				<width>592</width>
				<height>324</height>
				<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]../extrafanart</imagepath>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>FanartCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(Enable3DWrapMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(Enable3DWrapTVShowsSmallExtraFanart)]</visible>
			</control>
			
			<control type="multiimage">
				<left>647</left>
				<top>103</top>
				<width>592</width>
				<height>324</height>
				<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]../../extrafanart</imagepath>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>FanartCrossfadeTime</fadetime>
				<randomize>true</randomize>
				<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(Enable3DWrapMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(Enable3DWrapTVShowsSmallExtraFanart)]</visible>
			</control>
			
			<control type="image">
				<description>Genre Background</description>
				<left>655</left>
				<top>394</top>
				<width>578</width>
				<height>27</height>
				<texture border="8">views/genre-background.png</texture>
				<include>ControlsOpenCloseAnim</include>
				<include>BackgroundVisibleAnim</include>
				<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(SkinHelper.MovieSet.Genre))]</visible>
				<visible>![[Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
			</control>
			
			<control type="label">
				<description>Genre</description>
				<left>655</left>
				<top>396</top>
				<width>578</width>
				<font>MediaInfoFont3</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>center</align>
				<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
				<scroll>true</scroll>
				<include>BackgroundVisibleAnim</include>
				<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(SkinHelper.MovieSet.Genre))]</visible>
				<visible>![[Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
			</control>

			<control type="group">				
				<description>Info Dialog Box Area</description>
				<left>50</left>
				<visible>!Container.OnNext + !Container.OnPrevious + !IsEmpty(ListItem.Title)</visible>
				<include>ControlsOpenCloseAnim</include>
				<include>BackgroundVisibleAnim</include>
				
				<control type="image">
					<top>106</top>
					<width>572</width>
					<height>60</height>
					<align>center</align>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<fadetime>400</fadetime>
					<visible>!IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableMoviesClearLogo)</visible>
				</control>
				
				<control type="label">
					<description>Title</description>
					<top>117</top>
					<width>571</width>
					<align>center</align>
					<font>FullMediaInfoTitleFont</font>
					<textcolor>MediaInfoTitleColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
					<scroll>true</scroll>
					<visible>IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableMoviesClearLogo)</visible>
				</control>
				
				<control type="label">
					<top>174</top>
					<width>572</width>
					<height>65</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>MediaInfoFont</font>
					<textcolor>MediaInfoItemColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$LOCALIZE[20457]</label>
					<visible>ListItem.IsCollection + !System.HasAddon(script.skin.helper.service)</visible>
				</control>
				
				<control type="group">
					<visible>![ListItem.IsCollection + !System.HasAddon(script.skin.helper.service)]</visible>
					<control type="group">
						<visible>Container.Content(Movies) | Container.Content(Sets)</visible>
						<control type="grouplist">
							<description>Director</description>
							<visible>!ListItem.IsCollection</visible>
							<top>184</top>
							<width>400</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[20339]:</label>
							</control>
							<control type="label">
								<width min="0" max="250">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[ListItem.Director]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>Movies</description>
							<visible>ListItem.IsCollection</visible>
							<top>184</top>
							<width>400</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[20342]:</label>
							</control>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[Window(Home).Property(SkinHelper.MovieSet.Count)]</label>
							</control>
						</control>
					
						<control type="grouplist">
							<description>Runtime</description>
							<top>208</top>
							<width>289</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[2050]:</label>
							</control>
							<control type="label">
								<width min="0" max="179">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$VAR[MovieDuration]</label>
							</control>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Year</description>
						<left>162</left>
						<top>184</top>
						<width>410</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[345]:</label>
						</control>
						<control type="label">
							<width min="0" max="179">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Year]</label>
							<visible>!ListItem.IsCollection</visible>
						</control>
						<control type="label">
							<width min="0" max="400">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Window(Home).Property(SkinHelper.MovieSet.Years)]</label>
							<visible>ListItem.IsCollection</visible>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Rating</description>
						<left>268</left>
						<top>208</top>
						<width>304</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[563]:</label>
						</control>
						<control type="label">
							<width min="0" max="179">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.RatingAndVotes]</label>
							<visible>!ListItem.IsCollection</visible>
						</control>
						<control type="label">
							<width min="0" max="179">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Rating]</label>
							<visible>ListItem.IsCollection</visible>
						</control>
					</control>
				</control>
				
				<control type="group">
					<visible>Container.Content(TVShows)</visible>
					<control type="grouplist">
						<description>Seasons</description>
						<top>184</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[33054]:</label>
						</control>
						<control type="label">
							<width min="0" max="250">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
						</control>
					</control>
				
					<control type="grouplist">
						<description>Episodes</description>
						<top>208</top>
						<width>289</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20360]:</label>
						</control>
						<control type="label">
							<width min="0" max="179">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Episode]</label>
						</control>
					</control>
				</control>
				
				<control type="group">
					<visible>System.HasAddon(script.tv.show.next.aired) + Container.Content(TVShows) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<control type="grouplist">
						<description>Latest Episode</description>
						<top>255</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31966]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.] $INFO[Window(Home).Property(NextAired.LatestTitle)] $INFO[Window(Home).Property(NextAired.LatestDate),(,)]</label>
						</control>
					</control>
				
					<control type="grouplist">
						<description>Next Episode</description>
						<visible>!IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<top>279</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31967]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next Episode</description>
						<visible>IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<top>279</top>
						<width>569</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20416]:</label>
						</control>
						<control type="label">
							<width min="0" max="631">auto</width>
							<font>MediaInfoFont2</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Premiered]</label>
						</control>
					</control>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<top>255</top>
					<width>571</width>
					<height>164</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$VAR[MoviePlot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>![Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)]</visible>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<top>326</top>
					<width>571</width>
					<height>93</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>Container.Content(TVShows) + System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
			</control>
			
			<control type="group">
				<visible>[[Container.Content(Movies) | Container.Content(Sets)] + [Skin.String(3DWrapMoviesStyle,) | Skin.String(3DWrapMoviesStyle,1)]] | [Container.Content(TVShows) + [Skin.String(3DWrapTVShowsStyle,) | Skin.String(3DWrapTVShowsStyle,1)]]</visible>
				<control type="group" id="5051">
					<depth>Depth3DWrapPosters</depth>
					<top>367</top>
					<camera x="640" y="540" />
					<visible>Control.IsVisible(588) + Container.OnNext</visible>
					<animation effect="slide" end="-70,0" time="250" reversible="false">Hidden</animation>
					<control type="group">
						<left>104</left>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,16)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-8]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-8).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-8]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-8).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-8).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-8).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-8).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-8).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-8).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-8).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-8).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-8).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-8).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>							
						</control>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,14)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-7).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,12)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-6).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>				
						</control>
						<control type="group">
							<visible>!StringCompare(ListItem(-6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
							<control type="image">
								<include>3DWrapOverlayUnwatched1</include>
								<visible>!IsEmpty(ListItem(-6).Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<include>3DWrapUnwatchedEpisodes1A</include>
								<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
								<visible>!IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<include>3DWrapUnwatchedEpisodes1B</include>
								<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
								<visible>IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
							</control>		
						</control>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,10)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-5).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,8)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-4).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,6)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-3).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					<control type="group">
						<left>524</left>
						<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,4)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-2).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>		
							</control>
						</control>
					</control>
					
					<!-- image off screen to stop lag of fading new item -->
					<control type="group">
						<visible>IntegerGreaterThan(Container.NumItems,19)</visible>
						<left>1485</left>
						<control type="image">
							<include>3DWrapPosterCover</include>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster8]</texture>
						</control>
					</control>

					<control type="group">
						<left>1247</left>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" delay="0" time="250" reversible="false">Visible</animation>
						<animation effect="rotatey" center="1270" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,13)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(7).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1177</left>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,11)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(6).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,9)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(5).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,7)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(4).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,5)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(3).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,3)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(2).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,1)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster1]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster1]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(1).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(1).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(1).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="-120,0" time="350" reversible="false">Hidden</animation>
						<control type="group">
							<left>757</left>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="780" end="-30" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
							<control type="group">
								<control type="image">							
									<include>3DWrapPosterCover</include>
									<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
									<visible>!IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<include>3DWrapPosterCoverReflection</include>
									<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
									<visible>!IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<description>Cover Icon</description>
									<include>3DWrapPosterCoverIcon</include>
									<texture background="true">$INFO[ListItem.ActualIcon]</texture>
									<visible>IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<info>ListItem.Overlay</info>
									<include>3DWrapOverlayImage2</include>
								</control>
								<control type="group">
									<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched2</include>
										<visible>!IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2A</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2B</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
						<control type="group">
							<left>717</left>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="694" end="-60" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
							<control type="group">
								<visible>IntegerGreaterThan(Container.NumItems,2)</visible>
								<control type="image">
									<include>3DWrapPosterCover</include>
									<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-1]</texture>
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
									<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
								</control>
								<control type="image">
									<include>3DWrapPosterCoverReflection</include>
									<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-1]</texture>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
									<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
								</control>
								<control type="image">
									<description>Cover Icon</description>
									<include>3DWrapPosterCoverIcon</include>
									<texture background="true">$INFO[ListItem(-1).ActualIcon]</texture>
									<visible>IsEmpty(ListItem(-1).Thumb)</visible>
								</control>
								<control type="image">
									<info>ListItem(-1).Overlay</info>
									<include>3DWrapOverlayImage1</include>
								</control>
								<control type="group">
									<visible>!StringCompare(ListItem(-1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched1</include>
										<visible>!IsEmpty(ListItem(-1).Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes1A</include>
										<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
										<visible>!IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes1B</include>
										<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
										<visible>IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
					</control>
				</control> 
				
				<control type="group" id="5052">
					<depth>Depth3DWrapPosters</depth>
					<top>367</top>
					<camera x="640" y="540" />
					<visible>Control.IsVisible(588) + Container.OnPrevious</visible>
					<animation effect="slide" end="70,0" time="250" reversible="false">Hidden</animation>
					<control type="group">
						<left>1177</left>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,15)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster8]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(8).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster8]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(8).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(8).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(8).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(8).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(8).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(8).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(8).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(8).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(8).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(8).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,13)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(7).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,11)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(6).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,9)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(5).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,7)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(4).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,5)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(3).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>757</left>
						<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,3)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(2).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					
					<!-- image off screen to stop lag of fading new item -->
					<control type="group">
						<left>-600</left>
						<visible>IntegerGreaterThan(Container.NumItems,20)</visible>
						<control type="image">
							<include>3DWrapPosterCover</include>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-8]</texture>
						</control>
					</control>
					
					<control type="group">
						<left>34</left>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="10" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,14)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-7).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>104</left>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,12)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-6).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,10)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-5).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,8)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-4).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,6)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-3).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,4)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-2).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,2)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-1]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-1]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-1).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-1).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-1).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>

					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="120,0" time="350" reversible="false">Hidden</animation>
						<control type="group">
							<left>524</left>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="500" end="60" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
							<control type="group">
								<control type="image">
									<include>3DWrapPosterCover</include>
									<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>						
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
									<visible>!IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<include>3DWrapPosterCoverReflection</include>
									<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
									<visible>!IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<description>Cover Icon</description>
									<include>3DWrapPosterCoverIcon</include>
									<texture background="true">$INFO[ListItem.ActualIcon]</texture>
									<visible>IsEmpty(ListItem.Thumb)</visible>
								</control>
								<control type="image">
									<info>ListItem.Overlay</info>
									<include>3DWrapOverlayImage2</include>
								</control>
								<control type="group">
									<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched2</include>
										<visible>!IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2A</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2B</include>
										<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
										<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
						<control type="group">
							<left>564</left>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="587" end="60" time="250" reversible="false" tween="quadratic" easing="out">Hidden</animation>
							<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,1)</visible>
								<control type="image">
									<include>3DWrapPosterCover</include>
									<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster1]</texture>
								</control>
								<control type="image">
									<description>Cover Overlay</description>
									<include>3DWrapPosterCoverOverlay</include>
									<visible>!IsEmpty(ListItem(1).Thumb)</visible>
								</control>
								<control type="image">
									<include>3DWrapPosterCoverReflection</include>
									<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster1]</texture>
								</control>
								<control type="image">
									<description>Cover Reflection Overlay</description>
									<include>3DWrapPosterCoverReflectionOverlay</include>
									<visible>!IsEmpty(ListItem(1).Thumb)</visible>
								</control>
								<control type="image">
									<description>Cover Icon</description>
									<include>3DWrapPosterCoverIcon</include>
									<texture background="true">$INFO[ListItem(1).ActualIcon]</texture>
									<visible>IsEmpty(ListItem(1).Thumb)</visible>
								</control>
								<control type="image">
									<info>ListItem(1).Overlay</info>
									<include>3DWrapOverlayImage2</include>
								</control>
								<control type="group">
									<visible>!StringCompare(ListItem(1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
									<control type="image">
										<include>3DWrapOverlayUnwatched2</include>
										<visible>!IsEmpty(ListItem(1).Property(UnWatchedEpisodes))</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2A</include>
										<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
										<visible>!IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
									</control>
									<control type="label">
										<description>Unwatched Episodes</description>
										<include>3DWrapUnwatchedEpisodes2B</include>
										<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
										<visible>IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
									</control>
								</control>
							</control>
						</control>
					</control>
				</control>
				
				<control type="group" id="5050">
					<depth>Depth3DWrapPosters</depth>
					<top>367</top>
					<animation effect="fade" time="500">WindowOpen</animation>
					<animation effect="fade" time="200">WindowClose</animation>
					<visible>Control.IsVisible(588) + ![Control.IsVisible(5051) | Control.IsVisible(5052)]</visible>			
					<camera x="640" y="540" />
					<control type="group">
						<left>104</left>
						<animation effect="rotatey" center="80" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,14)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-7).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>174</left>
						<animation effect="rotatey" center="150" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,12)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-6).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>244</left>
						<animation effect="rotatey" center="220" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,10)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-5).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>314</left>
						<animation effect="rotatey" center="290" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,8)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-4).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>384</left>
						<animation effect="rotatey" center="360" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,6)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-3).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						</control>
					</control>
					<control type="group">
						<left>454</left>
						<animation effect="rotatey" center="430" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,4)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-2).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>524</left>
						<animation effect="rotatey" center="500" start="-60" end="-60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,2)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster-1]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster-1]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(-1).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(-1).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(-1).Overlay</info>
								<include>3DWrapOverlayImage1</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(-1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched1</include>
									<visible>!IsEmpty(ListItem(-1).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1A</include>
									<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes1B</include>
									<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>1177</left>
						<animation effect="rotatey" center="1200" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,13)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster7]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(7).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(7).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(7).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(7).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(7).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(7).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(7).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>1107</left>
						<animation effect="rotatey" center="1130" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,11)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster6]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(6).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(6).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(6).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(6).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(6).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(6).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(6).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>1037</left>
						<animation effect="rotatey" center="1060" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,9)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster5]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(5).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(5).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(5).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(5).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(5).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(5).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(5).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>967</left>
						<animation effect="rotatey" center="990" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,7)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster4]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(4).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(4).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(4).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(4).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(4).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(4).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(4).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>897</left>
						<animation effect="rotatey" center="920" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,5)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster3]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(3).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(3).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(3).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(3).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(3).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(3).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(3).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>827</left>
						<animation effect="rotatey" center="850" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,3)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster2]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(2).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(2).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(2).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(2).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(2).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(2).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(2).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>
					<control type="group">
						<left>757</left>
						<animation effect="rotatey" center="780" start="60" end="60" time="0" condition="true">Conditional</animation>
						<control type="group">
							<visible>IntegerGreaterThan(Container.NumItems,1)</visible>
							<control type="image">
								<include>3DWrapPosterCover</include>
								<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster1]</texture>
							</control>
							<control type="image">
								<description>Cover Overlay</description>
								<include>3DWrapPosterCoverOverlay</include>
								<visible>!IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<include>3DWrapPosterCoverReflection</include>
								<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster1]</texture>
							</control>
							<control type="image">
								<description>Cover Reflection Overlay</description>
								<include>3DWrapPosterCoverReflectionOverlay</include>
								<visible>!IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<description>Cover Icon</description>
								<include>3DWrapPosterCoverIcon</include>
								<texture background="true">$INFO[ListItem(1).ActualIcon]</texture>
								<visible>IsEmpty(ListItem(1).Thumb)</visible>
							</control>
							<control type="image">
								<info>ListItem(1).Overlay</info>
								<include>3DWrapOverlayImage2</include>
							</control>
							<control type="group">
								<visible>!StringCompare(ListItem(1).Property(UnWatchedEpisodes),0) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)</visible>
								<control type="image">
									<include>3DWrapOverlayUnwatched2</include>
									<visible>!IsEmpty(ListItem(1).Property(UnWatchedEpisodes))</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2A</include>
									<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
									<visible>!IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
								</control>
								<control type="label">
									<description>Unwatched Episodes</description>
									<include>3DWrapUnwatchedEpisodes2B</include>
									<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
									<visible>IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),99)</visible>
								</control>
							</control>
						 </control>
					</control>			
				</control>		
				
				<control type="group">
					<visible>Control.IsVisible(588) + ![Control.IsVisible(5051) | Control.IsVisible(5052)]</visible>
					<depth>DepthContent+</depth>
					<left>543</left>
					<top>425</top>
					<animation effect="zoom" start="100" end="70" center="643,495" time="300" tween="circle" easing="inout" condition="ControlGroup(150).HasFocus | ControlGroup(850).HasFocus | Control.HasFocus(555)">Conditional</animation>
					<animation effect="zoom" start="75" end="100" center="643,470" easing="inout" time="300">Visible</animation>
					<control type="group">
						<control type="image">
							<top>15</top>
							<width>195</width>
							<height>260</height>
							<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[3DWrapPoster0]</texture>
							<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
							<bordersize>10</bordersize>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Overlay</description>
							<left>10</left>
							<top>25</top>
							<width>175</width>
							<height>240</height>
							<texture background="true">covers/3dwrap-poster-mask.png</texture>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<left>10</left>
							<top>267</top>
							<width>175</width>
							<height>240</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[3DWrapPoster0]</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Reflection Overlay</description>
							<left>10</left>
							<top>267</top>
							<width>175</width>
							<height>240</height>
							<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<visible>!IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<description>Cover Icon</description>
							<left>10</left>
							<top>25</top>
							<width>175</width>
							<height>240</height>
							<aspectratio>keep</aspectratio>
							<texture background="true">$INFO[ListItem.ActualIcon]</texture>
							<visible>IsEmpty(ListItem.Thumb)</visible>
						</control>
						<control type="image">
							<left>137</left>
							<top>35</top>
							<width>35</width>
							<height>35</height>
							<info>ListItem.Overlay</info>
							<aspectratio>keep</aspectratio>
							<visible>!IsEmpty(ListItem.Overlay) + [[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMovies3DWrapOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShows3DWrapOverlay)]]</visible>
						</control>
						<control type="group">
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + Container.Content(TVShows)</visible>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>137</left>
								<top>35</top>
								<width>35</width>
								<height>35</height>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>40</top>
								<left>137</left>
								<width>35</width>
								<font>WideListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="85" condition="true">Conditional</animation>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<top>42</top>
								<left>137</left>
								<width>35</width>
								<font>ListFont5</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<animation effect="fade" end="85" condition="true">Conditional</animation>
								<visible>!Skin.HasSetting(HideTVShows3DWrapOverlay) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
						</control>
					</control>
				</control>		
			</control>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<depth>DepthContent+</depth>
				<top>BottomPaneOffsetY</top>
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>
			
			<control type="group" id="150">
				<depth>DepthContent+</depth>
				<animation type="Conditional" condition="ControlGroup(150).HasFocus" reversible="false">
					<effect type="fade" start="0" end="100" time="200"/>
					<effect type="zoom" start="70" end="100" center="640,687" time="400" tween="back" easing="inout"/>
				</animation>
				
				<animation type="Conditional" condition="!ControlGroup(150).HasFocus" reversible="false">
					<effect type="fade" start="100" end="0" time="200" delay="200"/>
					<effect type="zoom" start="100" end="70" center="640,687" time="400" tween="back" easing="inout"/>
				</animation>
				
				<control type="image">
					<left>550</left>
					<top>680</top>
					<width>180</width>
					<height>14</height>
					<texture border="4">controls/scrollbar-background.png</texture>
				</control>
				
				<control type="panel" id="979">
					<ondown condition="[Container.Content(Movies) | Container.Content(TVShows)] + !IsEmpty(ListItem.Trailer)">PlayMedia($ESCINFO[ListItem.Trailer],noresume)</ondown>
					<ondown condition="[Container.Content(Movies) | Container.Content(TVShows)] + IsEmpty(ListItem.Trailer) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[ListItem.Label] trailer)</ondown>
					<ondown condition="Container.Content(Episodes) + IsEmpty(ListItem.Trailer) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[ListItem.TVShowTitle] $INFO[ListItem.Label] trailer)</ondown>
					<include name="QuickJumpHorizontalLayout">
						<param name="left" value="550" />
						<param name="top" value="678" />
						<param name="width" value="180" />
						<param name="itemwidth" value="20" />
					</include>
				</control>
				
				<control type="scrollbar" id="929">
					<left>550</left>
					<top>680</top>
					<height>14</height>
					<width>180</width>
					<orientation>horizontal</orientation>
					<texturesliderbar border="2">controls/scrollbar-slider-horz-nofocus.png</texturesliderbar>
					<texturesliderbarfocus border="2">controls/scrollbar-slider-horz-focus.png</texturesliderbarfocus>
					<textureslidernib>-</textureslidernib>
					<textureslidernibfocus>-</textureslidernibfocus>
					<onup>588</onup>
					<ondown condition="[Container.Content(Movies) | Container.Content(TVShows)] + !IsEmpty(ListItem.Trailer)">PlayMedia($ESCINFO[ListItem.Trailer],noresume)</ondown>
					<ondown condition="[Container.Content(Movies) | Container.Content(TVShows)] + IsEmpty(ListItem.Trailer) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[ListItem.Label] trailer)</ondown>
					<ondown condition="Container.Content(Episodes) + IsEmpty(ListItem.Trailer) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[ListItem.TVShowTitle] $INFO[ListItem.Label] trailer)</ondown>
					<visible>!Skin.HasSetting(EnableQuickJump)</visible> 
				</control>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	<!--//// END 3D WRAP VIEW ////////////////////////////////////////////////////////////////////////////-->
	
	<!--//// START EXTENDED LIST VIEW ///////////////////////////////////////////////////////////////////-->
	<include name="ExtendedListContentVideo">
		<content target="video" sortorder="ascending" sortby="label">$VAR[ExtendedListContentVideoVar]</content>
	</include>
	
	<include name="ExtendedListContentMusicVideo">
		<content target="video" sortorder="ascending" sortby="artist">$VAR[ExtendedListContentMusicVideoVar]</content>
	</include>
	
	<include name="ExtendedListContentMovieSets">
		<content target="video" sortorder="ascending" sortby="year">videodb://movies/sets/$INFO[ListItem.DBID]/</content>
	</include>
	
	<include name="ExtendedListContentMusic">
		<content target="music" sortorder="ascending" sortby="artist">$VAR[ExtendedListContentMusicVar]</content>
	</include>
	
	<variable name="ExtendedListContentVideoVar">
		<value condition="Substring(Container.FolderPath,videodb://movies/genres/)">videodb://movies/genres/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://movies/years/)">videodb://movies/years/$INFO[ListItem.Label]/</value>
		<value condition="Substring(Container.FolderPath,videodb://movies/actors/)">videodb://movies/actors/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://movies/directors/)">videodb://movies/directors/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://movies/studios/)">videodb://movies/studios/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://movies/countries/)">videodb://movies/countries/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://tvshows/genres/)">videodb://tvshows/genres/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://tvshows/years/)">videodb://tvshows/years/$INFO[ListItem.Label]/</value>
		<value condition="Substring(Container.FolderPath,videodb://tvshows/actors/)">videodb://tvshows/actors/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://tvshows/studios/)">videodb://tvshows/studios/$INFO[ListItem.DBID]/</value>
	</variable>
	
	<variable name="ExtendedListContentMusicVideoVar">
		<value condition="Substring(Container.FolderPath,videodb://musicvideos/genres/)">videodb://musicvideos/genres/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://musicvideos/years/)">videodb://musicvideos/years/$INFO[ListItem.Label]/</value>
		<value condition="Substring(Container.FolderPath,videodb://musicvideos/directors/)">videodb://musicvideos/directors/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,videodb://musicvideos/studios/)">videodb://musicvideos/studios/$INFO[ListItem.DBID]/</value>
	</variable>
	
	<variable name="ExtendedListContentMusicVar">
		<value condition="Substring(Container.FolderPath,musicdb://genres/)">musicdb://genres/$INFO[ListItem.DBID]/</value>
		<value condition="Substring(Container.FolderPath,musicdb://years/)">musicdb://years/$INFO[ListItem.Label]/</value>
	</variable>
	
	<variable name="ExtendedListInfoPaneVar">
		<value condition="Substring(Container.FolderPath,videodb://movies/) | Substring(Container.FolderPath,videodb://movies/sets/)">$INFO[Container(584).NumItems,, $LOCALIZE[20342]]</value>
		<value condition="Substring(Container.FolderPath,videodb://tvshows/)">$INFO[Container(584).NumItems,, $LOCALIZE[20343]]</value>
		<value condition="Substring(Container.FolderPath,videodb://musicvideos/)">$INFO[Container(584).NumItems,, $LOCALIZE[20389]]</value>
		<value condition="Substring(Container.FolderPath,musicdb://genres/)">$INFO[Container(584).NumItems,, $LOCALIZE[133]]</value>
		<value condition="Substring(Container.FolderPath,musicdb://years/)">$INFO[Container(584).NumItems,, $LOCALIZE[132]]</value>
	</variable>
	
	<variable name="ExtendedListDescriptionVar">
		<value condition="Substring(Container.FolderPath,musicdb://genres/)">$INFO[Container(584).ListItem.Property(Artist_Description)]</value>
		<value condition="Substring(Container.FolderPath,musicdb://years/)">$INFO[Container(584).ListItem.Property(Album_Description)]</value>
		<value condition="Substring(Container.FolderPath,videodb://musicvideos/)">$INFO[Container(584).ListItem.Plot]</value>
	</variable>
	 
	 <variable name="ExtendedListMovieDuration">
         <value condition="Skin.HasSetting(UseAlternativeDuration) + !IntegerGreaterThan(Container(584).ListItem.Duration,59)">$INFO[Container(584).ListItem.Duration]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,61)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[01]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,62)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[02]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,63)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[03]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,64)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[04]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,65)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[05]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,66)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[06]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,67)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[07]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,68)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[08]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,69)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[09]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,60)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[00]</value>
		 <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,71)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[11]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,72)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[12]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,73)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[13]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,74)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[14]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,75)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[15]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,76)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[16]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,77)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[17]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,78)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[18]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,79)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[19]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,70)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[10]</value>
		 <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,81)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[21]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,82)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[22]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,83)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[23]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,84)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[24]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,85)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[25]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,86)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[26]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,87)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[27]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,88)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[28]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,89)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[29]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,80)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[20]</value>
		 <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,91)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[31]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,92)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[32]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,93)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[33]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,94)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[34]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,95)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[35]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,96)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[36]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,97)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[37]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,98)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[38]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,99)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[39]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,90)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[30]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,101)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[41]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,102)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[42]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,103)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[43]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,104)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[44]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,105)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[45]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,106)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[46]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,107)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[47]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,108)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[48]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,109)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[49]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,100)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[40]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,111)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[51]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,112)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[52]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,113)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[53]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,114)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[54]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,115)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[55]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,116)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[56]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,117)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[57]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,118)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[58]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,119)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[59]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,110)">$NUMBER[1]$LOCALIZE[31403]$NUMBER[50]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,121)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[01]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,122)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[02]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,123)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[03]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,124)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[04]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,125)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[05]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,126)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[06]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,127)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[07]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,128)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[08]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,129)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[09]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,120)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[00]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,131)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[11]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,132)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[12]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,133)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[13]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,134)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[14]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,135)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[15]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,136)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[16]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,137)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[17]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,138)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[18]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,139)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[19]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,130)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[10]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,141)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[21]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,142)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[22]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,143)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[23]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,144)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[24]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,145)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[25]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,146)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[26]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,147)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[27]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,148)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[28]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,149)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[29]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,140)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[20]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,151)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[31]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,152)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[32]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,153)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[33]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,154)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[34]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,155)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[35]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,156)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[36]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,157)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[37]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,158)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[38]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,159)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[39]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,150)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[30]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,161)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[41]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,162)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[42]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,163)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[43]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,164)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[44]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,165)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[45]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,166)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[46]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,167)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[47]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,168)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[48]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,169)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[49]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,160)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[40]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,171)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[51]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,172)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[52]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,173)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[53]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,174)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[54]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,175)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[55]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,176)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[56]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,177)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[57]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,178)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[58]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,179)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[59]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,170)">$NUMBER[2]$LOCALIZE[31403]$NUMBER[50]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,181)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[01]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,182)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[02]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,183)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[03]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,184)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[04]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,185)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[05]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,186)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[06]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,187)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[07]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,188)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[08]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,189)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[09]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,180)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[00]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,191)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[11]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,192)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[12]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,193)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[13]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,194)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[14]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,195)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[15]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,196)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[16]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,197)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[17]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,198)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[18]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,199)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[19]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,190)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[10]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,201)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[21]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,202)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[22]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,203)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[23]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,204)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[24]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,205)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[25]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,206)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[26]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,207)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[27]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,208)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[28]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,209)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[29]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,200)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[20]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,211)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[31]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,212)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[32]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,213)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[33]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,214)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[34]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,215)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[35]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,216)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[36]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,217)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[37]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,218)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[38]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,219)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[39]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,210)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[30]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,221)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[41]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,222)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[42]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,223)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[43]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,224)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[44]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,225)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[45]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,226)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[46]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,227)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[47]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,228)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[48]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,229)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[49]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,220)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[40]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,231)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[51]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,232)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[52]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,233)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[53]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,234)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[54]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,235)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[55]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,236)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[56]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,237)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[57]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,238)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[58]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,239)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[59]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,230)">$NUMBER[3]$LOCALIZE[31403]$NUMBER[50]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,241)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[01]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,242)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[02]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,243)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[03]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,244)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[04]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,245)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[05]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,246)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[06]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,247)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[07]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,248)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[08]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,249)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[09]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,240)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[00]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,251)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[11]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,252)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[12]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,253)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[13]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,254)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[14]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,255)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[15]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,256)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[16]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,257)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[17]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,258)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[18]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,259)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[19]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,250)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[10]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,261)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[21]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,262)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[22]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,263)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[23]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,264)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[24]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,265)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[25]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,266)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[26]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,267)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[27]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,268)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[28]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,269)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[29]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,260)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[20]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,271)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[31]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,272)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[32]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,273)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[33]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,274)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[34]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,275)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[35]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,276)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[36]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,277)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[37]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,278)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[38]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,279)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[39]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,270)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[30]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,281)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[41]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,282)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[42]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,283)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[43]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,284)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[44]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,285)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[45]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,286)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[46]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,287)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[47]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,288)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[48]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,289)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[49]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,280)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[40]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,291)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[51]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,292)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[52]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,293)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[53]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,294)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[54]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,295)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[55]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,296)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[56]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,297)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[57]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,298)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[58]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,299)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[59]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,290)">$NUMBER[4]$LOCALIZE[31403]$NUMBER[50]</value>
		 <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,301)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[01]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,302)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[02]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,303)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[03]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,304)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[04]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,305)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[05]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,306)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[06]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,307)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[07]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,308)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[08]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,309)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[09]</value>
         <value condition="Skin.HasSetting(UseAlternativeDuration) + StringCompare(Container(584).ListItem.Duration,300)">$NUMBER[5]$LOCALIZE[31403]$NUMBER[00]</value>
         <value>$INFO[Container(584).ListItem.Duration]</value>
     </variable>
	
	<include name="ExtendedListView">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">585</defaultcontrol>
			<visible>Control.IsVisible(585)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ViewContentPanel</include>
			
			<control type="group">
				<left>414</left>
				<top>110</top>
				
				<control type="image">
					<description>Content Background</description>
					<width>452</width>
					<height>517</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<description>Media Info Background</description>
					<left>6</left>
					<top>269</top>
					<width>440</width>
					<height>58</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<animation effect="slide" end="0,-41" condition="Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)">Conditional</animation>
					<animation effect="slide" end="0,61" condition="Container.Content(Sets)">Conditional</animation>
				</control>
				
				<control type="image">
					<description>Description Background</description>
					<left>6</left>
					<top>331</top>
					<width>440</width>
					<height>180</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>![Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://) | Container.Content(Sets)]</visible>
				</control>
				
				<control type="image">
					<description>Description Background</description>
					<left>6</left>
					<top>290</top>
					<width>440</width>
					<height>221</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)</visible>
				</control>
				
				<control type="image">
					<description>Description Background</description>
					<left>6</left>
					<top>392</top>
					<width>440</width>
					<height>119</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>Container.Content(Sets)</visible>
				</control>
			</control>
			
			<control type="group">
				<top>116</top>
				
				<control type="image">
					<description>Cover Background Movies / TV Shows</description>
					<left>420</left>
					<width>259</width>
					<height>259</height>
					<texture background="true" border="4">panels/panel3.png</texture>
					<aspectratio>stretch</aspectratio>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>![Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://) | Container.Content(Sets)]</visible>
				</control>
				
				<control type="image">
					<description>Poster Background Movies / TV Shows</description>
					<left>683</left>
					<width>177</width>
					<height>259</height>
					<texture background="true" border="4">panels/panel3.png</texture>
					<aspectratio>stretch</aspectratio>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>![Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://) | Container.Content(Sets)]</visible>
				</control>
				
				<control type="image">
					<description>Cover Background Music / Music Videos</description>
					<left>420</left>
					<width>218</width>
					<height>218</height>
					<texture background="true" border="4">panels/panel3.png</texture>
					<aspectratio>stretch</aspectratio>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)</visible>
				</control>
				
				<control type="image">
					<description>Thumb Background Music / Music Videos</description>
					<left>642</left>
					<width>218</width>
					<height>320</height>
					<texture background="true" border="4">panels/panel3.png</texture>
					<aspectratio>stretch</aspectratio>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>Container.Content(Sets)</visible>
				</control>
				
				<control type="image">
					<description>Set Poster Background Sets</description>
					<left>420</left>
					<width>218</width>
					<height>320</height>
					<texture background="true" border="4">panels/panel3.png</texture>
					<aspectratio>stretch</aspectratio>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>Container.Content(Sets)</visible>
				</control>
				
				<control type="image">
					<description>Poster Background Sets</description>
					<left>642</left>
					<width>218</width>
					<height>218</height>
					<texture background="true" border="4">panels/panel3.png</texture>
					<aspectratio>stretch</aspectratio>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
					<visible>Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<width>259</width>
					<height>259</height>
					<texture background="true" diffuse="covers/list-info-thumb-diffuse.png" fallback="special://skin/extras/moviegenres/default.png">$VAR[MovieGenreIconsAddonVar]</texture>
					<aspectratio scalediffuse="false" align="center">keep</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>1</bordersize>
					<visible>Substring(Container.FolderPath,videodb://movies/genres/) | Substring(Container.FolderPath,videodb://tvshows/genres/)</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<width>218</width>
					<height>218</height>
					<texture background="true" diffuse="covers/list-info-thumb-diffuse.png" fallback="special://skin/extras/musicgenres/default.png">$VAR[MusicGenreIconsAddonVar]</texture>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>1</bordersize>
					<visible>Substring(Container.FolderPath,videodb://musicvideos/genres/) | Substring(Container.FolderPath,musicdb://genres/)</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<width>259</width>
					<height>259</height>
					<texture background="true" diffuse="covers/list-info-thumb-diffuse.png" fallback="studios/default-studio.png">$INFO[ListItem.Label,flagging/countries/,.png]</texture>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>1</bordersize>
					<visible>Container.Content(Countries)</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<width>259</width>
					<height>259</height>
					<texture background="true" diffuse="covers/list-info-thumb-diffuse.png">$INFO[ListItem.Thumb]</texture>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>1</bordersize>
					<visible>!IsEmpty(ListItem.Thumb) + [Substring(Container.FolderPath,videodb://movies/actors/) | Substring(Container.FolderPath,videodb://movies/directors/) | Substring(Container.FolderPath,videodb://tvshows/actors/)]</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<top>-10</top>
					<width>259</width>
					<height>259</height>
					<texture background="true">DefaultActor.png</texture>
					<aspectratio scalediffuse="false" align="center">keep</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>10</bordersize>
					<visible>IsEmpty(ListItem.Thumb) + [Substring(Container.FolderPath,videodb://movies/actors/) | Substring(Container.FolderPath,videodb://movies/directors/) | Substring(Container.FolderPath,videodb://tvshows/actors/)]</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<width>218</width>
					<height>218</height>
					<texture background="true" diffuse="covers/list-info-thumb-diffuse.png">$INFO[ListItem.Thumb]</texture>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>1</bordersize>
					<visible>!IsEmpty(ListItem.Thumb) + Substring(Container.FolderPath,videodb://musicvideos/directors/)</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<width>218</width>
					<height>320</height>
					<texture background="true" diffuse="covers/list-info-poster-diffuse.png">$VAR[PosterThumb]</texture>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>1</bordersize>
					<visible>!IsEmpty(ListItem.Thumb) + Container.Content(Sets)</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<top>-10</top>
					<width>218</width>
					<height>218</height>
					<texture background="true">DefaultActor.png</texture>
					<aspectratio scalediffuse="false" align="center">keep</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>10</bordersize>
					<visible>IsEmpty(ListItem.Thumb) + Substring(Container.FolderPath,videodb://musicvideos/directors/)</visible>
				</control>
				
				<control type="image">
					<description>Title Background</description>
					<left>423</left>
					<top>229</top>
					<width>253</width>
					<height>27</height>
					<texture border="8">views/genre-background.png</texture>
					<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png) + [Substring(Container.FolderPath,videodb://movies/countries/) | Substring(Container.FolderPath,videodb://movies/actors/) | Substring(Container.FolderPath,videodb://movies/directors/) | Substring(Container.FolderPath,videodb://movies/studios/) | Substring(Container.FolderPath,videodb://tvshows/actors/) | Substring(Container.FolderPath,videodb://tvshows/studios/)]</visible>
				</control>
							
				<control type="label">
					<description>Director / Actor / Country / Studio Title</description>
					<left>431</left>
					<top>231</top>
					<width>237</width>
					<align>center</align>
					<font>MediaInfoFont3</font>
					<textcolor>WhiteColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<scroll>true</scroll>
					<animation effect="fade" end="90" condition="true">Conditional</animation>
					<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png) + [Substring(Container.FolderPath,videodb://movies/countries/) | Substring(Container.FolderPath,videodb://movies/actors/) | Substring(Container.FolderPath,videodb://movies/directors/) | Substring(Container.FolderPath,videodb://movies/studios/) | Substring(Container.FolderPath,videodb://tvshows/actors/) | Substring(Container.FolderPath,videodb://tvshows/studios/)]</visible>
				</control>
				
				<control type="image">
					<description>Title Background</description>
					<left>423</left>
					<top>188</top>
					<width>212</width>
					<height>27</height>
					<texture border="8">views/genre-background.png</texture>
					<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png) + [Substring(Container.FolderPath,videodb://musicvideos/directors/) | Substring(Container.FolderPath,videodb://musicvideos/studios/)]</visible>
				</control>
				
				<control type="label">
					<description>Director / Studio Title</description>
					<left>431</left>
					<top>190</top>
					<width>196</width>
					<align>center</align>
					<font>MediaInfoFont3</font>
					<textcolor>WhiteColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<scroll>true</scroll>
					<animation effect="fade" end="90" condition="true">Conditional</animation>
					<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png) + [Substring(Container.FolderPath,videodb://musicvideos/directors/) | Substring(Container.FolderPath,videodb://musicvideos/studios/)]</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<width>259</width>
					<height>249</height>
					<texture background="true" fallback="studios/default-studio.png">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</texture>
					<aspectratio scalediffuse="false" align="center">keep</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>35</bordersize>
					<visible>Substring(Container.FolderPath,videodb://movies/studios/) | Substring(Container.FolderPath,videodb://tvshows/studios/)</visible>
				</control>
				
				<control type="image">
					<left>420</left>
					<width>218</width>
					<height>208</height>
					<texture background="true" fallback="studios/default-studio.png">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</texture>
					<aspectratio scalediffuse="false" align="center">keep</aspectratio>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<bordersize>30</bordersize>
					<visible>Substring(Container.FolderPath,videodb://musicvideos/studios/)</visible>
				</control>
				
				<control type="label">
					<description>Years Title</description>
					<left>420</left>
					<width>259</width>
					<height>259</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>MusicPlayingHomeFont</font>
					<textcolor>GreyColor</textcolor>
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<animation effect="fade" end="75" condition="true">Conditional</animation>
					<animation effect="slide" end="-20,-20" condition="Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)">Conditional</animation>
					<visible>[Substring(Container.FolderPath,videodb://movies/years/) | Substring(Container.FolderPath,videodb://tvshows/years/) | Substring(Container.FolderPath,videodb://musicvideos/years/) | Substring(Container.FolderPath,musicdb://years/)] + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
				</control>
				
				<control type="image">
					<left>683</left>
					<width>177</width>
					<height>259</height>
					<texture background="true" diffuse="covers/list-info-poster-diffuse.png">$INFO[Container(584).ListItem.Art(poster)]</texture>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<bordersize>1</bordersize>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<visible>!IsEmpty(Container(584).ListItem.Art(poster)) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png) + ![Substring(Container.FolderPath,videodb://musicvideos/) | Container.Content(Sets)]</visible>
				</control>
				
				<control type="image">
					<left>642</left>
					<width>218</width>
					<height>320</height>
					<texture background="true" diffuse="covers/list-info-poster-diffuse.png">$INFO[Container(584).ListItem.Art(poster)]</texture>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<bordersize>1</bordersize>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<visible>!IsEmpty(Container(584).ListItem.Art(poster)) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png) + Container.Content(Sets)</visible>
				</control>
				
				<control type="image">
					<left>642</left>
					<width>218</width>
					<height>218</height>
					<texture background="true" diffuse="covers/list-info-thumb-diffuse.png">$INFO[Container(584).ListItem.Icon]</texture>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<bordersize>1</bordersize>
					<fadetime>FanartCrossfadeTime</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<visible>[Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)] + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
				</control>
			</control>

			<control type="group">
				<visible>![[Window.IsActive(Videos) + IsEmpty(Container(584).ListItem.Title)] | [Window.IsActive(MusicLibrary) + IsEmpty(Container(584).ListItem.Artist)]] + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
				<animation effect="slide" end="0,-41" condition="Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)">Conditional</animation>
				<animation effect="slide" end="0,61" condition="Container.Content(Sets)">Conditional</animation>
				
				<control type="group">
					<description>Media Info Area</description>
					<left>418</left>
					<top>386</top>
		
					<control type="grouplist">
						<description>Director / Seasons / Artist / Formed / Born</description>
						<left>10</left>
						<top>0</top>
						<width>430</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20339]:</label>
							<visible>[Substring(Container.FolderPath,videodb://movies/) + !Container.Content(Sets)] | Substring(Container.FolderPath,videodb://musicvideos/) | [Container.Content(Sets) + [!System.HasAddon(script.skin.helper.service) | [System.HasAddon(script.skin.helper.service) + [Control.HasFocus(584) | Control.HasFocus(151)]]]]</visible>
						</control>
						<control type="label">
							<width min="0" max="240">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Container(584).ListItem.Director]</label>
							<visible>[Substring(Container.FolderPath,videodb://movies/) + !Container.Content(Sets)] | Substring(Container.FolderPath,videodb://musicvideos/) | [Container.Content(Sets) + [!System.HasAddon(script.skin.helper.service) | [System.HasAddon(script.skin.helper.service) + [Control.HasFocus(584) | Control.HasFocus(151)]]]]</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20342]:</label>
							<visible>Container.Content(Sets) + System.HasAddon(script.skin.helper.service) + ![Control.HasFocus(584) | Control.HasFocus(151)]</visible>
						</control>
						<control type="label">
							<width min="0" max="240">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Window(home).Property(SkinHelper.MovieSet.Count)]</label>
							<visible>Container.Content(Sets) + System.HasAddon(script.skin.helper.service) + ![Control.HasFocus(584) | Control.HasFocus(151)]</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[33054]:</label>
							<visible>Substring(Container.FolderPath,videodb://tvshows/)</visible>
						</control>
						<control type="label">
							<width min="0" max="240">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Container(584).ListItem.Property(TotalSeasons)]</label>
							<visible>Substring(Container.FolderPath,videodb://tvshows/)</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[557]:</label>
							<visible>Substring(Container.FolderPath,musicdb://years/)</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Container(584).ListItem.Artist]</label>
							<visible>Substring(Container.FolderPath,musicdb://years/)</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[21893]:</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + !IsEmpty(Container(584).ListItem.Property(Artist_Born))</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[21894]:</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + !IsEmpty(Container(584).ListItem.Property(Artist_Formed))</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$INFO[Container(584).ListItem.Property(Artist_Born)]</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + !IsEmpty(Container(584).ListItem.Property(Artist_Born))</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$INFO[Container(584).ListItem.Property(Artist_Formed)]</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + !IsEmpty(Container(584).ListItem.Property(Artist_Formed))</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[21893]/$LOCALIZE[21894]: [COLOR=MediaInfoItemColor2]$LOCALIZE[31001][/COLOR]</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + IsEmpty(Container(584).ListItem.Property(Artist_Born)) + IsEmpty(Container(584).ListItem.Property(Artist_Formed))</visible>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Runtime / Episodes / Genre / Years Active</description>
						<left>10</left>
						<top>22</top>
						<width>430</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[2050]:</label>
							<visible>Substring(Container.FolderPath,videodb://movies/) | Substring(Container.FolderPath,videodb://musicvideos/)</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$VAR[ExtendedListMovieDuration]</label>
							<visible>[Substring(Container.FolderPath,videodb://movies/) + !Container.Content(Sets)] | Substring(Container.FolderPath,videodb://musicvideos/) | [Container.Content(Sets) + [!System.HasAddon(script.skin.helper.service) | [System.HasAddon(script.skin.helper.service) + [Control.HasFocus(584) | Control.HasFocus(151)]]]]</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$VAR[MovieDuration]</label>
							<visible>Container.Content(Sets) + System.HasAddon(script.skin.helper.service) + ![Control.HasFocus(584) | Control.HasFocus(151)]</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20360]:</label>
							<visible>Substring(Container.FolderPath,videodb://tvshows/)</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Container(584).ListItem.Property(TotalEpisodes)]</label>
							<visible>Substring(Container.FolderPath,videodb://tvshows/)</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[515]:</label>
							<visible>Substring(Container.FolderPath,musicdb://years/)</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Container(584).ListItem.Genre]</label>
							<visible>Substring(Container.FolderPath,musicdb://years/)</visible>
						</control>
						<control type="label">
							<width min="0" max="180">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[21898]:</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + !IsEmpty(Container(584).ListItem.Property(Artist_YearsActive))</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$INFO[Container(584).ListItem.Property(Artist_YearsActive)]</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + !IsEmpty(Container(584).ListItem.Property(Artist_YearsActive))</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[21897]:</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + IsEmpty(Container(584).ListItem.Property(Artist_YearsActive)) + !IsEmpty(Container(584).ListItem.Property(Artist_Died))</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$INFO[Container(584).ListItem.Property(Artist_Died)]</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + IsEmpty(Container(584).ListItem.Property(Artist_YearsActive)) + !IsEmpty(Container(584).ListItem.Property(Artist_Died))</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[21896]:</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + IsEmpty(Container(584).ListItem.Property(Artist_YearsActive)) + !IsEmpty(Container(584).ListItem.Property(Artist_Disbanded))</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$INFO[Container(584).ListItem.Property(Artist_Disbanded)]</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + IsEmpty(Container(584).ListItem.Property(Artist_YearsActive)) + !IsEmpty(Container(584).ListItem.Property(Artist_Disbanded))</visible>
						</control>
						<control type="label">
							<width min="0" max="320">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[21897]/$LOCALIZE[21896]: [COLOR=MediaInfoItemColor2]$LOCALIZE[31001][/COLOR]</label>
							<visible>Substring(Container.FolderPath,musicdb://genres/) + IsEmpty(Container(584).ListItem.Property(Artist_YearsActive)) + IsEmpty(Container(584).ListItem.Property(Artist_Died)) + IsEmpty(Container(584).ListItem.Property(Artist_Disbanded))</visible>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Year</description>
						<visible>!Substring(Container.FolderPath,musicdb://)</visible>
						<left>64</left>
						<top>0</top>
						<width>370</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[345]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Container(584).ListItem.Year]</label>
							<visible>![Container.Content(Sets) + System.HasAddon(script.skin.helper.service) + ![Control.HasFocus(584) | Control.HasFocus(151)]]</visible>
						</control>
						<control type="label">
							<width min="0" max="260">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Window(home).Property(SkinHelper.MovieSet.Years)]</label>
							<visible>Container.Content(Sets) + System.HasAddon(script.skin.helper.service) + ![Control.HasFocus(584) | Control.HasFocus(151)]</visible>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Rating / Studio</description>
						<visible>!Substring(Container.FolderPath,musicdb://)</visible>
						<left>84</left>
						<top>22</top>
						<width>350</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[563]:</label>
							<visible>![IsEmpty(Container(584).ListItem.Rating) + Substring(Container.FolderPath,videodb://musicvideos/) + !Substring(Container.FolderPath,videodb://musicvideos/studios/)]</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Container(584).ListItem.Rating]</label>
							<visible>![IsEmpty(Container(584).ListItem.Rating) + Substring(Container.FolderPath,videodb://musicvideos/) + !Substring(Container.FolderPath,videodb://musicvideos/studios/)]</visible>
							<visible>![Container.Content(Sets) + ![Control.HasFocus(584) | Control.HasFocus(151)] + System.HasAddon(script.skin.helper.service)]</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Rating]</label>
							<visible>Container.Content(Sets) + ![Control.HasFocus(584) | Control.HasFocus(151)] + System.HasAddon(script.skin.helper.service)</visible>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[572]:</label>
							<visible>IsEmpty(Container(584).ListItem.Rating) + Substring(Container.FolderPath,videodb://musicvideos/) + !Substring(Container.FolderPath,videodb://musicvideos/studios/)</visible>
						</control>
						<control type="label">
							<width min="0" max="240">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[Container(584).ListItem.Studio]</label>
							<visible>IsEmpty(Container(584).ListItem.Rating) + Substring(Container.FolderPath,videodb://musicvideos/) + !Substring(Container.FolderPath,videodb://musicvideos/studios/)</visible>
						</control>
					</control>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>428</left>
					<top>449</top>
					<width>424</width>
					<height>163</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[Container(584).ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>![Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://) | Container.Content(Sets)]</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>428</left>
					<top>446</top>
					<width>424</width>
					<height>212</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$VAR[ExtendedListDescriptionVar]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>428</left>
					<top>442</top>
					<width>424</width>
					<height>117</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[Container(584).ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>Container.Content(Sets) + [!System.HasAddon(script.skin.helper.service) | [System.HasAddon(script.skin.helper.service) + [Control.HasFocus(584) | Control.HasFocus(151)]]]</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>428</left>
					<top>442</top>
					<width>424</width>
					<height>117</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[Window(home).Property(SkinHelper.MovieSet.Plot)]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>Container.Content(Sets) + ![Control.HasFocus(584) | Control.HasFocus(151)] + System.HasAddon(script.skin.helper.service)</visible>
					<include>ControlsOpenCloseAnim</include>
				</control>
			</control>
			
			<control type="list" id="585">	
				<viewtype label="31122">Extended List</viewtype>
				<left>53</left>
				<top>110</top>
				<width>354</width>
				<height>518</height>
				<pagecontrol>150</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">300</scrolltime>
				<onup>585</onup>
				<ondown>585</ondown>
				<onleft condition="IntegerGreaterThan(Container(585).NumPages,1)">152</onleft>
				<onleft condition="!IntegerGreaterThan(Container(585).NumPages,1)">850</onleft>
				<onright>584</onright>
				<oninfo condition="System.HasAddon(script.extendedinfo) + [Container.Content(Actors) | Container.Content(Directors)]">RunScript(script.extendedinfo,info=extendedactorinfo,name=$INFO[ListItem.Label])</oninfo>
				<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">ActivateWindow(3008)</oninfo>
				<itemlayout height="37">
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>37</height>	
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Icon</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>![Container.Content(Sets) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="image">
						<description>Icon</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">DefaultSets.png.png</texture>
						<aspectratio>stretch</aspectratio>
						<include>ListViewOverlayFadeAnim</include>
						<visible>Container.Content(Sets) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>35</left>
						<width>314</width>
						<height>37</height>
						<font>ListFont</font>
						<textcolor>ListColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<aligny>center</aligny>				
						<info>ListItem.Label</info>
					</control>
				</itemlayout>		
				<focusedlayout height="37">	
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>37</height>	
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>36</height>	
						<texture border="4">views/list-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>Control.HasFocus(585)</visible>
						<include>ListViewSelectFadeAnim</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewScrollAnim</include>
					</control>
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>36</height>	
						<texture border="4">views/list-alt-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Control.HasFocus(585)</visible>
						<include>ListViewSelectFadeAnim2</include>
					</control>
					<control type="group">
						<include>ListViewFocusAnim</include>
						<control type="image">
							<description>Icon</description>
							<left>5</left>
							<top>6</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>![Container.Content(Sets) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)]</visible>
						</control>
						<control type="image">
							<description>Icon</description>
							<left>5</left>
							<top>6</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">DefaultSets.png.png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>Container.Content(Sets) + !SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
						</control>
						<control type="label">
							<description>Label</description>
							<left>35</left>
							<width>314</width>
							<height>37</height>
							<font>ListFont</font>
							<textcolor>SelectedColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<aligny>center</aligny>
							<info>ListItem.Label</info>
							<scroll>true</scroll>
						</control>
					</control>
				</focusedlayout>		
			</control>
		
			<control type="group" id="152">
				<control type="image">
					<left>34</left>
					<top>110</top>
					<width>12</width>
					<height>517</height>
					<texture border="4">controls/scrollbar-background.png</texture>
				</control>
				
				<control type="group">
					<animation effect="fade" start="100" end="0" time="150" condition="Skin.HasSetting(HideExtendedListViewScrollbar) + !ControlGroup(152).HasFocus">Conditional</animation>
					
					<control type="panel" id="970">
						<onleft>850</onleft>
						<onup>850</onup>
						<onright>585</onright>
						<include name="QuickJumpVerticalLayout">
							<param name="left" value="34" />
							<param name="top" value="113" />
							<param name="height" value="514" />
							<param name="itemheight" value="19" />
						</include>
					</control>
			
					<control type="scrollbar" id="150">
						<left>34</left>
						<top>110</top>
						<width>12</width>
						<height>517</height>
						<texturesliderbackground>-</texturesliderbackground>
						<onup>850</onup>
						<onleft>850</onleft>
						<onright>585</onright>
						<visible>!Skin.HasSetting(EnableQuickJump)</visible>
					</control>
				</control>
			</control>
			
			<control type="list" id="584">
				<left>873</left>
				<top>110</top>
				<width>354</width>
				<height>518</height>
				<pagecontrol>151</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">300</scrolltime>
				<onup>584</onup>
				<ondown>584</ondown>
				<onleft>585</onleft>
				<onright condition="!Control.IsVisible(151) + !IsEmpty(Container(584).ListItem.Trailer)">PlayMedia($ESCINFO[Container(584).ListItem.Trailer],noresume)</onright>
				<onright condition="!Control.IsVisible(151) + IsEmpty(Container(584).ListItem.Trailer) + ![Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)] + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[Container(584).ListItem.Label] trailer)</onright>
				<onright condition="!Control.IsVisible(151) + IsEmpty(Container(584).ListItem.Trailer) + Substring(Container.FolderPath,videodb://musicvideos/) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[Container(584).ListItem.Artist] $INFO[Container(584).ListItem.Label] trailer)</onright>
				<onright condition="!Control.IsVisible(151) + IsEmpty(Container(584).ListItem.Trailer) + Substring(Container.FolderPath,musicdb://) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[Container(584).ListItem.Label] music video)</onright>
				<onright condition="Control.IsVisible(151)">151</onright>
				<oninfo condition="System.HasAddon(script.extendedinfo) + SubString(Container.FolderPath,videodb://movies/)">RunScript(script.extendedinfo,info=extendedinfo,dbid=$INFO[Container(584).ListItem.DBID],id=$INFO[ListItem.Property(id)])</oninfo>
				<oninfo condition="System.HasAddon(script.extendedinfo) + SubString(Container.FolderPath,videodb://tvshows/)">RunScript(script.extendedinfo,info=extendedtvinfo,dbid=$INFO[Container(584).ListItem.DBID],id=$INFO[ListItem.Property(id)])</oninfo>
				<oninfo condition="System.HasAddon(script.extendedinfo) + [SubString(Container.FolderPath,musicdb://) | SubString(Container.FolderPath,videodb://musicvideos/)]">RunScript(script.extendedinfo,info=extendedactorinfo,name=$INFO[Container(584).ListItem.Artist])</oninfo>
				<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
				<itemlayout height="37">
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>37</height>	
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Icon</description>
						<left>5</left>
						<top>6</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>IsEmpty(ListItem.Title) | Substring(Container.FolderPath,musicdb://)</visible>
						<include>ListViewOverlayFadeAnim</include>
					</control>
					<control type="label">
						<description>Label</description>
						<left>35</left>
						<width>314</width>
						<height>37</height>
						<font>ListFont</font>
						<textcolor>ListColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<aligny>center</aligny>				
						<label>$INFO[ListItem.Artist,, - ]$INFO[ListItem.Label]</label>
						<visible>Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://years/)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>35</left>
						<width>314</width>
						<height>37</height>
						<font>ListFont</font>
						<textcolor>ListColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<aligny>center</aligny>				
						<label>$INFO[ListItem.Label]</label>
						<visible>![Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://years/)]</visible>
					</control>
					<control type="group">
						<visible>!IsEmpty(ListItem.Title) + [Substring(Container.FolderPath,videodb://movies/) | Substring(Container.FolderPath,videodb://musicvideos/)]</visible>
						<control type="image">
							<description>Quality</description>
							<left>5</left>
							<top>6</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
							<include>ListViewOverlayFadeAnim</include>
						</control>	
						<control type="image">
							<description>Quality</description>
							<left>5</left>
							<top>6</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
							<aspectratio>keep</aspectratio>
							<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
							<include>ListViewOverlayFadeAnim</include>
						</control>
						<control type="image">
							<description>Watched Partial</description>
							<left>5</left>
							<top>6</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$VAR[WatchedPartial]</texture>
							<aspectratio>keep</aspectratio>
							<visible>ListItem.IsResumable</visible>
							<include>ListViewPartialWatchedOverlayFadeAnim</include>
							<include>ListViewWatchedOverlayFadeAnim</include>
						</control>
					</control>
					<control type="group">
						<visible>!IsEmpty(ListItem.Title) + Substring(Container.FolderPath,videodb://tvshows/)</visible>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>3</left>
							<width>26</width>
							<height>37</height>
							<font>ListFont3</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>3</left>
							<width>26</width>
							<height>37</height>
							<font>ListFont4</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
						</control>
						<control type="image">
							<description>Unwatched Overlay</description>
							<left>3</left>
							<width>26</width>
							<height>37</height>
							<aligny>center</aligny>
							<texture background="true">OverlayClean.png</texture>
							<aspectratio>keep</aspectratio>
							<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
						</control>
						<control type="image">
							<description>Watched Overlay</description>
							<left>3</left>
							<width>26</width>
							<height>37</height>
							<aligny>center</aligny>
							<texture background="true">$INFO[ListItem.Overlay]</texture>
							<aspectratio>keep</aspectratio>
							<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>		
				<focusedlayout height="37">	
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>37</height>	
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>36</height>	
						<texture border="4">views/list-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>Control.HasFocus(584)</visible>
						<include>ListViewSelectFadeAnim</include>
						<animation type="Focus" condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)] + Container(584).OnNext" reversible="false">
							<effect type="Fade" start="40" end="100" time="500" tween="back" easing="in"/>
							<effect type="slide" start="0,-37" time="200" tween="sine" easing="out"/>
						</animation>
						<animation type="Focus" condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)] + Container(584).OnPrevious" reversible="false">
							<effect type="Fade" start="40" end="100" time="500" tween="back" easing="in"/>
							<effect type="slide" start="0,37" time="200" tween="sine" easing="out"/>
						</animation>
					</control>
					<control type="image">
						<left>0</left>
						<width>354</width>
						<height>36</height>	
						<texture border="4">views/list-alt-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Control.HasFocus(584)</visible>
						<include>ListViewSelectFadeAnim2</include>
					</control>
					<control type="group">
						<include>ListViewFocusAnim</include>
						<control type="image">
							<description>Icon</description>
							<left>5</left>
							<top>6</top>
							<width>24</width>
							<height>24</height>
							<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>IsEmpty(ListItem.Title) | Substring(Container.FolderPath,musicdb://)</visible>
						</control>
						<control type="label">
							<description>Label</description>
							<left>35</left>
							<width>314</width>
							<height>37</height>
							<font>ListFont</font>
							<textcolor>SelectedColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Artist,, - ]$INFO[ListItem.Label]</label>
							<scroll>true</scroll>
							<visible>Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://years/)</visible>
						</control>
						<control type="label">
							<description>Label</description>
							<left>35</left>
							<width>314</width>
							<height>37</height>
							<font>ListFont</font>
							<textcolor>SelectedColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Label]</label>
							<scroll>true</scroll>
							<visible>![Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://years/)]</visible>
						</control>
						<control type="group">
							<visible>!IsEmpty(ListItem.Title) + [Substring(Container.FolderPath,videodb://movies/) | Substring(Container.FolderPath,videodb://musicvideos/)]</visible>
							<control type="image">
								<description>Quality</description>
								<left>5</left>
								<top>6</top>
								<width>24</width>
								<height>24</height>
								<texture background="true">$VAR[VideoQualityOverlayUnwatched]</texture>
								<aspectratio>keep</aspectratio>
								<visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
							</control>	
							<control type="image">
								<description>Quality</description>
								<left>5</left>
								<top>6</top>
								<width>24</width>
								<height>24</height>
								<texture background="true">$VAR[VideoQualityOverlayWatched]</texture>
								<aspectratio>keep</aspectratio>
								<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
							</control>
							<control type="image">
								<description>Watched Partial</description>
								<left>5</left>
								<top>6</top>
								<width>24</width>
								<height>24</height>
								<texture background="true">$VAR[WatchedPartial]</texture>
								<aspectratio>keep</aspectratio>
								<visible>ListItem.IsResumable</visible>
								<include>ListViewPartialWatchedOverlayFadeAnim</include>
								<include>ListViewWatchedOverlayFadeAnim</include>
							</control>
						</control>
						<control type="group">
							<visible>!IsEmpty(ListItem.Title) + Substring(Container.FolderPath,videodb://tvshows/)</visible>
							<control type="label">
								<description>Unwatched Episodes</description>
								<left>3</left>
								<width>26</width>
								<height>37</height>
								<font>ListFont3</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="label">
								<description>Unwatched Episodes</description>
								<left>3</left>
								<width>26</width>
								<height>37</height>
								<font>ListFont4</font>
								<textcolor>white</textcolor>
								<align>center</align>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
								<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
							</control>
							<control type="image">
								<description>Unwatched Overlay</description>
								<left>3</left>
								<width>26</width>
								<height>37</height>
								<aligny>center</aligny>
								<texture background="true">OverlayClean.png</texture>
								<aspectratio>keep</aspectratio>
								<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
							</control>
							<control type="image">
								<description>Watched Overlay</description>
								<left>3</left>
								<width>26</width>
								<height>37</height>
								<aligny>center</aligny>
								<texture background="true">$INFO[ListItem.Overlay]</texture>
								<aspectratio>keep</aspectratio>
								<visible>StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
							</control>
						</control>
					</control>
				</focusedlayout>
				<include condition="[SubString(Container.FolderPath,videodb://movies/) + !SubString(Container.FolderPath,videodb://movies/sets/)] | SubString(Container.FolderPath,videodb://tvshows/)">ExtendedListContentVideo</include>
				<include condition="SubString(Container.FolderPath,videodb://musicvideos/)">ExtendedListContentMusicVideo</include>
				<include condition="SubString(Container.FolderPath,videodb://movies/sets/)">ExtendedListContentMovieSets</include>
				<include condition="Window.IsActive(MusicLibrary)">ExtendedListContentMusic</include>
			</control>
			
			<control type="image">
				<left>1234</left>
				<top>110</top>
				<width>12</width>
				<height>517</height>
				<texture border="4">controls/scrollbar-background.png</texture>
			</control>
			
			<control type="scrollbar" id="151">
				<left>1234</left>
				<top>110</top>
				<width>12</width>
				<height>517</height>
				<texturesliderbackground>-</texturesliderbackground>
				<animation effect="fade" start="100" end="0" time="150" condition="Skin.HasSetting(HideExtendedListViewScrollbar2) + !Control.HasFocus(151)">Conditional</animation>
				<onup>850</onup>
				<onleft>584</onleft>
				<onright condition="!IsEmpty(Container(584).ListItem.Trailer)">PlayMedia($ESCINFO[Container(584).ListItem.Trailer],noresume)</onright>
				<onright condition="IsEmpty(Container(584).ListItem.Trailer) + ![Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)] + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[Container(584).ListItem.Label] trailer)</onright>
				<onright condition="IsEmpty(Container(584).ListItem.Trailer) + Substring(Container.FolderPath,videodb://musicvideos/) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[Container(584).ListItem.Artist] $INFO[Container(584).ListItem.Label])</onright>
				<onright condition="IsEmpty(Container(584).ListItem.Trailer) + Substring(Container.FolderPath,musicdb://) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[Container(584).ListItem.Label] music video)</onright>
				<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
			</control>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>	
				<!--<include>InfoPaneImage</include>-->
				<control type="image">
					<left>582</left>
					<top>-4</top>
					<width>116</width>
					<height>45</height>
					<texture background="true">$INFO[Container(584).ListItem.Art(clearlogo)]</texture>
					<aspectratio>keep</aspectratio>
					<fadetime>400</fadetime>
					<include>NotificationsOpenCloseAnim</include>
					<animation effect="fade" end="90" condition="true">Conditional</animation>
					<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png) + !IsEmpty(Container(584).ListItem.Art(clearlogo)) + [[Substring(Container.FolderPath,videodb://movies/) + !Skin.HasSetting(DisableMoviesClearLogo)] | [Substring(Container.FolderPath,videodb://tvshows/) + !Skin.HasSetting(DisableTVShowsLogo)]]</visible>
				</control>
				<control type="image">
					<left>582</left>
					<top>-4</top>
					<width>116</width>
					<height>45</height>
					<texture fallback="empty.png" background="true">$INFO[Skin.String(MusicLibraryClearLogosPath)]$INFO[Container(584).ListItem.Artist,,/logo.png]</texture>
					<aspectratio>keep</aspectratio>
					<fadetime>400</fadetime>
					<animation effect="fade" end="90" condition="true">Conditional</animation>
					<visible>!IsEmpty(Skin.String(MusicLibraryClearLogosPath)) + [[Substring(Container.FolderPath,videodb://musicvideos/) | Substring(Container.FolderPath,musicdb://)] + !Skin.HasSetting(EnableMusicLibraryClearLogos)]</visible>
				</control>
				<control type="label">
					<include>InfoPaneHeadLabel</include>
					<label>[B]$INFO[Container.NumItems,, $LOCALIZE[31202]][/B]</label>
				</control>
				<control type="label">
					<left>750</left>
					<width>500</width>
					<align>right</align>
					<include>InfoPaneHeadLabel</include>
					<label>[B]$VAR[ExtendedListInfoPaneVar][/B]</label>
					<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
				</control>
				<include>BottomPaneOpenCloseAnim</include>
			</control>	

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	<!--//// END EXTENDED LIST VIEW /////////////////////////////////////////////////////////////////////-->
	
	<!--//// START FANART VIEW ///////////////////////////////////////////////////////////////////-->
	<variable name="Container583Label1">
		<value condition="ListItem.IsCollection + !System.HasAddon(script.skin.helper.service)">$LOCALIZE[20457]</value>
		<value condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">$INFO[Window(home).Property(SkinHelper.MovieSet.Genre)]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	
	<variable name="Container583Label2">
		<value condition="ListItem.IsCollection + !System.HasAddon(script.skin.helper.service)">$INFO[ListItem.Rating]</value>
		<value condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">$INFO[Window(home).Property(SkinHelper.MovieSet.Count),, $LOCALIZE[36901]]$INFO[Window(home).Property(SkinHelper.MovieSet.Years),  &#x2022;  ,]$VAR[MovieDuration,  &#x2022;  ,]$INFO[ListItem.Rating,  &#x2022;  ,]</value>
		<value>$INFO[ListItem.Year]$VAR[MovieDuration,  &#x2022;  ,]$INFO[ListItem.Rating,  &#x2022;  ,]$INFO[ListItem.Votes, (, $LOCALIZE[20350])]$INFO[ListItem.Season,  &#x2022;  , $LOCALIZE[36905]]$INFO[ListItem.Episode,  &#x2022;  , $LOCALIZE[36907]]</value>
	</variable>
	
	<include name="FanartViewMediaFlags1">
		<left>765</left>
	</include>
	
	<include name="FanartViewMediaFlags2">
		<left>690</left>
		<align>right</align>
	</include>
	
	<include name="FanartView">	
		<control type="group" id="500">	
	        <defaultcontrol always="true">583</defaultcontrol>
			<visible>Control.IsVisible(583)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="group">
				<top>BottomPaneOffsetY</top>	
				<include>InfoPaneImage</include>
			</control>
			
			<control type="image">
				<description>Background Glow</description>
				<left>-50</left>
				<top>500</top>
				<width>1380</width>
				<height>345</height>
				<texture>gui/background-glow.png</texture>
				<animation effect="fade" end="22" condition="true">Conditional</animation>
			</control>
			
			<control type="panel" id="583">	
				<viewtype label="20445">Fanart</viewtype>
				<left>741</left>
				<top>430</top>
				<width>560</width>
				<height>500</height>
				<pagecontrol>930</pagecontrol>
				<onup>850</onup>
				<ondown>150</ondown>
				<onleft>583</onleft>
				<onright>583</onright>
				<scrolltime tween="sine" easing="inout">400</scrolltime>
                <focusposition>0</focusposition>
				<orientation>horizontal</orientation>
				<animation effect="fade" start="100" end="60" time="300" condition="!Control.HasFocus(583)">Conditional</animation>
				<oninfo condition="ListItem.IsCollection + System.HasAddon(script.skin.helper.service)">ActivateWindow(3008)</oninfo>
				<itemlayout width="560" height="400">			
					<control type="group">
						<visible>!IsEmpty(ListItem.Title) + [[!Skin.HasSetting(HideMoviesFanartMediaInfo) + [Container.Content(Movies) | Container.Content(Sets)]] | [!Skin.HasSetting(HideTVShowsFanartMediaInfo) + Container.Content(TVShows)]]</visible>
						<left>24</left>
						<control type="label">
							<font>FullMediaInfoTitleFont3</font>
							<textcolor>SelectedColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<info>ListItem.Title</info>
							<width>482</width>
							<scroll>false</scroll>
						</control>
					</control>			
				</itemlayout>		
				<focusedlayout width="560" height="400">
					<control type="group">
						<visible>!IsEmpty(ListItem.Title) + [[!Skin.HasSetting(HideMoviesFanartMediaInfo) + [Container.Content(Movies) | Container.Content(Sets)]] | [!Skin.HasSetting(HideTVShowsFanartMediaInfo) + Container.Content(TVShows)]]</visible>
						<left>24</left>
						<control type="label">
							<font>FullMediaInfoTitleFont3</font>
							<textcolor>SelectedColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<info>ListItem.Title</info>
							<width>482</width>
							<scroll>true</scroll>
						</control>
					</control>
				</focusedlayout>		
			</control>
			
			<control type="group">
				<visible>!IsEmpty(ListItem.Title) + [[!Skin.HasSetting(HideMoviesFanartMediaInfo) + [Container.Content(Movies) | Container.Content(Sets)]] | [!Skin.HasSetting(HideTVShowsFanartMediaInfo) + Container.Content(TVShows)]]</visible>
				<animation effect="fade" start="100" end="60" time="300" condition="!Control.HasFocus(583)">Conditional</animation>
				<include>BackgroundVisibleAnim</include>
				<top>488</top>
				<left>765</left>
				<control type="image">
					<left>-60</left>
					<top>-13</top>
					<width>700</width>
					<height>39</height>
					<colordiffuse>c1ffffff</colordiffuse>
					<texture border="0,6,0,0">gui/bottom-info-background.png</texture>
					<visible>Container.Content(Movies) | Container.Content(Sets) | [Container.Content(TVShows) + Skin.HasSetting(EnableNextAiredInfo)]</visible>
				</control>
				<control type="image">
					<left>-60</left>
					<top>26</top>
					<width>700</width>
					<height>39</height>
					<colordiffuse>c1ffffff</colordiffuse>
					<texture border="0,0,0,6" flipy="true">gui/bottom-info-background.png</texture>
					<visible>Container.Content(Movies) | Container.Content(Sets) | [Container.Content(TVShows) + Skin.HasSetting(EnableNextAiredInfo)]</visible>
				</control>
				<control type="image">
					<left>-60</left>
					<top>-13</top>
					<width>700</width>
					<height>71</height>
					<colordiffuse>c1ffffff</colordiffuse>
					<texture border="0,6,0,0">gui/bottom-info-background.png</texture>
					<visible>Container.Content(TVShows) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
				</control>
				<control type="image">
					<left>-60</left>
					<top>58</top>
					<width>700</width>
					<height>71</height>
					<colordiffuse>c1ffffff</colordiffuse>
					<texture border="0,0,0,6" flipy="true">gui/bottom-info-background.png</texture>
					<visible>Container.Content(TVShows) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
				</control>
				<control type="label">
					<font>FullMediaInfoFont</font>
					<textcolor>GreyColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[Container583Label1]</label>
					<width>482</width>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<top>26</top>
					<font>FullMediaInfoDescFont</font>
					<textcolor>GreyColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[Container583Label2]</label>
					<width>482</width>
					<scroll>true</scroll>
				</control>
				<control type="group">
					<visible>Container.Content(TVShows) + !Skin.HasSetting(EnableNextAiredInfo) + System.HasAddon(script.tv.show.next.aired)</visible>
					<control type="label">
						<top>66</top>
						<font>FullMediaInfoDescFont</font>
						<textcolor>GreyColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31993]: $INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
						<width>482</width>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<top>92</top>
						<font>FullMediaInfoDescFont</font>
						<textcolor>GreyColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[209]: $INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
						<width>482</width>
						<scroll>true</scroll>
						<visible>!IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					</control>
				</control>
			</control>
			
			<control type="group">
				<depth>DepthContent+</depth>
				<left>528</left>
				<top>366</top>
				<animation effect="zoom" start="100" end="70" center="640,666" time="400" tween="back" easing="inout" condition="!Control.HasFocus(583)">Conditional</animation>
				
				<control type="image">
					<description>Cover Icon</description>
					<left>10</left>
					<top>10</top>
					<width>204</width>
					<height>300</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<include>BackgroundVisibleAnim</include>
					<visible>IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="group">
					<visible>!IsEmpty(ListItem.Thumb)</visible>
					<include>BackgroundVisibleAnim</include>
					<control type="image">
						<width>224</width>
						<height>320</height>
						<texture background="true" diffuse="covers/3dwrap-poster-diffuse.png">$VAR[PosterThumb]</texture>
						<bordertexture border="4">covers/3dwrap-poster-shadow.png</bordertexture>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<bordersize>10</bordersize>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<description>Cover Overlay</description>
						<left>10</left>
						<top>10</top>
						<width>204</width>
						<height>300</height>
						<texture background="true">covers/3dwrap-poster-mask.png</texture>
					</control>
					<control type="image">
						<left>10</left>
						<top>312</top>
						<width>204</width>
						<height>300</height>
						<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">$VAR[PosterThumb]</texture>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<fadetime>400</fadetime>
					</control>
					<control type="image">
						<description>Cover Reflection Overlay</description>
						<left>10</left>
						<top>312</top>
						<width>204</width>
						<height>300</height>
						<texture background="true" flipy="true" diffuse="covers/3dwrap-poster-reflection.png">covers/3dwrap-poster-mask.png</texture>
						<aspectratio scalediffuse="false">stretch</aspectratio>
					</control>
				</control>
				<control type="image">
					<left>169</left>
					<top>265</top>
					<width>35</width>
					<height>35</height>
					<texture>$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<include>BackgroundVisibleAnim</include>
					<visible>!IsEmpty(ListItem.Overlay) + !ListItem.IsResumable + [[[Container.Content(Movies) | Container.Content(Sets)] + !Skin.HasSetting(HideMoviesFanartOverlay)] | [Container.Content(TVShows) + !Skin.HasSetting(HideTVShowsFanartOverlay)]]</visible>
				</control>
				<control type="image">
					<description>Watched Partial</description>
					<left>169</left>
					<top>265</top>
					<width>35</width>
					<height>35</height>
					<texture background="true">$VAR[WatchedPartial]</texture>
					<aspectratio>keep</aspectratio>
					<include>BackgroundVisibleAnim</include>
					<visible>[Container.Content(Movies) | Container.Content(Sets)] + ListItem.IsResumable + !Skin.HasSetting(HideMoviesFanartOverlay)</visible>
				</control>				
				<control type="group">
					<visible>!StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes)) + Container.Content(TVShows) + !Skin.HasSetting(HideTVShowsFanartOverlay)</visible>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>169</left>
						<top>265</top>
						<width>35</width>
						<height>35</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>169</left>
						<top>265</top>
						<width>35</width>
						<height>35</height>
						<font>WideListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>169</left>
						<top>265</top>
						<width>35</width>
						<height>35</height>
						<font>ListFont5</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
					</control>
				</control>
			</control>
			
			<control type="group" id="150">
				<depth>DepthContent+</depth>
				<animation type="Conditional" condition="ControlGroup(150).HasFocus" reversible="false">
					<effect type="fade" start="0" end="100" time="200"/>
					<effect type="zoom" start="70" end="100" center="640,699" time="400" tween="back" easing="inout"/>
				</animation>
				
				<animation type="Conditional" condition="!ControlGroup(150).HasFocus" reversible="false">
					<effect type="fade" start="100" end="0" time="200" delay="200"/>
					<effect type="zoom" start="100" end="70" center="640,699" time="400" tween="back" easing="inout"/>
				</animation>
				
				<control type="image">
					<left>538</left>
					<top>692</top>
					<width>204</width>
					<height>14</height>
					<texture border="4">controls/scrollbar-background.png</texture>
				</control>
				
				<control type="panel" id="980">
					<ondown condition="!IsEmpty(ListItem.Trailer)">PlayMedia($ESCINFO[ListItem.Trailer],noresume)</ondown>
					<ondown condition="IsEmpty(ListItem.Trailer) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[ListItem.Label] trailer)</ondown>
					<include name="QuickJumpHorizontalLayout">
						<param name="left" value="540" />
						<param name="top" value="690" />
						<param name="width" value="204" />
						<param name="itemwidth" value="18" />
					</include>
				</control>
				
				<control type="scrollbar" id="150">
					<left>538</left>
					<top>692</top>
					<height>14</height>
					<width>204</width>
					<orientation>horizontal</orientation>
					<texturesliderbar border="2">controls/scrollbar-slider-horz-nofocus.png</texturesliderbar>
					<texturesliderbarfocus border="2">controls/scrollbar-slider-horz-focus.png</texturesliderbarfocus>
					<textureslidernib>-</textureslidernib>
					<textureslidernibfocus>-</textureslidernibfocus>
					<onup>500</onup>
					<ondown condition="!IsEmpty(ListItem.Trailer)">PlayMedia($ESCINFO[ListItem.Trailer],noresume)</ondown>
					<ondown condition="IsEmpty(ListItem.Trailer) + System.HasAddon(script.extendedinfo)">RunScript(script.extendedinfo,info=youtubebrowser,id=$INFO[ListItem.Label] trailer)</ondown>
					<visible>!Skin.HasSetting(EnableQuickJump)</visible>
				</control>
			</control>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<depth>DepthContent+</depth>
				<top>BottomPaneOffsetY</top>
				<control type="label">
					<include>InfoPaneHeadLabel</include>
					<label>[B]$INFO[Container.NumItems,, $LOCALIZE[31202]][/B]</label>
				</control>
				<control type="group">
					<visible>Container.Content(Movies) | Container.Content(Sets)</visible>
					<control type="label">
						<include>InfoPaneHeadLabel2</include>
						<label>$VAR[MovieInfoPaneLabel2]</label>
					</control>
					<control type="grouplist">
						<description>Media Flags Area</description>
						<include condition="!Skin.HasSetting(HideMoviesFanartMediaInfo)">FanartViewMediaFlags1</include>
						<include condition="Skin.HasSetting(HideMoviesFanartMediaInfo)">FanartViewMediaFlags2</include>
						<top>3</top>
						<width>560</width>
						<height>35</height>
						<itemgap>5</itemgap>
						<usecontrolcoords>true</usecontrolcoords>
						<orientation>horizontal</orientation>
						<include>InfoPaneElementOpenCloseAnim</include>
						<include>MediaFlagFadeAnim</include>
						<include>VideoSourceMediaFlags</include>
						<include>VideoCodecMediaFlags</include>
						<include>AudioMediaFlags</include>
						<include>AspectMediaFlags</include>
						<include>SubtitleMediaFlags</include>
						<include condition="!Skin.HasSetting(HideRatingMediaFlag)">RatingMediaFlags</include>
						<visible>!Skin.HasSetting(DisableMediaFlags)</visible>
					</control>
				</control>
				<include condition="SubString(Container.FolderPath,videodb://tvshows/)">VideoDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>	

			<include>ViewsDialogPopUpScreenDim</include>
		</control>		
	</include>
	<!--//// END FANART VIEW /////////////////////////////////////////////////////////////////////-->
</includes>