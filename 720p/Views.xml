<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="TVShowsThumbTexture">
		<value condition="Skin.HasSetting(UseTVShowsPosterCover) + !IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!Skin.HasSetting(UseTVShowsPosterCover) + !IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	
	<variable name="PosterThumb">
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(ListItem.Art(animatedposter)) + [Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(66) | Control.IsVisible(69) | Control.IsVisible(75) | Control.IsVisible(97) | Control.IsVisible(582) | Control.IsVisible(588)]">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + [Container.Content(Movies) | Container.Content(Sets)] + !IsEmpty(Window(Home).Property(SkinHelper.AnimatedPoster)) + [Control.IsVisible(58) | Control.IsVisible(95) | Control.IsVisible(583) | Window.IsVisible(MovieInformation)]">$INFO[Window(Home).Property(SkinHelper.AnimatedPoster)]</value>
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	
	<variable name="BannerThumb">
		<value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value>$INFO[ListItem.Thumb]</value>
	</variable>
	
	<variable name="LandscapeThumb">
		<value condition="Container.Content(Episodes) + !IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="[Container.Content(TVShows) | Container.Content(Seasons)] + !IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>background-default.png</value>
	</variable>
	
	<variable name="WatchedPartial">
		<value condition="!IntegerGreaterThan(ListItem.PercentPlayed,20)">watched/watched-10pct.png</value>
		<value condition="IntegerGreaterThan(ListItem.PercentPlayed,20) + !IntegerGreaterThan(ListItem.PercentPlayed,40)">watched/watched-30pct.png</value>
		<value condition="IntegerGreaterThan(ListItem.PercentPlayed,40) + !IntegerGreaterThan(ListItem.PercentPlayed,60)">watched/watched-50pct.png</value>
		<value condition="IntegerGreaterThan(ListItem.PercentPlayed,60) + !IntegerGreaterThan(ListItem.PercentPlayed,80)">watched/watched-70pct.png</value>
		<value condition="IntegerGreaterThan(ListItem.PercentPlayed,80)">watched/watched-90pct.png</value>
	</variable>
	
	<variable name="WatchedPartialAlt">
		<value condition="!IntegerGreaterThan(ListItem.PercentPlayed,20)">watched/watched-10pct-alt.png</value>
		<value condition="IntegerGreaterThan(ListItem.PercentPlayed,20) + !IntegerGreaterThan(ListItem.PercentPlayed,40)">watched/watched-30pct-alt.png</value>
		<value condition="IntegerGreaterThan(ListItem.PercentPlayed,40) + !IntegerGreaterThan(ListItem.PercentPlayed,60)">watched/watched-50pct-alt.png</value>
		<value condition="IntegerGreaterThan(ListItem.PercentPlayed,60) + !IntegerGreaterThan(ListItem.PercentPlayed,80)">watched/watched-70pct-alt.png</value>
		<value condition="IntegerGreaterThan(ListItem.PercentPlayed,80)">watched/watched-90pct-alt.png</value>
	</variable>
	
	<variable name="VideoQualityOverlayWatched">
		<value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">OverlayHDAlt.png</value>
		<value condition="[!IsEmpty(ListItem.VideoResolution) + !IntegerGreaterThan(ListItem.VideoResolution,719)] | [IsEmpty(ListItem.VideoResolution) + [substring(ListItem.filename,.iso,right)
		| substring(ListItem.filename,.img,right) | substring(ListItem.filename,.ifo,right) | substring(ListItem.filename,.vob,right)]]">OverlaySDAlt.png</value>
		<value condition="ListItem.IsCollection">OverlayWatched.png</value>
		<value>OverlayUnknownAlt.png</value>
	</variable>
	
	<variable name="VideoQualityOverlayUnwatched">
		<value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">OverlayHD.png</value>
		<value condition="[!IsEmpty(ListItem.VideoResolution) + !IntegerGreaterThan(ListItem.VideoResolution,719)] | [IsEmpty(ListItem.VideoResolution) + [substring(ListItem.filename,.iso,right)
		| substring(ListItem.filename,.img,right) | substring(ListItem.filename,.ifo,right) | substring(ListItem.filename,.vob,right)]]">OverlaySD.png</value>
		<value condition="ListItem.IsCollection">DefaultVideo.png.png</value>
		<value>OverlayUnknown.png</value>
	</variable>
	
	<variable name="StarRating">
		<value condition="IntegerGreaterThan(ListItem.Rating,9)">flagging/imdbstarrating/10,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,8) + !IntegerGreaterThan(ListItem.Rating,10)">flagging/imdbstarrating/9,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,7) + !IntegerGreaterThan(ListItem.Rating,9)">flagging/imdbstarrating/8,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,6) + !IntegerGreaterThan(ListItem.Rating,8)">flagging/imdbstarrating/7,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,5) + !IntegerGreaterThan(ListItem.Rating,7)">flagging/imdbstarrating/6,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,4) + !IntegerGreaterThan(ListItem.Rating,6)">flagging/imdbstarrating/5,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,3) + !IntegerGreaterThan(ListItem.Rating,5)">flagging/imdbstarrating/4,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,2) + !IntegerGreaterThan(ListItem.Rating,4)">flagging/imdbstarrating/3,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,1) + !IntegerGreaterThan(ListItem.Rating,3)">flagging/imdbstarrating/2,0.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,0) + !IntegerGreaterThan(ListItem.Rating,2)">flagging/imdbstarrating/1,0.png</value>
		<value condition="!IntegerGreaterThan(ListItem.Rating,1)">flagging/imdbstarrating/0,0.png</value>
	</variable>
	
	<variable name="ListTallStyleLabel">
		<value condition="Container.Content(Albums) + !IsEmpty(ListItem.Album)">$INFO[ListItem.Album]</value>
		<value condition="[Container.Content(Songs) | Container.Content(TVShows) | Container.Content(Seasons)] + !IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="Container.Content(Artists) + !IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	
	<variable name="MovieGenre">
		<value condition="ListItem.IsCollection + !IsEmpty(Window(home).Property(SkinHelper.MovieSet.Genre))">$INFO[Window(home).Property(SkinHelper.MovieSet.Genre)]</value>
		<value condition="ListItem.IsCollection + IsEmpty(Window(home).Property(SkinHelper.MovieSet.Genre))">$LOCALIZE[20457]</value>
		<value>$INFO[ListItem.Genre]</value>
	</variable>
	
	<variable name="MovieYear">
		<value condition="ListItem.IsCollection + !IsEmpty(Window(home).Property(SkinHelper.MovieSet.Years))">$INFO[Window(home).Property(SkinHelper.MovieSet.Years)]</value>
		<value>$INFO[ListItem.Year]</value>
	</variable>
	
	<variable name="MoviePlot">
		<value condition="ListItem.IsCollection + !IsEmpty(Window(home).Property(SkinHelper.MovieSet.ExtendedPlot))">$INFO[Window(home).Property(SkinHelper.MovieSet.ExtendedPlot)]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	
	<include name="ViewContentPanel">
		<control type="image">
			<left>30</left>
			<top>106</top>
			<width>1220</width>
			<height>525</height>
			<texture border="7">panels/content-panel.png</texture>
			<include>PanelFadeAnim</include>
			<include>ControlsOpenCloseAnim</include>
		</control>
	</include>
	
	<include name="ViewContentPanelPictures">
		<control type="group">
			<left>34</left>
			<top>110</top>
			
			<control type="image">
				<description>Content Background</description>
				<width>416</width>
				<height>517</height>
				<texture border="4">panels/panel-content-border2.png</texture>
				<include>ListInfoViewContentBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>6</left>
				<top>6</top>
				<width>404</width>
				<height>505</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
		</control>
	</include>

	<include name="WideListViewContentPanel">
		<control type="image">
			<left>30</left>
			<top>87</top>
			<width>1220</width>
			<height>544</height>	
			<texture border="7">panels/content-panel.png</texture>
			<aspectratio>stretch</aspectratio>
			<include>PanelFadeAnim</include>
			<include>ControlsOpenCloseAnim</include>
		</control>
	</include>
	
	<include name="ListInfoViewContentPanel">
		<control type="image">
			<left>30</left>
			<top>328</top>
			<width>1220</width>
			<height>303</height>
			<texture border="7">panels/content-panel.png</texture>
			<include>PanelFadeAnim</include>
			<include>ControlsOpenCloseAnim</include>
		</control>
		
		<control type="image">
			<description>Content Background</description>
			<left>34</left>
			<top>332</top>
			<width>681</width>
			<height>295</height>
			<texture border="4">panels/panel-content-border2.png</texture>
			<include>ListInfoViewContentBackgroundFadeAnim</include>
		</control>
		
		<control type="group">
			<visible>Container.Content(Movies) | Container.Content(Sets) | [Container.Content(TVShows) + Skin.HasSetting(UseTVShowsPosterCover)] | Container.Content(Seasons)</visible>
			<control type="image">
				<description>Genre Background</description>
				<left>221</left>
				<top>337</top>
				<width>489</width>
				<height>30</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>221</left>
				<top>372</top>
				<width>489</width>
				<height>58</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + [Container.Content(TVShows) | Container.Content(Seasons)]</visible>
			</control>
			
			<control type="image">
				<description>Plot Background</description>
				<left>221</left>
				<top>434</top>
				<width>489</width>
				<height>153</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + [Container.Content(TVShows) | Container.Content(Seasons)]</visible>
			</control>
			
			<control type="image">
				<description>Plot Background</description>
				<left>221</left>
				<top>372</top>
				<width>489</width>
				<height>215</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				<visible>[Container.Content(TVShows) | Container.Content(Seasons)] + [!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]]</visible>
			</control>
			
			<control type="image">
				<description>Plot Background</description>
				<left>221</left>
				<top>372</top>
				<width>489</width>
				<height>215</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				<visible>![Container.Content(TVShows) | Container.Content(Seasons)]</visible>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>39</left>
				<top>592</top>
				<width>671</width>
				<height>30</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
		</control>
		
		<control type="group">
			<visible>Container.Content(TVShows) + !Skin.HasSetting(UseTVShowsPosterCover)</visible>
			<control type="image">
				<description>Plot Background</description>
				<left>39</left>
				<top>469</top>
				<width>671</width>
				<height>118</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>39</left>
				<top>592</top>
				<width>671</width>
				<height>30</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
		</control>
		
		<control type="group">
			<visible>Window.IsActive(AddonBrowser) | Container.Content(Addons) | Window.IsActive(MusicLibrary)</visible>
			<control type="image">
				<description>Genre Background</description>
				<left>294</left>
				<top>337</top>
				<width>416</width>
				<height>30</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Plot Background</description>
				<left>294</left>
				<top>372</top>
				<width>416</width>
				<height>215</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>39</left>
				<top>592</top>
				<width>671</width>
				<height>30</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
		</control>
		
		<control type="group">
			<visible>Container.Content(Episodes)</visible>
			<control type="image">
				<description>Genre Background</description>
				<left>39</left>
				<top>337</top>
				<width>671</width>
				<height>30</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Plot Background</description>
				<left>378</left>
				<top>372</top>
				<width>332</width>
				<height>215</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>39</left>
				<top>592</top>
				<width>671</width>
				<height>30</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
		</control>
	</include>

	<include name="DVDThumbsStyleCoverImage">
		<control type="image">
			<width>135</width>
			<height>178</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>135</width>
			<height>178</height>
			<bordersize>9</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>135</width>
			<height>178</height>
			<bordersize>12</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>135</width>
			<height>178</height>
			<bordersize>10</bordersize>
			<texture background="true">$VAR[PosterThumb]</texture>
			<aspectratio>stretch</aspectratio>
			<visible>Container.Content(Movies) | Container.Content(Sets) | Container.Content(TVShows)</visible>
		</control>
	</include>
	
	<include name="DVDThumbsStyleCoverImageBanner">
		<control type="image">
			<width>395</width>
			<height>83</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>395</width>
			<height>83</height>
			<bordersize>9</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>395</width>
			<height>83</height>
			<bordersize>12</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
		</control>

		<control type="image">
			<width>395</width>
			<height>83</height>
			<bordersize>10</bordersize>
			<texture background="true">$INFO[ListItem.Art(banner)]</texture>
			<aspectratio>stretch</aspectratio>
			<visible>Container.Content(TVShows)</visible>
		</control>
	</include>

	<include name="DVDThumbsStyleOverlayImage">
		<control type="group">
			<visible>Container.Content(Movies)</visible>
			<control type="image">
				<description>Overlay</description>
				<left>96</left>
				<top>133</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideMoviesThumbsInfoOverlay)</visible>
			</control>
			<control type="image">
				<description>Watched Partial</description>
				<left>96</left>
				<top>133</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$VAR[WatchedPartial]</texture>
				<aspectratio>keep</aspectratio>
				<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbsInfoOverlay)</visible>
			</control>
		</control>
		
		<control type="group">
			<visible>Container.Content(TVShows)</visible>
			<control type="image">
				<description>Overlay</description>
				<left>96</left>
				<top>138</top>
				<width>26</width>
				<height>26</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
				<animation effect="fade" end="80" condition="true">Conditional</animation>
			</control>			
			<control type="image">
				<description>Unwatched Overlay</description>
				<left>96</left>
				<top>138</top>
				<width>26</width>
				<height>26</height>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio align="right">keep</aspectratio>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
			</control>			
			<control type="label">
				<description>Unwatched Episodes</description>
				<top>142</top>
				<left>96</left>
				<width>26</width>
				<font>ListFont3</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>			
			<control type="label">
				<description>Unwatched Episodes</description>
				<top>142</top>
				<left>96</left>
				<width>26</width>
				<font>ListFont4</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
		</control>
	</include>
	
	<include name="DVDThumbsStyleOverlayImageBanner">
		<control type="image">
			<description>Overlay</description>
			<left>355</left>
			<top>43</top>
			<width>26</width>
			<height>26</height>
			<texture background="true">$INFO[ListItem.Overlay]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
			<animation effect="fade" end="80" condition="true">Conditional</animation>
		</control>
		<control type="image">
			<description>Unwatched Overlay</description>
			<left>355</left>
			<top>43</top>
			<width>26</width>
			<height>26</height>
			<texture background="true">OverlayClean.png</texture>
			<aspectratio align="right">keep</aspectratio>
			<animation effect="fade" end="85" condition="true">Conditional</animation>
			<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
		</control>
		<control type="label">
			<description>Unwatched Episodes</description>
			<top>47</top>
			<left>355</left>
			<width>26</width>
			<font>ListFont3</font>
			<textcolor>white</textcolor>
			<align>center</align>
			<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			<animation effect="fade" end="85" condition="true">Conditional</animation>
			<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
		</control>
		<control type="label">
			<description>Unwatched Episodes</description>
			<top>47</top>
			<left>355</left>
			<width>26</width>
			<font>ListFont4</font>
			<textcolor>white</textcolor>
			<align>center</align>
			<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			<animation effect="fade" end="85" condition="true">Conditional</animation>
			<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
		</control>
	</include>

	<include name="AlbumThumbsStyleCoverImage">
		<control type="image">
			<width>129</width>
			<height>129</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>129</width>
			<height>129</height>
			<bordersize>9</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>129</width>
			<height>129</height>
			<bordersize>20</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>129</width>
			<height>129</height>
			<bordersize>10</bordersize>
			<texture background="true">$INFO[ListItem.Thumb]</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>

	<include name="LogoThumbsStyleCoverImage">						
		<control type="image">
			<width>269</width>
			<height>142</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>
		
		<control type="image">
			<left>5</left>
			<top>5</top>
			<width>259</width>
			<height>132</height>
			<bordersize>4</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" end="60" condition="true">Conditional</animation>
		</control>

		<control type="image">
			<width>269</width>
			<height>142</height>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio align="center">keep</aspectratio>
			<bordersize>8</bordersize>
			<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
		</control>

		<control type="image">
			<width>269</width>
			<height>142</height>
			<bordersize>10</bordersize>
			<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
			<aspectratio>keep</aspectratio>
		</control>

		<control type="image">
			<description>Overlay</description>
			<left>236</left>
			<top>9</top>
			<width>24</width>
			<height>24</height>
			<texture background="true">$INFO[ListItem.Overlay]</texture>
			<aspectratio>keep</aspectratio>
			<visible>Container.Content(Movies) + !Skin.HasSetting(HideMoviesThumbsInfoOverlay)</visible>
		</control>
		
		<control type="image">
			<description>Watched Partial</description>
			<left>236</left>
			<top>9</top>
			<width>24</width>
			<height>24</height>
			<texture background="true">$VAR[WatchedPartial]</texture>
			<aspectratio>keep</aspectratio>
			<visible>Container.Content(Movies) + ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesThumbsInfoOverlay)</visible>
		</control>
		
		<control type="group">
			<visible>Container.Content(TVShows)</visible>
			<control type="image">
				<description>Overlay</description>
				<left>234</left>
				<top>9</top>
				<width>26</width>
				<height>26</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
				<animation effect="fade" end="80" condition="true">Conditional</animation>
			</control>					
			<control type="image">
				<description>Unwatched Overlay</description>
				<left>234</left>
				<top>9</top>
				<width>26</width>
				<height>26</height>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<animation effect="fade" end="80" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<top>13</top>
				<left>234</left>
				<width>26</width>
				<font>ListFont3</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<top>13</top>
				<left>234</left>
				<width>26</width>
				<font>ListFont4</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
		</control>
	</include>
	
	<include name="ClearArtThumbsStyleCoverImage">
		<control type="image">
			<width>268</width>
			<height>184</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<left>5</left>
			<top>5</top>
			<width>258</width>
			<height>174</height>
			<bordersize>4</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" end="60" condition="true">Conditional</animation>
		</control>

		<control type="image">
			<width>268</width>
			<height>184</height>
			<bordersize>25</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio align="center">keep</aspectratio>
			<visible>IsEmpty(ListItem.Art(clearlogo))</visible>
		</control>

		<control type="image">
			<top>14</top>
			<width>268</width>
			<height>184</height>
			<bordersize>10</bordersize>
			<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!IsEmpty(ListItem.Art(clearart))</visible>
		</control>
		
		<control type="image">
			<description>Clear Logo</description>
			<width>268</width>
			<height>184</height>
			<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
			<aspectratio>keep</aspectratio>
			<bordersize>10</bordersize>
			<visible>IsEmpty(ListItem.Art(clearart)) + !IsEmpty(ListItem.Art(clearlogo))</visible>
		</control>

		<control type="image">
			<description>Overlay</description>
			<left>231</left>
			<top>11</top>
			<width>26</width>
			<height>26</height>
			<texture background="true">$INFO[ListItem.Overlay]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
		</control>
		
		<control type="image">
			<description>Unwatched Overlay</description>
			<left>231</left>
			<top>11</top>
			<width>26</width>
			<height>26</height>
			<texture background="true">OverlayClean.png</texture>
			<aspectratio>keep</aspectratio>
			<animation effect="fade" end="80" condition="true">Conditional</animation>
			<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
		</control>
		
		<control type="label">
			<description>Unwatched Episodes</description>
			<top>15</top>
			<left>231</left>
			<width>26</width>
			<font>ListFont3</font>
			<textcolor>white</textcolor>
			<align>center</align>
			<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			<animation effect="fade" end="85" condition="true">Conditional</animation>
			<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
		</control>
		
		<control type="label">
			<description>Unwatched Episodes</description>
			<top>15</top>
			<left>231</left>
			<width>26</width>
			<font>ListFont4</font>
			<textcolor>white</textcolor>
			<align>center</align>
			<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			<animation effect="fade" end="85" condition="true">Conditional</animation>
			<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
		</control>
	</include>

	<include name="StraitThumbsStyleCoverImage">
		<control type="image">
			<width>129</width>
			<height>172</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>129</width>
			<height>172</height>
			<bordersize>9</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>129</width>
			<height>172</height>
			<bordersize>12</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>129</width>
			<height>172</height>
			<bordersize>10</bordersize>
			<texture background="true">$INFO[ListItem.Thumb]</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	
	<include name="SquareThumbsStyleCoverImage">
		<control type="image">
			<width>129</width>
			<height>129</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>129</width>
			<height>129</height>
			<bordersize>9</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>129</width>
			<height>129</height>
			<bordersize>20</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>129</width>
			<height>129</height>
			<bordersize>10</bordersize>
			<texture background="true">$INFO[ListItem.Thumb]</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	
	<include name="WideThumbsStyleCoverImage">
		<control type="image">
			<width>155</width>
			<height>129</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>155</width>
			<height>129</height>
			<bordersize>9</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>155</width>
			<height>129</height>
			<bordersize>20</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>155</width>
			<height>129</height>
			<bordersize>10</bordersize>
			<texture background="true">$INFO[ListItem.Thumb]</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>

	<include name="PictureThumbsStyleCoverImage">
		<control type="image">
			<width>264</width>
			<height>263</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>264</width>
			<height>263</height>
			<bordersize>9</bordersize>
			<texture background="true">dim.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>264</width>
			<height>263</height>
			<bordersize>20</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>264</width>
			<height>238</height>
			<bordersize>10</bordersize>
			<texture background="true">$INFO[ListItem.Thumb]</texture>
			<aspectratio>keep</aspectratio>
		</control>
		
		<control type="image">
			<description>Title Background</description>
			<left>10</left>
			<top>228</top>
			<width>244</width>
			<height>25</height>
			<texture background="true">dim.png</texture>
			<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
		</control>
		
		<control type="label">
			<description>Genre</description>
			<left>13</left>
			<top>229</top>
			<width>240</width>
			<align>center</align>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
			<scroll>true</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>!SubString(ListItem.ActualIcon,DefaultFolderBack.png)</visible>
		</control>
	</include>
	
	<include name="DVDWallCoverImage">
		<control type="image">
			<width>180</width>
			<height>245</height>
			<texture border="0">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>180</width>
			<height>245</height>
			<texture>dim.png</texture>
			<bordersize>9</bordersize>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>180</width>
			<height>245</height>
			<bordersize>28</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>180</width>
			<height>245</height>
			<texture background="true">$VAR[PosterThumb]</texture>
			<bordersize>10</bordersize>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>

	<include name="DVDWallOverlayImage">
		<control type="group">
			<visible>Container.Content(Movies)</visible>
			<control type="image">
				<left>135</left>
				<top>200</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideMoviesWallOverlay)</visible>
			</control>
			<control type="image">
				<description>Watched Partial</description>
				<left>135</left>
				<top>200</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$VAR[WatchedPartial]</texture>
				<aspectratio>keep</aspectratio>
				<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesWallOverlay)</visible>
			</control>
		</control>
		<control type="group">
			<visible>Container.Content(TVShows)</visible>
			<control type="image">
				<left>133</left>
				<top>200</top>
				<width>26</width>
				<height>26</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay)</visible>
			</control>
			<control type="image">
				<description>Unwatched Overlay</description>
				<left>133</left>
				<top>200</top>
				<width>26</width>
				<height>26</height>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<animation effect="fade" end="80" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<top>204</top>
				<left>133</left>
				<width>26</width>
				<font>ListFont3</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<top>204</top>
				<left>133</left>
				<width>26</width>
				<font>ListFont4</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
		</control>
	</include>
	
	<include name="DVDWallCoverImageSmall">
		<control type="image">
			<width>112</width>
			<height>155</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>112</width>
			<height>155</height>
			<texture>dim.png</texture>
			<bordersize>9</bordersize>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>112</width>
			<height>155</height>
			<bordersize>28</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>112</width>
			<height>155</height>
			<texture background="true">$VAR[PosterThumb]</texture>
			<bordersize>10</bordersize>
			<aspectratio>scale</aspectratio>
		</control>
	</include>
	
	<include name="DVDWallOverlayImageSmall">
		<control type="group">
			<visible>Container.Content(Movies)</visible>
			<control type="image">
				<left>67</left>
				<top>110</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideMoviesWallOverlay)</visible>
			</control>
			<control type="image">
				<description>Watched Partial</description>
				<left>67</left>
				<top>110</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$VAR[WatchedPartial]</texture>
				<aspectratio>keep</aspectratio>
				<visible>ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(HideMoviesWallOverlay)</visible>
			</control>
		</control>
		<control type="group">
			<visible>Container.Content(TVShows)</visible>
			<control type="image">
				<left>65</left>
				<top>110</top>
				<width>26</width>
				<height>26</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay)</visible>
			</control>
			<control type="image">
				<description>Unwatched Overlay</description>
				<left>65</left>
				<top>110</top>
				<width>26</width>
				<height>26</height>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<animation effect="fade" end="80" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IsEmpty(ListItem.Property(UnWatchedEpisodes))</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<top>114</top>
				<left>65</left>
				<width>26</width>
				<font>ListFont3</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<top>114</top>
				<left>65</left>
				<width>26</width>
				<font>ListFont4</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<animation effect="fade" end="85" condition="true">Conditional</animation>
				<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + !StringCompare(ListItem.Property(UnWatchedEpisodes),0) + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),99)</visible>
			</control>
		</control>
	</include>

	<include name="AlbumWallCoverImage">
		<control type="image">
			<width>234</width>
			<height>245</height>
			<texture border="7">covers/cover-case-focus.png</texture>
			<aspectratio>stretch</aspectratio>
			<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
		</control>

		<control type="image">
			<width>234</width>
			<height>245</height>
			<texture>dim.png</texture>
			<bordersize>9</bordersize>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="image">
			<width>234</width>
			<height>245</height>
			<bordersize>50</bordersize>
			<texture background="true">$INFO[ListItem.ActualIcon]</texture>
			<aspectratio>keep</aspectratio>
			<visible>IsEmpty(ListItem.Thumb)</visible>
		</control>

		<control type="image">
			<width>234</width>
			<height>245</height>
			<texture background="true">$INFO[ListItem.Thumb]</texture>
			<bordersize>10</bordersize>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
	
	<include name="ListInfo2MediaInfoPanelCommon">
		<control type="group">
			<left>34</left>
			<top>110</top>
			
			<control type="image">
				<description>Content Background</description>
				<width>554</width>
				<height>517</height>
				<texture border="4">panels/panel-content-border2.png</texture>
				<include>ListInfoViewContentBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>6</left>
				<top>314</top>
				<width>542</width>
				<height>58</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Description Background</description>
				<left>6</left>
				<top>376</top>
				<width>542</width>
				<height>135</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
		</control>
	</include>
	
	<include name="ListInfo2PanelFanart">
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>542</width>
			<height>304</height>
			<texture background="true" diffuse="covers/list-info-2-fanart-diffuse.png" fallback="background-default.png">$INFO[ListItem.Art(fanart)]</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
		</control>
		
		<control type="multiimage">
			<left>40</left>
			<top>116</top>
			<width>542</width>
			<height>304</height>
			<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]extrafanart</imagepath>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(EnableMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(EnableTVShowsSmallExtraFanart)] | [Container.Content(Episodes) + Skin.HasSetting(EnableEpisodesSmallExtraFanart)]</visible>
		</control>
		
		<control type="multiimage">
			<left>40</left>
			<top>116</top>
			<width>542</width>
			<height>304</height>
			<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]../extrafanart</imagepath>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(EnableMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(EnableTVShowsSmallExtraFanart)] | [Container.Content(Episodes) + Skin.HasSetting(EnableEpisodesSmallExtraFanart)]</visible>
		</control>
		
		<control type="multiimage">
			<left>40</left>
			<top>116</top>
			<width>542</width>
			<height>304</height>
			<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]../../extrafanart</imagepath>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(EnableMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(EnableTVShowsSmallExtraFanart)] | [Container.Content(Episodes) + Skin.HasSetting(EnableEpisodesSmallExtraFanart)]</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>102</top>
			<width>542</width>
			<height>304</height>
			<texture background="true">home-movies-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + [Container.Content(Movies) | Container.Content(Sets)]</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>108</top>
			<width>542</width>
			<height>301</height>
			<texture background="true">home-music-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + Window.IsActive(MusicLibrary)</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>95</top>
			<width>542</width>
			<height>301</height>
			<texture background="true">home-programs-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + Window.IsActive(Programs)</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>70</top>
			<width>542</width>
			<height>331</height>
			<texture background="true">home-tvshows-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + [Container.Content(TVShows) | Container.Content(Episodes)]</visible>
		</control>
	
		<control type="image">
			<description>Genre Background</description>
			<left>43</left>
			<top>119</top>
			<width>250</width>
			<height>27</height>
			<texture border="8">views/genre-background.png</texture>
			<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(NextAired.Genre)) + IsEmpty(Window(Home).Property(SkinHelper.MovieSet.Genre))]</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
					
		<control type="label">
			<description>Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(SkinHelper.MovieSet.Genre))]</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
		
		<control type="label">
			<description>Next Aired Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$INFO[Window(Home).Property(NextAired.Genre)][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>IsEmpty(ListItem.Genre) + !IsEmpty(Window(Home).Property(NextAired.Genre))</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
	</include>
	
	<include name="ListInfo2PanelLandscape">
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>542</width>
			<height>304</height>
			<texture border="4">panels/panel3.png</texture>
			<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>542</width>
			<height>304</height>
			<texture background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$VAR[LandscapeThumb]</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>[Container.Content(TVShows) + Skin.HasSetting(ShowTVShowsLandscape)] | [Container.Content(Episodes) + Skin.HasSetting(ShowLandscape)]</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>542</width>
			<height>304</height>
			<texture background="true" diffuse="covers/list-info-2-fanart-diffuse.png" fallback="background-default.png">$INFO[ListItem.Thumb]</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>Container.Content(Episodes) + Skin.HasSetting(ShowDefaultThumb)</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>70</top>
			<width>542</width>
			<height>331</height>
			<texture background="true">home-tvshows-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>[Container.Content(Episodes) + Skin.HasSetting(ShowDefaultThumb) + IsEmpty(ListItem.Thumb)] | [[[Container.Content(TVShows) + Skin.HasSetting(ShowTVShowsLandscape)] | [Container.Content(Episodes) + Skin.HasSetting(ShowLandscape)]] + IsEmpty(ListItem.Art(fanart))]</visible>
		</control>
	
		<control type="image">
			<description>Genre Background</description>
			<left>43</left>
			<top>119</top>
			<width>250</width>
			<height>27</height>
			<texture border="8">views/genre-background.png</texture>
			<visible>[!IsEmpty(ListItem.Genre) | !IsEmpty(Window(Home).Property(NextAired.Genre))] + !Skin.HasSetting(HideEpisodesGenres)</visible>
		</control>
					
		<control type="label">
			<description>Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>!IsEmpty(ListItem.Genre) + !Skin.HasSetting(HideEpisodesGenres)</visible>
		</control>
		
		<control type="label">
			<description>Next Aired Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$INFO[Window(Home).Property(NextAired.Genre)][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>IsEmpty(ListItem.Genre) + !IsEmpty(Window(Home).Property(NextAired.Genre)) + !Skin.HasSetting(HideEpisodesGenres)</visible>
		</control>
	</include>

	<include name="ListInfo2PanelExtraThumbs">	
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>269</width>
			<height>150</height>
			<texture background="true" diffuse="covers/list-info-2-extrathumbs-diffuse.png">$INFO[ListItem.Path]extrathumbs/thumb1.jpg</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
		</control>

		<control type="image">
			<left>313</left>
			<top>116</top>
			<width>269</width>
			<height>150</height>
			<texture background="true" diffuse="covers/list-info-2-extrathumbs-diffuse.png">$INFO[ListItem.Path]extrathumbs/thumb2.jpg</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
		</control>

		<control type="image">
			<left>40</left>
			<top>270</top>
			<width>269</width>
			<height>150</height>
			<texture background="true" diffuse="covers/list-info-2-extrathumbs-diffuse.png">$INFO[ListItem.Path]extrathumbs/thumb3.jpg</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
		</control>

		<control type="image">
			<left>313</left>
			<top>270</top>
			<width>269</width>
			<height>150</height>
			<texture background="true" diffuse="covers/list-info-2-extrathumbs-diffuse.png">$INFO[ListItem.Path]extrathumbs/thumb4.jpg</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
		</control>
		
		<control type="image">
			<description>Genre Background</description>
			<left>43</left>
			<top>119</top>
			<width>250</width>
			<height>27</height>
			<texture border="8">views/genre-background.png</texture>
			<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(NextAired.Genre)) + IsEmpty(Window(Home).Property(SkinHelper.MovieSet.Genre))]</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
					
		<control type="label">
			<description>Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(SkinHelper.MovieSet.Genre))]</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
		
		<control type="label">
			<description>Next Aired Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$INFO[Window(Home).Property(NextAired.Genre)][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>IsEmpty(ListItem.Genre) + !IsEmpty(Window(Home).Property(NextAired.Genre))</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
	</include>
	
	<include name="ListInfo3MediaInfoPanelCommon">
		<control type="group">
			<left>34</left>
			<top>110</top>
			
			<control type="image">
				<description>Content Background</description>
				<width>416</width>
				<height>517</height>
				<texture border="4">panels/panel-content-border2.png</texture>
				<include>ListInfoViewContentBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>6</left>
				<top>238</top>
				<width>404</width>
				<height>58</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Media Info Background</description>
				<left>6</left>
				<top>300</top>
				<width>404</width>
				<height>58</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + [Container.Content(TVShows) | Container.Content(Episodes)]</visible>
			</control>
			
			<control type="image">
				<description>Description Background</description>
				<left>6</left>
				<top>362</top>
				<width>404</width>
				<height>149</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + [Container.Content(TVShows) | Container.Content(Episodes)]</visible>
			</control>
			
			<control type="image">
				<description>Description Background</description>
				<left>6</left>
				<top>300</top>
				<width>404</width>
				<height>211</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				<visible>[Container.Content(TVShows) | Container.Content(Episodes)] + [!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]]</visible>
			</control>
			
			<control type="image">
				<description>Description Background</description>
				<left>6</left>
				<top>300</top>
				<width>404</width>
				<height>211</height>
				<texture border="4">panels/panel3.png</texture>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				<visible>![Container.Content(TVShows) | Container.Content(Episodes)]</visible>
			</control>
		</control>
	</include>
	
	<include name="ListInfo3PanelFanart">
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>404</width>
			<height>228</height>
			<texture background="true" diffuse="covers/list-info-3-fanart-diffuse.png" fallback="background-default.png">$INFO[ListItem.Art(fanart)]</texture>
			<aspectratio scalediffuse="false" align="center">scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
		</control>
		
		<control type="multiimage">
			<left>40</left>
			<top>116</top>
			<width>404</width>
			<height>228</height>
			<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]extrafanart</imagepath>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(EnableMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(EnableTVShowsSmallExtraFanart)] | [Container.Content(Episodes) + Skin.HasSetting(EnableEpisodesSmallExtraFanart)]</visible>
		</control>
		
		<control type="multiimage">
			<left>40</left>
			<top>116</top>
			<width>404</width>
			<height>228</height>
			<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]../extrafanart</imagepath>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(EnableMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(EnableTVShowsSmallExtraFanart)] | [Container.Content(Episodes) + Skin.HasSetting(EnableEpisodesSmallExtraFanart)]</visible>
		</control>
		
		<control type="multiimage">
			<left>40</left>
			<top>116</top>
			<width>404</width>
			<height>228</height>
			<imagepath background="true" diffuse="covers/list-info-2-fanart-diffuse.png">$INFO[ListItem.Path]../../extrafanart</imagepath>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
			<visible>[[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(EnableMoviesSmallExtraFanart)] | [Container.Content(TVShows) + Skin.HasSetting(EnableTVShowsSmallExtraFanart)] | [Container.Content(Episodes) + Skin.HasSetting(EnableEpisodesSmallExtraFanart)]</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>106</top>
			<width>404</width>
			<height>228</height>
			<texture background="true">home-movies-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + [Container.Content(Movies) | Container.Content(Sets)]</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>75</top>
			<width>404</width>
			<height>255</height>
			<texture background="true">home-tvshows-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + [Container.Content(TVShows) | Container.Content(Episodes)]</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>110</top>
			<width>404</width>
			<height>225</height>
			<texture background="true">home-music-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + Window.IsActive(MusicLibrary)</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>100</top>
			<width>404</width>
			<height>225</height>
			<texture background="true">home-programs-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + Window.IsActive(Programs)</visible>
		</control>
		
		<control type="image">
			<description>Genre Background</description>
			<left>43</left>
			<top>119</top>
			<width>250</width>
			<height>27</height>
			<texture border="8">views/genre-background.png</texture>
			<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(NextAired.Genre)) + IsEmpty(Window(Home).Property(SkinHelper.MovieSet.Genre))]</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
					
		<control type="label">
			<description>Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>![IsEmpty(ListItem.Genre) + IsEmpty(Window(Home).Property(SkinHelper.MovieSet.Genre))]</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
		
		<control type="label">
			<description>Next Aired Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$INFO[Window(Home).Property(NextAired.Genre)][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>IsEmpty(ListItem.Genre) + !IsEmpty(Window(Home).Property(NextAired.Genre))</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
	</include>
	
	<include name="ListInfo3PanelLandscape">
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>404</width>
			<height>228</height>
			<texture border="4">panels/panel3.png</texture>
			<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>404</width>
			<height>228</height>
			<texture background="true" diffuse="covers/list-info-3-fanart-diffuse.png">$VAR[LandscapeThumb]</texture>
			<aspectratio scalediffuse="false" align="center">scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>106</top>
			<width>404</width>
			<height>228</height>
			<texture background="true">home-movies-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + [Container.Content(Movies) | Container.Content(Sets)]</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>110</top>
			<width>404</width>
			<height>225</height>
			<texture background="true">home-music-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + Window.IsActive(MusicLibrary)</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>100</top>
			<width>404</width>
			<height>225</height>
			<texture background="true">home-programs-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + Window.IsActive(Programs)</visible>
		</control>
		
		<control type="image">
			<left>40</left>
			<top>75</top>
			<width>404</width>
			<height>255</height>
			<texture background="true">home-tvshows-icon.png</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
			<include>BackgroundVisibleAnim</include>
			<visible>IsEmpty(ListItem.Art(fanart)) + [Container.Content(TVShows) | Container.Content(Episodes)]</visible>
		</control>
		
		<control type="image">
			<description>Genre Background</description>
			<left>43</left>
			<top>119</top>
			<width>250</width>
			<height>27</height>
			<texture border="8">views/genre-background.png</texture>
			<visible>!IsEmpty(ListItem.Genre) + !IsEmpty(Window(Home).Property(NextAired.Genre))</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
					
		<control type="label">
			<description>Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>!IsEmpty(ListItem.Genre)</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
		
		<control type="label">
			<description>Next Aired Genre</description>
			<left>51</left>
			<top>121</top>
			<width>234</width>
			<font>MediaInfoFont3</font>
			<textcolor>WhiteColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>[UPPERCASE]$INFO[Window(Home).Property(NextAired.Genre)][/UPPERCASE]</label>
			<scroll>false</scroll>
			<animation effect="fade" end="90" condition="true">Conditional</animation>
			<visible>IsEmpty(ListItem.Genre) + !IsEmpty(Window(Home).Property(NextAired.Genre))</visible>
			<visible>![[Container.Content(Episodes) + Skin.HasSetting(HideEpisodesGenres)] | [Container.Content(TVShows) + Skin.HasSetting(HideTVShowsGenres)] | [[Container.Content(Movies) | Container.Content(Sets)] + Skin.HasSetting(HideMoviesGenres)]]</visible>
		</control>
	</include>

	<include name="ListInfo3RightPanelCover">
		<control type="group">					
			<left>880</left>
			<top>121</top>
			<animation effect="slide" end="0,-50" condition="Container.Content(Albums)">Conditional</animation>

			<control type="image">
				<description>Default Cover</description>
				<width>320</width>
				<height>440</height>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<bordersize>90</bordersize>
				<aspectratio>keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>IsEmpty(ListItem.Thumb)</visible>
			</control>

			<control type="image">
				<description>Cover</description>
				<width>320</width>
				<height>440</height>
				<texture background="true">$VAR[PosterThumb]</texture>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio aligny="bottom">keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>Container.Content(Movies) | Container.Content(TVShows)</visible>
			</control>
			
			<control type="image">
				<description>Cover</description>
				<width>320</width>
				<height>440</height>
				<texture background="true">$INFO[ListItem.Thumb]</texture>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio aligny="bottom">keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>![Container.Content(Movies) | Container.Content(TVShows)]</visible>
			</control>

			<control type="image">
				<description>Cover Reflection</description>
				<top>440</top>
				<width>320</width>
				<height>440</height>
				<texture background="true" flipy="true" diffuse="views/reflection.png">$VAR[PosterThumb]</texture>
				<bordertexture flipy="true" border="4" diffuse="views/reflection.png">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio aligny="top">keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>Container.Content(Movies) | Container.Content(TVShows)</visible>
			</control>
			
			<control type="image">
				<description>Cover Reflection</description>
				<top>440</top>
				<width>320</width>
				<height>440</height>
				<texture background="true" flipy="true" diffuse="views/reflection.png">$INFO[ListItem.Thumb]</texture>
				<bordertexture flipy="true" border="4" diffuse="views/reflection.png">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio aligny="top">keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>![Container.Content(Movies) | Container.Content(TVShows)]</visible>
			</control>
		</control>
	</include>

	<include name="ListInfo3RightPanelEpisodeThumb">
		<control type="image">
			<left>40</left>
			<top>116</top>
			<width>404</width>
			<height>228</height>
			<texture background="true" diffuse="covers/list-info-3-fanart-diffuse.png">$INFO[ListItem.Thumb]</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<fadetime>FanartCrossfadeTime</fadetime>
		</control>
	</include>

	<include name="ListInfo3RightPanelEpisodeExtraThumbs">
		<control type="multiimage">
			<left>40</left>
			<top>116</top>
			<width>404</width>
			<height>228</height>
			<imagepath background="true" diffuse="covers/list-info-3-fanart-diffuse.png">$INFO[ListItem.Path]extrathumbs</imagepath>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<timeperimage>3000</timeperimage>
			<fadetime>FanartCrossfadeTime</fadetime>
			<randomize>true</randomize>
		</control>
	</include>
	
	<include name="ListInfo3RightPanelMovieExtraThumbs">
		<control type="grouplist">
			<left>880</left>
			<top>116</top>
			<width>320</width>
			<height>505</height>
			<align>center</align>
			<itemgap>17</itemgap>
			<control type="image">
				<width>320</width>
				<height>158</height>
				<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb1.jpg</texture>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<width>320</width>
				<height>158</height>
				<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb2.jpg</texture>
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<width>320</width>
				<height>158</height>
				<texture background="true">$INFO[ListItem.Path]extrathumbs/thumb3.jpg</texture>	
				<bordertexture border="4">covers/cover-case2.png</bordertexture>
				<bordersize>4</bordersize>
				<aspectratio>keep</aspectratio>
			</control>
		</control>
	</include>

	<include name="ListInfoViewCatLabel">
		<height>45</height>
		<font>MediaInfoFont</font>
		<textcolor>MediaInfoItemColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<aligny>center</aligny>
	</include>

	<include name="ListInfoViewCatValueLabel">
		<height>45</height>
		<font>MediaInfoFont</font>
		<textcolor>MediaInfoItemColor2</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<aligny>center</aligny>
	</include>

	<include name="ListInfoViewDot">
		<control type="label">
			<height>45</height>
			<width>26</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>MediaInfoFont</font>
			<textcolor>GreyColor3</textcolor>
			<label>&#x2022;</label>
		</control>
	</include>

	<include name="WrapInfoViewCatLabel">
		<height>33</height>
		<font>MediaInfoFont</font>
		<textcolor>MediaInfoItemColor</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<aligny>center</aligny>
	</include>

	<include name="WrapInfoViewCatValueLabel">
		<height>33</height>
		<font>MediaInfoFont</font>
		<textcolor>MediaInfoItemColor2</textcolor>
		<shadowcolor>ShadowColor</shadowcolor>
		<aligny>center</aligny>
	</include>

	<include name="WrapInfoViewDot">
		<control type="label">
			<height>33</height>
			<width>26</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>PanelTitleFont</font>
			<textcolor>GreyColor3</textcolor>
			<label>&#x2022;</label>
		</control>
	</include>
	
	<include name="PicsInfoLine">
		<control type="grouplist">
			<visible>!IsEmpty($PARAM[value])</visible>
			<height>23</height>
			<orientation>horizontal</orientation>
			<width>388</width>
			<itemgap>10</itemgap>
			<control type="label">
				<width>auto</width>
				<font>MediaInfoFont</font>
				<textcolor>MediaInfoItemColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$PARAM[label]:</label>
			</control>
			<control type="label">
				<width max="300">auto</width>
				<font>MediaInfoFont</font>
				<textcolor>MediaInfoItemColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[$PARAM[value]]</label>
				<scroll>true</scroll>
			</control>
		</control>
	</include>
	
	<include name="PicsInfo">
		<control type="grouplist">
			<description>Media Info Area</description>
			<left>48</left>
			<top>120</top>
			<width>388</width>
			<height>494</height>
			<orientation>vertical</orientation>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21820]"/>
				<param name="value" value="ListItem.PictureDatetime" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21802]"/>
				<param name="value" value="ListItem.Size" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21805]"/>
				<param name="value" value="ListItem.PictureResolution" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21826]"/>
				<param name="value" value="ListItem.PictureAperture" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21863]"/>
				<param name="value" value="ListItem.PictureAuthor" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21867]"/>
				<param name="value" value="ListItem.PictureByline" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21868]"/>
				<param name="value" value="ListItem.PictureBylineTitle" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21822]"/>
				<param name="value" value="ListItem.PictureCamMake" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21823]"/>
				<param name="value" value="ListItem.PictureCamModel" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21862]"/>
				<param name="value" value="ListItem.PictureCaption" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21866]"/>
				<param name="value" value="ListItem.PictureCategory" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21839]"/>
				<param name="value" value="ListItem.PictureCCDWidth" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21873]"/>
				<param name="value" value="ListItem.PictureCity" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21807]"/>
				<param name="value" value="ListItem.PictureColour" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21839]"/>
				<param name="value" value="ListItem.PictureComment" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21871]"/>
				<param name="value" value="ListItem.PictureCopyrightNotice" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21875]"/>
				<param name="value" value="ListItem.PictureCountry" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21879]"/>
				<param name="value" value="ListItem.PictureCountryCode" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21869]"/>
				<param name="value" value="ListItem.PictureCredit" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21821]"/>
				<param name="value" value="ListItem.PictureDesc" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21838]"/>
				<param name="value" value="ListItem.PictureDigitalZoom" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21832]"/>
				<param name="value" value="ListItem.PictureExpMode" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21829]"/>
				<param name="value" value="ListItem.PictureExposure" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21831]"/>
				<param name="value" value="ListItem.PictureExposureBias" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21830]"/>
				<param name="value" value="ListItem.PictureExpTime" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21833]"/>
				<param name="value" value="ListItem.PictureFlashUsed" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21827]"/>
				<param name="value" value="ListItem.PictureFocalLen" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21828]"/>
				<param name="value" value="ListItem.PictureFocusDist" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21834]"/>
				<param name="value" value="ListItem.PictureWhiteBalance" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21840]"/>
				<param name="value" value="ListItem.PictureGPSLat" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21841]"/>
				<param name="value" value="ListItem.PictureGPSLon" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21842]"/>
				<param name="value" value="ListItem.PictureGPSAlt" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21864]"/>
				<param name="value" value="ListItem.PictureHeadline" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21858]"/>
				<param name="value" value="ListItem.PictureImageType" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21837]"/>
				<param name="value" value="ListItem.PictureISO" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21861]"/>
				<param name="value" value="ListItem.PictureKeywords" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21843]"/>
				<param name="value" value="$INFO[ListItem.PictureOrientation]" />
			</include>
			<include name="PicsInfoLine">
				<param name="label" value="$LOCALIZE[21808]"/>
				<param name="value" value="$INFO[ListItem.PictureProcess]" />
			</include>
		</control>
	</include>
</includes>